from _typeshed import Incomplete
from typing import Any

DefaultOption: DefaultOptionType
FIELD_OPTIONS: set
F_DYNAMIC: Option
F_SEQUENTIAL: Option
HOST_ARCH: Arch
InvalidDefault: InvalidDefaultType
NATIVE_ENDIAN: Endian
STRUCT_OPTIONS: set
S_DISCARD_CONST: Option
S_DISCARD_UNNAMED: Option
S_EVAL_ANNOTATIONS: Option
S_REPLACE_TYPES: Option
S_SLOTS: Option
S_UNION: Option

class Arch:
    name: Incomplete
    ptr_size: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def __call__(self, *args, **kwargs): ...
    def __hash__(self) -> int: ...

class BinaryExpr:
    expr: Incomplete
    lhs: Incomplete
    rhs: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def __call__(self, *args, **kwargs): ...

class Context(dict):
    def __init__(self, *args, **kwargs) -> None: ...
    def __context_getattr__(self, *args, **kwargs): ...

class ContextPath:
    path: Incomplete
    def __init__(self, path) -> Any: ...
    def __add__(self, other): ...
    def __and__(self, other): ...
    def __call__(self, *args, **kwargs): ...
    def __eq__(self, other: object) -> bool: ...
    def __floordiv__(self, other): ...
    def __ge__(self, other: object) -> bool: ...
    def __gt__(self, other: object) -> bool: ...
    def __hash__(self) -> int: ...
    def __invert__(self): ...
    def __le__(self, other: object) -> bool: ...
    def __lshift__(self, other): ...
    def __lt__(self, other: object) -> bool: ...
    def __matmul__(self, *args, **kwargs): ...
    def __mod__(self, other): ...
    def __mul__(self, other): ...
    def __ne__(self, other: object) -> bool: ...
    def __neg__(self): ...
    def __or__(self, other): ...
    def __pos__(self): ...
    def __pow__(self, other): ...
    def __radd__(self, other): ...
    def __rand__(self, other): ...
    def __rfloordiv__(self, other): ...
    def __rlshift__(self, other): ...
    def __rmatmul__(self, *args, **kwargs): ...
    def __rmod__(self, other): ...
    def __rmul__(self, other): ...
    def __ror__(self, other): ...
    def __rpow__(self, other): ...
    def __rrshift__(self, other): ...
    def __rshift__(self, other): ...
    def __rsub__(self, other): ...
    def __rtruediv__(self, other): ...
    def __rxor__(self, other): ...
    def __size__(self, *args, **kwargs): ...
    def __sub__(self, other): ...
    def __truediv__(self, other): ...
    def __type__(self, *args, **kwargs): ...
    def __xor__(self, other): ...

class DefaultOptionType:
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...

class Endian:
    ch: Incomplete
    name: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __ge__(self, other: object) -> bool: ...
    def __gt__(self, other: object) -> bool: ...
    def __hash__(self) -> int: ...
    def __le__(self, other: object) -> bool: ...
    def __lt__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...

class Field:
    arch: Incomplete
    atom: Incomplete
    condition: Incomplete
    default: Incomplete
    endian: Incomplete
    length: Incomplete
    name: Incomplete
    offset: Incomplete
    options: Incomplete
    switch: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def __add__(self, other): ...
    def __floordiv__(self, other): ...
    def __getitem__(self, index): ...
    def __matmul__(self, *args, **kwargs): ...
    def __or__(self, other): ...
    def __radd__(self, other): ...
    def __rfloordiv__(self, other): ...
    def __rmatmul__(self, *args, **kwargs): ...
    def __ror__(self, other): ...
    def __rrshift__(self, other): ...
    def __rshift__(self, other): ...
    def __rxor__(self, other): ...
    def __xor__(self, other): ...

class InvalidDefaultType:
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...

class Option:
    name: Incomplete
    value: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __ge__(self, other: object) -> bool: ...
    def __gt__(self, other: object) -> bool: ...
    def __hash__(self) -> int: ...
    def __le__(self, other: object) -> bool: ...
    def __lt__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...

class State:
    globals: Incomplete
    io: Incomplete
    offset_table: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def read(self, *args, **kwargs): ...
    def seek(self, *args, **kwargs): ...
    def tell(self, *args, **kwargs): ...
    def write(self, *args, **kwargs): ...

class Struct(fieldatom):
    members: Incomplete
    model: Incomplete
    options: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...

class UnaryExpr:
    expr: Incomplete
    value: Incomplete
    def __init__(self, expr, value) -> Any: ...
    def __call__(self, *args, **kwargs): ...
    def __hash__(self) -> int: ...

class atom:
    def __init__(self, *args, **kwargs) -> None: ...
    def __pack__(self, obj, ctx) -> Any: ...
    def __size__(self, ctx) -> Any: ...
    def __type__(self) -> Any: ...
    def __unpack__(self, ctx) -> Any: ...

class catom(atom):
    def __init__(self, *args, **kwargs) -> None: ...
    def __pack__(self, *args, **kwargs): ...
    def __pack_many__(self, *args, **kwargs): ...
    def __size__(self, *args, **kwargs): ...
    def __type__(self, *args, **kwargs): ...
    def __unpack__(self, *args, **kwargs): ...
    def __unpack_many__(self, *args, **kwargs): ...

class fieldatom(atom):
    def __init__(self, *args, **kwargs) -> None: ...
    def __add__(self, other): ...
    def __floordiv__(self, other): ...
    def __getitem__(self, index): ...
    def __matmul__(self, *args, **kwargs): ...
    def __or__(self, other): ...
    def __radd__(self, other): ...
    def __rfloordiv__(self, other): ...
    def __rmatmul__(self, *args, **kwargs): ...
    def __ror__(self, other): ...
    def __rrshift__(self, other): ...
    def __rshift__(self, other): ...
    def __rxor__(self, other): ...
    def __xor__(self, other): ...

class fieldcatom(catom):
    def __init__(self, *args, **kwargs) -> None: ...
    def __add__(self, other): ...
    def __floordiv__(self, other): ...
    def __getitem__(self, index): ...
    def __matmul__(self, *args, **kwargs): ...
    def __or__(self, other): ...
    def __radd__(self, other): ...
    def __rfloordiv__(self, other): ...
    def __rmatmul__(self, *args, **kwargs): ...
    def __ror__(self, other): ...
    def __rrshift__(self, other): ...
    def __rshift__(self, other): ...
    def __rxor__(self, other): ...
    def __xor__(self, other): ...

class fieldinfo:
    excluded: Incomplete
    field: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...

class intatom(fieldcatom):
    bytes: Incomplete
    little_endian: Incomplete
    signed: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...

class layer:
    field: Incomplete
    greedy: Incomplete
    index: Incomplete
    length: Incomplete
    obj: Incomplete
    parent: Incomplete
    path: Incomplete
    sequence: Incomplete
    sequential: Incomplete
    state: Incomplete
    value: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def __context_getattr__(self, *args, **kwargs): ...

def pack(*args, **kwargs): ...
def pack_into(*args, **kwargs): ...
def sizeof(*args, **kwargs): ...
def typeof(*args, **kwargs): ...
def unpack(*args, **kwargs): ...
