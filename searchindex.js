Search.setIndex({"alltitles": {"Abstract Objects Layer": [[18, "abstract-objects-layer"]], "Abstract base classes": [[5, "abstract-base-classes"]], "Advanced Concepts": [[35, "advanced-concepts"]], "Architecture": [[6, "architecture"]], "Arrays/Lists": [[36, "arrays-lists"]], "Atom Objects": [[23, "atom-objects"]], "Atom Protocol": [[19, "atom-protocol"]], "Base classes": [[16, "base-classes"]], "Basic Concepts": [[36, "basic-concepts"]], "Basic Core classes": [[15, null]], "Basic structs": [[11, "basic-structs"]], "Behaviour of structs and sequences": [[31, "id7"]], "BitField": [[31, "bitfield"]], "BitField specific methods": [[31, "bitfield-specific-methods"]], "BitFields": [[35, "bitfields"]], "Bool Atoms": [[20, "bool-atoms"]], "Byte Sequences": [[36, "byte-sequences"]], "Byteorder": [[6, "id1"]], "Byteorder and Architecture": [[6, "byteorder-and-architecture"]], "Bytes": [[36, "bytes"]], "Bytes, Strings": [[10, "bytes-strings"]], "C API": [[15, null]], "C API Reference": [[28, null]], "C Reference": [[32, null]], "CString": [[36, "cstring"]], "Caterpillar C API Reference": [[28, "caterpillar-c-api-reference"]], "Chaining": [[35, "chaining"]], "Challenge": [[36, null], [36, null], [36, null], [37, null]], "Changelog": [[0, "changelog"]], "Char Atoms": [[21, "char-atoms"]], "Common Structs": [[10, "common-structs"]], "Comparison": [[33, "comparison"]], "Compression": [[36, "compression"]], "Compression Structs": [[11, "compression-structs"]], "Computed": [[36, "computed"]], "Concrete Objects Layer": [[29, "concrete-objects-layer"]], "Conditional fields": [[35, "conditional-fields"]], "Configuring structs": [[37, "configuring-structs"]], "Const": [[36, "const"]], "ConstBytes": [[36, "constbytes"]], "Constants": [[36, "constants"]], "Contents:": [[14, null]], "Context": [[5, "context"], [8, "context"], [31, "context"], [36, "context"]], "Context Protocol": [[26, "context-protocol"]], "Context and Exceptions": [[15, null]], "Context classes": [[8, "context-classes"]], "Context lambda": [[31, "context-lambda"]], "Context path": [[31, "context-path"], [34, "context-path"]], "Context specific operations": [[34, "context-specific-operations"]], "Contribution Guidelines": [[1, "contribution-guidelines"]], "Core structs": [[12, "core-structs"]], "Cryptographic Structs": [[12, "cryptographic-structs"]], "Custom Operators": [[35, "custom-operators"]], "Custom-sized integer": [[36, "custom-sized-integer"]], "Customizing the object\u2019s byteorder": [[31, "customizing-the-object-s-byteorder"]], "Customizing the struct\u2019s type": [[31, "customizing-the-struct-s-type"]], "Data Model": [[31, "data-model"]], "Defining structs": [[37, "defining-structs"]], "Developer\u2019s note": [[31, null], [34, null]], "Development": [[2, "development"]], "Documenting structs": [[37, "documenting-structs"]], "Emulating Struct Types": [[31, "emulating-struct-types"]], "Endian / Byteorder": [[7, "endian-byteorder"]], "Enumerations": [[36, "enumerations"]], "Exceptions": [[9, "exceptions"]], "Expressions": [[8, "expressions"]], "Field": [[31, "field"]], "Field Model": [[13, "field-model"]], "Field options": [[17, "field-options"]], "Field specific operations": [[34, "field-specific-operations"]], "Fields": [[14, "fields"]], "First Steps": [[37, "first-steps"]], "Float Atoms": [[22, "float-atoms"]], "Formal exceptions": [[9, "formal-exceptions"]], "Global options": [[17, "global-options"]], "Greedy": [[31, "greedy"]], "Having a general question?": [[1, "having-a-general-question"]], "Hold up, wait a minute!": [[3, null]], "How does this even work?": [[33, "how-does-this-even-work"]], "Implementation Detail": [[31, null]], "Implementation Note": [[31, null], [31, null]], "Indices and tables": [[3, "indices-and-tables"]], "Installation": [[4, "installation"]], "Integer Atoms": [[24, "integer-atoms"]], "Interface": [[17, "interface"]], "Introduction": [[33, "introduction"]], "Library": [[15, "library"]], "Memory": [[36, "memory"]], "Modifying fields": [[31, "modifying-fields"]], "Next Steps": [[37, "next-steps"]], "Numbers": [[36, "numbers"]], "Numeric Structs": [[10, "numeric-structs"]], "Object sizes between different configuration options": [[17, "id4"]], "Offset": [[35, "offset"]], "Operators": [[34, "operators"], [35, "operators"]], "Options": [[17, "options"]], "Options by type": [[17, "options-by-type"]], "Other base classes": [[5, "other-base-classes"]], "Packing data": [[37, "packing-data"]], "Padding": [[36, "padding"]], "Padding Atoms": [[25, "padding-atoms"]], "Pass": [[36, "pass"]], "Pointers": [[35, "pointers"]], "Prefixed": [[31, "prefixed"], [36, "prefixed"]], "Programmers Note": [[31, null]], "Programmers Note:": [[31, null]], "Pros & Cons": [[33, "pros-cons"]], "Python Reference": [[32, null]], "Recommendations": [[24, "recommendations"]], "Reference": [[32, "reference"]], "Roadmap": [[38, null]], "Running Tests": [[1, "running-tests"]], "Runtime Performance": [[20, "runtime-performance"], [21, "runtime-performance"], [22, "runtime-performance"], [25, "runtime-performance"]], "Runtime exceptions": [[9, "runtime-exceptions"]], "Runtime length of objects": [[36, "runtime-length-of-objects"]], "Sequence": [[31, "sequence"]], "Sequence options": [[17, "sequence-options"]], "Sequence specific operators": [[34, "sequence-specific-operators"]], "Special Attributes": [[8, "special-attributes"]], "Special Structs": [[10, "special-structs"]], "Special method names": [[31, "special-method-names"]], "Special paths": [[8, "special-paths"]], "Specials": [[36, "specials"]], "Standard Structs": [[36, "standard-structs"]], "Standard Types": [[31, "standard-types"], [36, "standard-types"]], "Standard functions": [[16, "standard-functions"]], "Standard interface": [[5, "standard-interface"], [12, "standard-interface"]], "String": [[36, "string"]], "String Types": [[36, "string-types"]], "Struct": [[5, "struct"], [31, "struct"]], "Struct Model": [[16, "struct-model"]], "Struct Objects": [[30, "struct-objects"]], "Struct containers": [[31, "struct-containers"]], "Struct model": [[15, null]], "Struct operators": [[34, "struct-operators"]], "Struct options": [[17, "struct-options"]], "Structs, Sequences and Fields": [[31, "structs-sequences-and-fields"]], "Submit a new Feature": [[1, "submit-a-new-feature"]], "Submit an Issue": [[1, "submit-an-issue"]], "Supported compression types": [[11, "supported-compression-types"]], "Switch": [[35, "switch"]], "Template Containers": [[31, "template-containers"]], "Templates": [[16, "templates"], [31, "templates"], [35, "templates"]], "The End!": [[35, "the-end"]], "Tutorial": [[38, "tutorial"]], "Union": [[31, "union"]], "Unions": [[35, "unions"]], "Unpacking data": [[37, "unpacking-data"]], "Using the C API": [[27, "using-the-c-api"]], "Variable-sized integer": [[36, "variable-sized-integer"]], "Welcome to Caterpillar\u2019s documentation!": [[3, "welcome-to-caterpillar-s-documentation"]], "What exactly is a caterpillar?": [[33, null]], "What is endianess?": [[37, null]], "Where to start?": [[3, "where-to-start"]], "Whetting Your Appetite": [[3, "whetting-your-appetite"]], "Why use Caterpillar?": [[33, "why-use-caterpillar"]], "Working with structs": [[37, "working-with-structs"]]}, "docnames": ["development/changelog", "development/contribution", "development/index", "index", "installing/index", "library/abc", "library/byteorder", "library/capi/endian", "library/context", "library/exceptions", "library/fields/common", "library/fields/compression", "library/fields/crypto", "library/fields/field_model", "library/fields/index", "library/index", "library/model", "library/options", "reference/capi/abstract", "reference/capi/atom", "reference/capi/atoms/boolatom", "reference/capi/atoms/charatom", "reference/capi/atoms/floatatom", "reference/capi/atoms/index", "reference/capi/atoms/intatom", "reference/capi/atoms/paddingatom", "reference/capi/context", "reference/capi/extension", "reference/capi/index", "reference/capi/objimpl", "reference/capi/struct", "reference/datamodel", "reference/index", "reference/introduction", "reference/operators", "tutorial/advanced", "tutorial/basics", "tutorial/first_steps", "tutorial/index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["development/changelog.rst", "development/contribution.rst", "development/index.rst", "index.rst", "installing/index.rst", "library/abc.rst", "library/byteorder.rst", "library/capi/endian.rst", "library/context.rst", "library/exceptions.rst", "library/fields/common.rst", "library/fields/compression.rst", "library/fields/crypto.rst", "library/fields/field_model.rst", "library/fields/index.rst", "library/index.rst", "library/model.rst", "library/options.rst", "reference/capi/abstract.rst", "reference/capi/atom.rst", "reference/capi/atoms/boolatom.rst", "reference/capi/atoms/charatom.rst", "reference/capi/atoms/floatatom.rst", "reference/capi/atoms/index.rst", "reference/capi/atoms/intatom.rst", "reference/capi/atoms/paddingatom.rst", "reference/capi/context.rst", "reference/capi/extension.rst", "reference/capi/index.rst", "reference/capi/objimpl.rst", "reference/capi/struct.rst", "reference/datamodel.rst", "reference/index.rst", "reference/introduction.rst", "reference/operators.rst", "tutorial/advanced.rst", "tutorial/basics.rst", "tutorial/first_steps.rst", "tutorial/index.rst"], "indexentries": {"__and__() (caterpillar.fields.chain method)": [[13, "caterpillar.fields.Chain.__and__", false]], "__bits__ (caterpillar.fields.fieldstruct attribute)": [[13, "caterpillar.fields.FieldStruct.__bits__", false]], "__bits__() (object method)": [[31, "object.__bits__", false]], "__byteorder__ (caterpillar.fields.fieldstruct attribute)": [[13, "caterpillar.fields.FieldStruct.__byteorder__", false]], "__byteorder__ (object attribute)": [[31, "object.__byteorder__", false]], "__init__() (caterpillar.fields.chain method)": [[13, "caterpillar.fields.Chain.__init__", false]], "__name__ (field attribute)": [[31, "field.__name__", false]], "__pack__() (caterpillar.fields.fieldstruct method)": [[13, "caterpillar.fields.FieldStruct.__pack__", false]], "__pack__() (object method)": [[31, "object.__pack__", false]], "__rand__() (caterpillar.fields.chain method)": [[13, "caterpillar.fields.Chain.__rand__", false]], "__repr__() (caterpillar.fields.fieldstruct method)": [[13, "caterpillar.fields.FieldStruct.__repr__", false]], "__set_byteorder__() (object method)": [[31, "object.__set_byteorder__", false]], "__size__() (caterpillar.fields.chain method)": [[13, "caterpillar.fields.Chain.__size__", false]], "__size__() (object method)": [[31, "object.__size__", false]], "__struct__ (class attribute)": [[31, "class.__struct__", false]], "__template__ (class attribute)": [[31, "class.__template__", false]], "__type__() (caterpillar.fields.chain method)": [[13, "caterpillar.fields.Chain.__type__", false]], "__type__() (object method)": [[31, "object.__type__", false]], "__unpack__() (caterpillar.fields.fieldstruct method)": [[13, "caterpillar.fields.FieldStruct.__unpack__", false]], "__unpack__() (object method)": [[31, "object.__unpack__", false]], "_containsstruct (class in caterpillar.abc)": [[5, "caterpillar.abc._ContainsStruct", false]], "_contextlambda (class in caterpillar.abc)": [[5, "caterpillar.abc._ContextLambda", false]], "_contextlike (class in caterpillar.abc)": [[5, "caterpillar.abc._ContextLike", false]], "_enumlike (class in caterpillar.abc)": [[5, "caterpillar.abc._EnumLike", false]], "_structlike (class in caterpillar.abc)": [[5, "caterpillar.abc._StructLike", false]], "_supportspack (class in caterpillar.abc)": [[5, "caterpillar.abc._SupportsPack", false]], "_supportssize (class in caterpillar.abc)": [[5, "caterpillar.abc._SupportsSize", false]], "_supportsunpack (class in caterpillar.abc)": [[5, "caterpillar.abc._SupportsUnpack", false]], "_switch (class in caterpillar.abc)": [[5, "caterpillar.abc._Switch", false]], "add_field() (caterpillar.model.sequence method)": [[16, "caterpillar.model.Sequence.add_field", false]], "algorithm() (caterpillar.fields.encrypted method)": [[12, "caterpillar.fields.Encrypted.algorithm", false]], "amount (caterpillar.fields.field attribute)": [[13, "caterpillar.fields.Field.amount", false]], "apply() (caterpillar.byteorder.byteorder method)": [[6, "caterpillar.byteorder.ByteOrder.apply", false]], "arch (caterpillar.fields.field attribute)": [[13, "caterpillar.fields.Field.arch", false]], "arch (caterpillar.model.sequence attribute)": [[16, "caterpillar.model.Sequence.arch", false]], "arch (class in caterpillar.byteorder)": [[6, "caterpillar.byteorder.Arch", false]], "bigendian (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.BigEndian", false]], "binaryexpression (class in caterpillar.context)": [[8, "caterpillar.context.BinaryExpression", false]], "bitfield (class in caterpillar.model)": [[16, "caterpillar.model.BitField", false]], "bitfield() (in module caterpillar.model)": [[16, "caterpillar.model.bitfield", false]], "bitfieldgroup (class in caterpillar.model)": [[16, "caterpillar.model.BitFieldGroup", false]], "bits (caterpillar.fields.field attribute)": [[13, "caterpillar.fields.Field.bits", false]], "boolean (caterpillar.fields attribute)": [[10, "caterpillar.fields.boolean", false]], "built-in function": [[26, "object.__context_getattr__", false], [31, "object.__call__", false], [34, "field.__ior__", false], [34, "field.__ixor__", false], [34, "field.__or__", false], [34, "field.__xor__", false], [34, "path.__call__", false], [34, "path.__getitem__", false], [34, "sequence.__add__", false], [34, "sequence.__iadd__", false], [34, "sequence.__isub__", false], [34, "sequence.__sub__", false], [34, "struct.__and__", false], [34, "struct.__floordiv__", false], [34, "struct.__getitem__", false], [34, "struct.__matmul__", false], [34, "struct.__rshift__", false], [34, "struct.__rsub__", false]], "byteorder (class in caterpillar.byteorder)": [[6, "caterpillar.byteorder.ByteOrder", false]], "byteorder() (in module caterpillar.byteorder)": [[6, "caterpillar.byteorder.byteorder", false]], "byteorder.alignment (class in caterpillar.byteorder)": [[6, "caterpillar.byteorder.ByteOrder.Alignment", false]], "byteorder.size (class in caterpillar.byteorder)": [[6, "caterpillar.byteorder.ByteOrder.Size", false]], "byteorder_field (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.BYTEORDER_FIELD", false]], "bytes (class in caterpillar.fields)": [[10, "caterpillar.fields.Bytes", false]], "bz2compressed() (in module caterpillar.fields)": [[11, "caterpillar.fields.Bz2Compressed", false]], "caterpillar.options.o_array_factory (built-in variable)": [[17, "caterpillar.options.O_ARRAY_FACTORY", false]], "caterpillar.options.s_discard_const (built-in variable)": [[17, "caterpillar.options.S_DISCARD_CONST", false]], "caterpillar.options.s_discard_unnamed (built-in variable)": [[17, "caterpillar.options.S_DISCARD_UNNAMED", false]], "caterpillar.options.s_eval_annotations (built-in variable)": [[17, "caterpillar.options.S_EVAL_ANNOTATIONS", false]], "caterpillar.options.s_replace_types (built-in variable)": [[17, "caterpillar.options.S_REPLACE_TYPES", false]], "caterpillar.options.s_slots (built-in variable)": [[17, "caterpillar.options.S_SLOTS", false]], "caterpillar.options.s_union (built-in variable)": [[17, "caterpillar.options.S_UNION", false]], "chain (class in caterpillar.fields)": [[13, "caterpillar.fields.Chain", false]], "char (caterpillar.fields attribute)": [[10, "caterpillar.fields.char", false]], "compressed (class in caterpillar.fields)": [[11, "caterpillar.fields.Compressed", false]], "computed (class in caterpillar.fields)": [[10, "caterpillar.fields.Computed", false]], "condition (caterpillar.fields.field attribute)": [[13, "caterpillar.fields.Field.condition", false]], "conditioncontext (class in caterpillar.context)": [[8, "caterpillar.context.ConditionContext", false]], "configure() (in module caterpillar.options)": [[17, "caterpillar.options.configure", false]], "const (class in caterpillar.fields)": [[10, "caterpillar.fields.Const", false]], "constbytes (class in caterpillar.fields)": [[10, "caterpillar.fields.ConstBytes", false]], "conststring (class in caterpillar.fields)": [[10, "caterpillar.fields.ConstString", false]], "context (class in caterpillar.context)": [[8, "caterpillar.context.Context", false]], "contextlength (class in caterpillar.context)": [[8, "caterpillar.context.ContextLength", false]], "contextpath (class in caterpillar.context)": [[8, "caterpillar.context.ContextPath", false]], "cpatom_callpack (c function)": [[19, "c.CpAtom_CallPack", false]], "cpatom_callsize (c function)": [[19, "c.CpAtom_CallSize", false]], "cpatom_canpack (c function)": [[19, "c.CpAtom_CanPack", false]], "cpatom_canunpack (c function)": [[19, "c.CpAtom_CanUnpack", false]], "cpatom_fastcanpack (c function)": [[19, "c.CpAtom_FastCanPack", false]], "cpatom_fastcanunpack (c function)": [[19, "c.CpAtom_FastCanUnpack", false]], "cpatom_fasthassize (c function)": [[19, "c.CpAtom_FastHasSize", false]], "cpatom_fasthastype (c function)": [[19, "c.CpAtom_FastHasType", false]], "cpatom_hassize (c function)": [[19, "c.CpAtom_HasSize", false]], "cpatom_hastype (c function)": [[19, "c.CpAtom_HasType", false]], "cpatom_type (c var)": [[19, "c.CpAtom_Type", false]], "cpatomobject (c type)": [[19, "c.CpAtomObject", false]], "cpboolatom_pack (c function)": [[20, "c.CpBoolAtom_Pack", false]], "cpboolatom_type (c var)": [[20, "c.CpBoolAtom_Type", false]], "cpboolatom_unpack (c function)": [[20, "c.CpBoolAtom_Unpack", false]], "cpboolatomobject (c type)": [[20, "c.CpBoolAtomObject", false]], "cpcharatom_pack (c function)": [[21, "c.CpCharAtom_Pack", false]], "cpcharatom_type (c var)": [[21, "c.CpCharAtom_Type", false]], "cpcharatom_unpack (c function)": [[21, "c.CpCharAtom_Unpack", false]], "cpcharatomobject (c type)": [[21, "c.CpCharAtomObject", false]], "cpfloatatom_pack (c function)": [[22, "c.CpFloatAtom_Pack", false]], "cpfloatatom_type (c var)": [[22, "c.CpFloatAtom_Type", false]], "cpfloatatom_unpack (c function)": [[22, "c.CpFloatAtom_Unpack", false]], "cpfloatatomobject (c type)": [[22, "c.CpFloatAtomObject", false]], "cpintatom_type (c var)": [[24, "c.CpIntAtom_Type", false]], "cpintatomobject (c type)": [[24, "c.CpIntAtomObject", false]], "cpintatomobject._m_little_endian (c var)": [[24, "c.CpIntAtomObject._m_little_endian", false]], "cpintatomobject._m_signed (c var)": [[24, "c.CpIntAtomObject._m_signed", false]], "cpintatomobject.m_byte_count (c var)": [[24, "c.CpIntAtomObject.m_byte_count", false]], "cppaddingatom_pack (c function)": [[25, "c.CpPaddingAtom_Pack", false]], "cppaddingatom_packmany (c function)": [[25, "c.CpPaddingAtom_PackMany", false]], "cppaddingatom_type (c var)": [[25, "c.CpPaddingAtom_Type", false]], "cppaddingatom_unpack (c function)": [[25, "c.CpPaddingAtom_Unpack", false]], "cppaddingatom_unpackmany (c function)": [[25, "c.CpPaddingAtom_UnpackMany", false]], "cppaddingatomobject (c type)": [[25, "c.CpPaddingAtomObject", false]], "cpstruct_addfield (c function)": [[30, "c.CpStruct_AddField", false]], "cpstruct_getannotations (c function)": [[30, "c.CpStruct_GetAnnotations", false]], "cpstruct_new (c function)": [[30, "c.CpStruct_New", false]], "cpstruct_type (c var)": [[30, "c.CpStruct_Type", false]], "cpstructfieldinfo_type (c var)": [[30, "c.CpStructFieldInfo_Type", false]], "cpstructfieldinfoobject (c type)": [[30, "c.CpStructFieldInfoObject", false]], "cpstructmodel_check (c function)": [[30, "c.CpStructModel_Check", false]], "cpstructmodel_getstruct (c function)": [[30, "c.CpStructModel_GetStruct", false]], "cpstructobject (c type)": [[30, "c.CpStructObject", false]], "cstring (class in caterpillar.fields)": [[10, "caterpillar.fields.CString", false]], "ctx": [[31, "ctx", false]], "ctx (caterpillar.context attribute)": [[8, "caterpillar.context.ctx", false]], "ctx_field": [[31, "CTX_FIELD", false]], "ctx_field (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_FIELD", false]], "ctx_index": [[31, "CTX_INDEX", false]], "ctx_index (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_INDEX", false]], "ctx_object": [[31, "CTX_OBJECT", false]], "ctx_object (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_OBJECT", false]], "ctx_offsets": [[31, "CTX_OFFSETS", false]], "ctx_offsets (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_OFFSETS", false]], "ctx_parent": [[31, "CTX_PARENT", false]], "ctx_parent (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_PARENT", false]], "ctx_path": [[31, "CTX_PATH", false]], "ctx_path (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_PATH", false]], "ctx_pos": [[31, "CTX_POS", false]], "ctx_pos (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_POS", false]], "ctx_seq (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_SEQ", false]], "ctx_stream": [[31, "CTX_STREAM", false]], "ctx_stream (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_STREAM", false]], "ctx_value": [[31, "CTX_VALUE", false]], "ctx_value (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_VALUE", false]], "decode() (caterpillar.fields.compressed method)": [[11, "caterpillar.fields.Compressed.decode", false]], "decode() (caterpillar.fields.const method)": [[10, "caterpillar.fields.Const.decode", false]], "decode() (caterpillar.fields.enum method)": [[10, "caterpillar.fields.Enum.decode", false]], "decode() (caterpillar.fields.transformer method)": [[10, "caterpillar.fields.Transformer.decode", false]], "default (caterpillar.fields.field attribute)": [[13, "caterpillar.fields.Field.default", false]], "del_field() (caterpillar.model.sequence method)": [[16, "caterpillar.model.Sequence.del_field", false]], "delegationerror (class in caterpillar.exception)": [[9, "caterpillar.exception.DelegationError", false]], "derive() (in module caterpillar.model)": [[16, "caterpillar.model.derive", false]], "dynamicsizeerror (class in caterpillar.exception)": [[9, "caterpillar.exception.DynamicSizeError", false]], "elseif (class in caterpillar.fields)": [[13, "caterpillar.fields.ElseIf", false]], "encode() (caterpillar.fields.compressed method)": [[11, "caterpillar.fields.Compressed.encode", false]], "encode() (caterpillar.fields.const method)": [[10, "caterpillar.fields.Const.encode", false]], "encode() (caterpillar.fields.enum method)": [[10, "caterpillar.fields.Enum.encode", false]], "encode() (caterpillar.fields.transformer method)": [[10, "caterpillar.fields.Transformer.encode", false]], "encrypted (class in caterpillar.fields)": [[12, "caterpillar.fields.Encrypted", false]], "enum (class in caterpillar.fields)": [[10, "caterpillar.fields.Enum", false]], "exprmixin (class in caterpillar.context)": [[8, "caterpillar.context.ExprMixin", false]], "f_dynamic (caterpillar.options attribute)": [[17, "caterpillar.options.F_DYNAMIC", false]], "f_keep_position (caterpillar.options attribute)": [[17, "caterpillar.options.F_KEEP_POSITION", false]], "f_offset_override (caterpillar.options attribute)": [[17, "caterpillar.options.F_OFFSET_OVERRIDE", false]], "f_sequential (caterpillar.options attribute)": [[17, "caterpillar.options.F_SEQUENTIAL", false]], "field (class in caterpillar.fields)": [[13, "caterpillar.fields.Field", false]], "field.__ior__()": [[34, "field.__ior__", false]], "field.__ixor__()": [[34, "field.__ixor__", false]], "field.__or__()": [[34, "field.__or__", false]], "field.__xor__()": [[34, "field.__xor__", false]], "field_kwds (caterpillar.model.templatetypevar attribute)": [[16, "caterpillar.model.TemplateTypeVar.field_kwds", false]], "field_options (caterpillar.model.sequence attribute)": [[16, "caterpillar.model.Sequence.field_options", false]], "fieldmixin (class in caterpillar.fields)": [[13, "caterpillar.fields.FieldMixin", false]], "fields (caterpillar.model.sequence attribute)": [[16, "caterpillar.model.Sequence.fields", false]], "fieldstruct (class in caterpillar.fields)": [[13, "caterpillar.fields.FieldStruct", false]], "flag (class in caterpillar.options)": [[17, "caterpillar.options.Flag", false]], "flags (caterpillar.fields.field attribute)": [[13, "caterpillar.fields.Field.flags", false]], "float16 (caterpillar.fields attribute)": [[10, "caterpillar.fields.float16", false]], "float32 (caterpillar.fields attribute)": [[10, "caterpillar.fields.float32", false]], "float64 (caterpillar.fields attribute)": [[10, "caterpillar.fields.float64", false]], "formatfield (class in caterpillar.fields)": [[10, "caterpillar.fields.FormatField", false]], "get_flag() (in module caterpillar.options)": [[17, "caterpillar.options.get_flag", false]], "get_flags() (in module caterpillar.options)": [[17, "caterpillar.options.get_flags", false]], "get_instance() (caterpillar.fields.encrypted method)": [[12, "caterpillar.fields.Encrypted.get_instance", false]], "get_offset() (caterpillar.fields.field method)": [[13, "caterpillar.fields.Field.get_offset", false]], "get_struct() (caterpillar.fields.field method)": [[13, "caterpillar.fields.Field.get_struct", false]], "get_type() (caterpillar.fields.field method)": [[13, "caterpillar.fields.Field.get_type", false]], "getstruct() (in module caterpillar.abc)": [[5, "caterpillar.abc.getstruct", false]], "has_condition() (caterpillar.fields.field method)": [[13, "caterpillar.fields.Field.has_condition", false]], "has_flag() (caterpillar.fields.field method)": [[13, "caterpillar.fields.Field.has_flag", false]], "has_flag() (in module caterpillar.options)": [[17, "caterpillar.options.has_flag", false]], "has_option() (caterpillar.model.sequence method)": [[16, "caterpillar.model.Sequence.has_option", false]], "hasstruct() (in module caterpillar.abc)": [[5, "caterpillar.abc.hasstruct", false]], "head (caterpillar.fields.chain property)": [[13, "caterpillar.fields.Chain.head", false]], "if (class in caterpillar.fields)": [[13, "caterpillar.fields.If", false]], "int (class in caterpillar.fields)": [[10, "caterpillar.fields.Int", false]], "int16 (caterpillar.fields attribute)": [[10, "caterpillar.fields.int16", false]], "int32 (caterpillar.fields attribute)": [[10, "caterpillar.fields.int32", false]], "int64 (caterpillar.fields attribute)": [[10, "caterpillar.fields.int64", false]], "int8 (caterpillar.fields attribute)": [[10, "caterpillar.fields.int8", false]], "invalidvalueerror (class in caterpillar.exception)": [[9, "caterpillar.exception.InvalidValueError", false]], "is_enabled() (caterpillar.fields.field method)": [[13, "caterpillar.fields.Field.is_enabled", false]], "is_padding() (caterpillar.fields.formatfield method)": [[10, "caterpillar.fields.FormatField.is_padding", false]], "is_seq() (caterpillar.fields.field method)": [[13, "caterpillar.fields.Field.is_seq", false]], "istemplate() (in module caterpillar.model)": [[16, "caterpillar.model.istemplate", false]], "length() (caterpillar.fields.field method)": [[13, "caterpillar.fields.Field.length", false]], "littleendian (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.LittleEndian", false]], "lzmacompressed() (in module caterpillar.fields)": [[11, "caterpillar.fields.LZMACompressed", false]], "lzocompressed() (in module caterpillar.fields)": [[11, "caterpillar.fields.LZOCompressed", false]], "magic (examples.formats.nibarchive.object.nibheader.nibheader attribute)": [[31, "examples.formats.nibarchive.object.NIBHeader.NIBHeader.magic", false]], "max_size (caterpillar.model.unionhook attribute)": [[16, "caterpillar.model.UnionHook.max_size", false]], "memory (class in caterpillar.fields)": [[10, "caterpillar.fields.Memory", false]], "mode() (caterpillar.fields.encrypted method)": [[12, "caterpillar.fields.Encrypted.mode", false]], "model (caterpillar.model.sequence attribute)": [[16, "caterpillar.model.Sequence.model", false]], "name (caterpillar.model.templatetypevar attribute)": [[16, "caterpillar.model.TemplateTypeVar.name", false]], "name (caterpillar.options.flag attribute)": [[17, "caterpillar.options.Flag.name", false]], "native (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.Native", false]], "netendian (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.NetEndian", false]], "object.__call__()": [[31, "object.__call__", false]], "object.__context_getattr__()": [[26, "object.__context_getattr__", false]], "object.nibheader (class in examples.formats.nibarchive)": [[31, "examples.formats.nibarchive.object.NIBHeader", false]], "offset (caterpillar.fields.field attribute)": [[13, "caterpillar.fields.Field.offset", false]], "optionerror (class in caterpillar.exception)": [[9, "caterpillar.exception.OptionError", false]], "options (caterpillar.fields.field attribute)": [[13, "caterpillar.fields.Field.options", false]], "options (caterpillar.model.sequence attribute)": [[16, "caterpillar.model.Sequence.options", false]], "order (caterpillar.fields.field attribute)": [[13, "caterpillar.fields.Field.order", false]], "order (caterpillar.model.sequence attribute)": [[16, "caterpillar.model.Sequence.order", false]], "pack() (in module caterpillar.model)": [[16, "caterpillar.model.pack", false]], "pack_file() (in module caterpillar.model)": [[16, "caterpillar.model.pack_file", false]], "pack_into() (in module caterpillar.model)": [[16, "caterpillar.model.pack_into", false]], "pack_seq() (caterpillar.fields.fieldstruct method)": [[13, "caterpillar.fields.FieldStruct.pack_seq", false]], "pack_seq() (caterpillar.fields.formatfield method)": [[10, "caterpillar.fields.FormatField.pack_seq", false]], "pack_single() (caterpillar.fields.chain method)": [[13, "caterpillar.fields.Chain.pack_single", false]], "pack_single() (caterpillar.fields.computed method)": [[10, "caterpillar.fields.Computed.pack_single", false]], "pack_single() (caterpillar.fields.cstring method)": [[10, "caterpillar.fields.CString.pack_single", false]], "pack_single() (caterpillar.fields.encrypted method)": [[12, "caterpillar.fields.Encrypted.pack_single", false]], "pack_single() (caterpillar.fields.fieldstruct method)": [[13, "caterpillar.fields.FieldStruct.pack_single", false]], "pack_single() (caterpillar.fields.formatfield method)": [[10, "caterpillar.fields.FormatField.pack_single", false]], "pack_single() (caterpillar.fields.int method)": [[10, "caterpillar.fields.Int.pack_single", false]], "pack_single() (caterpillar.fields.memory method)": [[10, "caterpillar.fields.Memory.pack_single", false]], "pack_single() (caterpillar.fields.prefixed method)": [[10, "caterpillar.fields.Prefixed.pack_single", false]], "pack_single() (caterpillar.fields.transformer method)": [[10, "caterpillar.fields.Transformer.pack_single", false]], "pack_single() (caterpillar.fields.varint method)": [[10, "caterpillar.fields.VarInt.pack_single", false]], "padding (caterpillar.fields attribute)": [[10, "caterpillar.fields.padding", false]], "padding() (caterpillar.fields.encrypted method)": [[12, "caterpillar.fields.Encrypted.padding", false]], "parent": [[31, "parent", false]], "parent (caterpillar.context attribute)": [[8, "caterpillar.context.parent", false]], "pass (caterpillar.fields attribute)": [[10, "caterpillar.fields.Pass", false]], "path.__call__()": [[34, "path.__call__", false]], "path.__getitem__()": [[34, "path.__getitem__", false]], "prefixed (class in caterpillar.fields)": [[10, "caterpillar.fields.Prefixed", false]], "sequence (class in caterpillar.model)": [[16, "caterpillar.model.Sequence", false]], "sequence.__add__()": [[34, "sequence.__add__", false]], "sequence.__iadd__()": [[34, "sequence.__iadd__", false]], "sequence.__isub__()": [[34, "sequence.__isub__", false]], "sequence.__sub__()": [[34, "sequence.__sub__", false]], "set_field_flags() (in module caterpillar.options)": [[17, "caterpillar.options.set_field_flags", false]], "set_struct_flags() (in module caterpillar.options)": [[17, "caterpillar.options.set_struct_flags", false]], "set_union_flags() (in module caterpillar.options)": [[17, "caterpillar.options.set_union_flags", false]], "size_t (caterpillar.fields attribute)": [[10, "caterpillar.fields.size_t", false]], "ssize_t (caterpillar.fields attribute)": [[10, "caterpillar.fields.ssize_t", false]], "stop (class in caterpillar.exception)": [[9, "caterpillar.exception.Stop", false]], "streamerror (class in caterpillar.exception)": [[9, "caterpillar.exception.StreamError", false]], "string (class in caterpillar.fields)": [[10, "caterpillar.fields.String", false]], "struct (caterpillar.fields.field attribute)": [[13, "caterpillar.fields.Field.struct", false]], "struct (caterpillar.model.unionhook attribute)": [[16, "caterpillar.model.UnionHook.struct", false]], "struct (class in caterpillar.model)": [[16, "caterpillar.model.Struct", false]], "struct() (in module caterpillar.model)": [[16, "caterpillar.model.struct", false]], "struct.__and__()": [[34, "struct.__and__", false]], "struct.__floordiv__()": [[34, "struct.__floordiv__", false]], "struct.__getitem__()": [[34, "struct.__getitem__", false]], "struct.__matmul__()": [[34, "struct.__matmul__", false]], "struct.__rshift__()": [[34, "struct.__rshift__", false]], "struct.__rsub__()": [[34, "struct.__rsub__", false]], "struct_field (caterpillar.abc attribute)": [[5, "caterpillar.abc.STRUCT_FIELD", false]], "structexception (class in caterpillar.exception)": [[9, "caterpillar.exception.StructException", false]], "sysnative (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.SysNative", false]], "system_arch (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.system_arch", false]], "tail (caterpillar.fields.chain property)": [[13, "caterpillar.fields.Chain.tail", false]], "template() (in module caterpillar.model)": [[16, "caterpillar.model.template", false]], "templatetypevar (class in caterpillar.model)": [[16, "caterpillar.model.TemplateTypeVar", false]], "text (caterpillar.fields.formatfield attribute)": [[10, "caterpillar.fields.FormatField.text", false]], "this": [[31, "this", false]], "this (caterpillar.context attribute)": [[8, "caterpillar.context.this", false]], "transformer (class in caterpillar.fields)": [[10, "caterpillar.fields.Transformer", false]], "ty (caterpillar.fields.formatfield attribute)": [[10, "caterpillar.fields.FormatField.ty", false]], "typeof() (in module caterpillar.abc)": [[5, "caterpillar.abc.typeof", false]], "uint (class in caterpillar.fields)": [[10, "caterpillar.fields.UInt", false]], "uint16 (caterpillar.fields attribute)": [[10, "caterpillar.fields.uint16", false]], "uint32 (caterpillar.fields attribute)": [[10, "caterpillar.fields.uint32", false]], "uint64 (caterpillar.fields attribute)": [[10, "caterpillar.fields.uint64", false]], "uint8 (caterpillar.fields attribute)": [[10, "caterpillar.fields.uint8", false]], "unaryexpression (class in caterpillar.context)": [[8, "caterpillar.context.UnaryExpression", false]], "union() (in module caterpillar.model)": [[16, "caterpillar.model.union", false]], "unionhook (class in caterpillar.model)": [[16, "caterpillar.model.UnionHook", false]], "unpack() (in module caterpillar.model)": [[16, "caterpillar.model.unpack", false]], "unpack_file() (in module caterpillar.model)": [[16, "caterpillar.model.unpack_file", false]], "unpack_seq() (caterpillar.fields.fieldstruct method)": [[13, "caterpillar.fields.FieldStruct.unpack_seq", false]], "unpack_seq() (caterpillar.fields.formatfield method)": [[10, "caterpillar.fields.FormatField.unpack_seq", false]], "unpack_single() (caterpillar.fields.bytes method)": [[10, "caterpillar.fields.Bytes.unpack_single", false]], "unpack_single() (caterpillar.fields.chain method)": [[13, "caterpillar.fields.Chain.unpack_single", false]], "unpack_single() (caterpillar.fields.computed method)": [[10, "caterpillar.fields.Computed.unpack_single", false]], "unpack_single() (caterpillar.fields.cstring method)": [[10, "caterpillar.fields.CString.unpack_single", false]], "unpack_single() (caterpillar.fields.encrypted method)": [[12, "caterpillar.fields.Encrypted.unpack_single", false]], "unpack_single() (caterpillar.fields.fieldstruct method)": [[13, "caterpillar.fields.FieldStruct.unpack_single", false]], "unpack_single() (caterpillar.fields.formatfield method)": [[10, "caterpillar.fields.FormatField.unpack_single", false]], "unpack_single() (caterpillar.fields.int method)": [[10, "caterpillar.fields.Int.unpack_single", false]], "unpack_single() (caterpillar.fields.memory method)": [[10, "caterpillar.fields.Memory.unpack_single", false]], "unpack_single() (caterpillar.fields.prefixed method)": [[10, "caterpillar.fields.Prefixed.unpack_single", false]], "unpack_single() (caterpillar.fields.string method)": [[10, "caterpillar.fields.String.unpack_single", false]], "unpack_single() (caterpillar.fields.transformer method)": [[10, "caterpillar.fields.Transformer.unpack_single", false]], "unpack_single() (caterpillar.fields.varint method)": [[10, "caterpillar.fields.VarInt.unpack_single", false]], "unsupportedoperation (class in caterpillar.exception)": [[9, "caterpillar.exception.UnsupportedOperation", false]], "validationerror (class in caterpillar.exception)": [[9, "caterpillar.exception.ValidationError", false]], "value (caterpillar.options.flag attribute)": [[17, "caterpillar.options.Flag.value", false]], "varint (class in caterpillar.fields)": [[10, "caterpillar.fields.VarInt", false]], "vint (caterpillar.fields attribute)": [[10, "caterpillar.fields.vint", false]], "void_ptr (caterpillar.fields attribute)": [[10, "caterpillar.fields.void_ptr", false]], "zlibcompressed() (in module caterpillar.fields)": [[11, "caterpillar.fields.ZLibCompressed", false]]}, "objects": {"": [[19, 0, 1, "c.CpAtomObject", "CpAtomObject"], [19, 1, 1, "c.CpAtom_CallPack", "CpAtom_CallPack"], [19, 1, 1, "c.CpAtom_CallSize", "CpAtom_CallSize"], [19, 1, 1, "c.CpAtom_CanPack", "CpAtom_CanPack"], [19, 1, 1, "c.CpAtom_CanUnpack", "CpAtom_CanUnpack"], [19, 1, 1, "c.CpAtom_FastCanPack", "CpAtom_FastCanPack"], [19, 1, 1, "c.CpAtom_FastCanUnpack", "CpAtom_FastCanUnpack"], [19, 1, 1, "c.CpAtom_FastHasSize", "CpAtom_FastHasSize"], [19, 1, 1, "c.CpAtom_FastHasType", "CpAtom_FastHasType"], [19, 1, 1, "c.CpAtom_HasSize", "CpAtom_HasSize"], [19, 1, 1, "c.CpAtom_HasType", "CpAtom_HasType"], [19, 3, 1, "c.CpAtom_Type", "CpAtom_Type"], [20, 0, 1, "c.CpBoolAtomObject", "CpBoolAtomObject"], [20, 1, 1, "c.CpBoolAtom_Pack", "CpBoolAtom_Pack"], [20, 3, 1, "c.CpBoolAtom_Type", "CpBoolAtom_Type"], [20, 1, 1, "c.CpBoolAtom_Unpack", "CpBoolAtom_Unpack"], [21, 0, 1, "c.CpCharAtomObject", "CpCharAtomObject"], [21, 1, 1, "c.CpCharAtom_Pack", "CpCharAtom_Pack"], [21, 3, 1, "c.CpCharAtom_Type", "CpCharAtom_Type"], [21, 1, 1, "c.CpCharAtom_Unpack", "CpCharAtom_Unpack"], [22, 0, 1, "c.CpFloatAtomObject", "CpFloatAtomObject"], [22, 1, 1, "c.CpFloatAtom_Pack", "CpFloatAtom_Pack"], [22, 3, 1, "c.CpFloatAtom_Type", "CpFloatAtom_Type"], [22, 1, 1, "c.CpFloatAtom_Unpack", "CpFloatAtom_Unpack"], [24, 0, 1, "c.CpIntAtomObject", "CpIntAtomObject"], [24, 3, 1, "c.CpIntAtom_Type", "CpIntAtom_Type"], [25, 0, 1, "c.CpPaddingAtomObject", "CpPaddingAtomObject"], [25, 1, 1, "c.CpPaddingAtom_Pack", "CpPaddingAtom_Pack"], [25, 1, 1, "c.CpPaddingAtom_PackMany", "CpPaddingAtom_PackMany"], [25, 3, 1, "c.CpPaddingAtom_Type", "CpPaddingAtom_Type"], [25, 1, 1, "c.CpPaddingAtom_Unpack", "CpPaddingAtom_Unpack"], [25, 1, 1, "c.CpPaddingAtom_UnpackMany", "CpPaddingAtom_UnpackMany"], [30, 0, 1, "c.CpStructFieldInfoObject", "CpStructFieldInfoObject"], [30, 3, 1, "c.CpStructFieldInfo_Type", "CpStructFieldInfo_Type"], [30, 1, 1, "c.CpStructModel_Check", "CpStructModel_Check"], [30, 1, 1, "c.CpStructModel_GetStruct", "CpStructModel_GetStruct"], [30, 0, 1, "c.CpStructObject", "CpStructObject"], [30, 1, 1, "c.CpStruct_AddField", "CpStruct_AddField"], [30, 1, 1, "c.CpStruct_GetAnnotations", "CpStruct_GetAnnotations"], [30, 1, 1, "c.CpStruct_New", "CpStruct_New"], [30, 3, 1, "c.CpStruct_Type", "CpStruct_Type"], [31, 4, 1, "", "CTX_FIELD"], [31, 4, 1, "", "CTX_INDEX"], [31, 4, 1, "", "CTX_OBJECT"], [31, 4, 1, "", "CTX_OFFSETS"], [31, 4, 1, "", "CTX_PARENT"], [31, 4, 1, "", "CTX_PATH"], [31, 4, 1, "", "CTX_POS"], [31, 4, 1, "", "CTX_STREAM"], [31, 4, 1, "", "CTX_VALUE"], [31, 4, 1, "", "ctx"], [31, 4, 1, "", "parent"], [31, 4, 1, "", "this"]], "CpAtom_CallPack": [[19, 2, 1, "c.CpAtom_CallPack", "ctx"], [19, 2, 1, "c.CpAtom_CallPack", "name"], [19, 2, 1, "c.CpAtom_CallPack", "o"], [19, 2, 1, "c.CpAtom_CallPack", "self"]], "CpAtom_CallSize": [[19, 2, 1, "c.CpAtom_CallSize", "ctx"], [19, 2, 1, "c.CpAtom_CallSize", "name"], [19, 2, 1, "c.CpAtom_CallSize", "self"]], "CpAtom_CanPack": [[19, 2, 1, "c.CpAtom_CanPack", "o"]], "CpAtom_CanUnpack": [[19, 2, 1, "c.CpAtom_CanUnpack", "o"]], "CpAtom_FastCanPack": [[19, 2, 1, "c.CpAtom_FastCanPack", "o"], [19, 2, 1, "c.CpAtom_FastCanPack", "state"]], "CpAtom_FastCanUnpack": [[19, 2, 1, "c.CpAtom_FastCanUnpack", "o"], [19, 2, 1, "c.CpAtom_FastCanUnpack", "state"]], "CpAtom_FastHasSize": [[19, 2, 1, "c.CpAtom_FastHasSize", "o"], [19, 2, 1, "c.CpAtom_FastHasSize", "state"]], "CpAtom_FastHasType": [[19, 2, 1, "c.CpAtom_FastHasType", "o"], [19, 2, 1, "c.CpAtom_FastHasType", "state"]], "CpAtom_HasSize": [[19, 2, 1, "c.CpAtom_HasSize", "o"]], "CpAtom_HasType": [[19, 2, 1, "c.CpAtom_HasType", "o"]], "CpBoolAtom_Pack": [[20, 2, 1, "c.CpBoolAtom_Pack", "layer"], [20, 2, 1, "c.CpBoolAtom_Pack", "self"], [20, 2, 1, "c.CpBoolAtom_Pack", "value"]], "CpBoolAtom_Unpack": [[20, 2, 1, "c.CpBoolAtom_Unpack", "layer"], [20, 2, 1, "c.CpBoolAtom_Unpack", "self"]], "CpCharAtom_Pack": [[21, 2, 1, "c.CpCharAtom_Pack", "layer"], [21, 2, 1, "c.CpCharAtom_Pack", "self"], [21, 2, 1, "c.CpCharAtom_Pack", "value"]], "CpCharAtom_Unpack": [[21, 2, 1, "c.CpCharAtom_Unpack", "layer"], [21, 2, 1, "c.CpCharAtom_Unpack", "self"]], "CpFloatAtom_Pack": [[22, 2, 1, "c.CpFloatAtom_Pack", "layer"], [22, 2, 1, "c.CpFloatAtom_Pack", "self"], [22, 2, 1, "c.CpFloatAtom_Pack", "value"]], "CpFloatAtom_Unpack": [[22, 2, 1, "c.CpFloatAtom_Unpack", "layer"], [22, 2, 1, "c.CpFloatAtom_Unpack", "self"]], "CpIntAtomObject": [[24, 3, 1, "c.CpIntAtomObject._m_little_endian", "_m_little_endian"], [24, 3, 1, "c.CpIntAtomObject._m_signed", "_m_signed"], [24, 3, 1, "c.CpIntAtomObject.m_byte_count", "m_byte_count"]], "CpPaddingAtom_Pack": [[25, 2, 1, "c.CpPaddingAtom_Pack", "layer"], [25, 2, 1, "c.CpPaddingAtom_Pack", "self"], [25, 2, 1, "c.CpPaddingAtom_Pack", "value"]], "CpPaddingAtom_PackMany": [[25, 2, 1, "c.CpPaddingAtom_PackMany", "layer"], [25, 2, 1, "c.CpPaddingAtom_PackMany", "self"], [25, 2, 1, "c.CpPaddingAtom_PackMany", "value"]], "CpPaddingAtom_Unpack": [[25, 2, 1, "c.CpPaddingAtom_Unpack", "layer"], [25, 2, 1, "c.CpPaddingAtom_Unpack", "self"]], "CpPaddingAtom_UnpackMany": [[25, 2, 1, "c.CpPaddingAtom_UnpackMany", "layer"], [25, 2, 1, "c.CpPaddingAtom_UnpackMany", "self"]], "CpStructModel_Check": [[30, 2, 1, "c.CpStructModel_Check", "m"], [30, 2, 1, "c.CpStructModel_Check", "s"]], "CpStructModel_GetStruct": [[30, 2, 1, "c.CpStructModel_GetStruct", "m"], [30, 2, 1, "c.CpStructModel_GetStruct", "s"]], "CpStruct_AddField": [[30, 2, 1, "c.CpStruct_AddField", "exclude"], [30, 2, 1, "c.CpStruct_AddField", "field"], [30, 2, 1, "c.CpStruct_AddField", "o"]], "CpStruct_GetAnnotations": [[30, 2, 1, "c.CpStruct_GetAnnotations", "eval"], [30, 2, 1, "c.CpStruct_GetAnnotations", "o"]], "CpStruct_New": [[30, 2, 1, "c.CpStruct_New", "m"]], "caterpillar.abc": [[5, 4, 1, "", "STRUCT_FIELD"], [5, 5, 1, "", "_ContainsStruct"], [5, 5, 1, "", "_ContextLambda"], [5, 5, 1, "", "_ContextLike"], [5, 5, 1, "", "_EnumLike"], [5, 5, 1, "", "_StructLike"], [5, 5, 1, "", "_SupportsPack"], [5, 5, 1, "", "_SupportsSize"], [5, 5, 1, "", "_SupportsUnpack"], [5, 5, 1, "", "_Switch"], [5, 6, 1, "", "getstruct"], [5, 6, 1, "", "hasstruct"], [5, 6, 1, "", "typeof"]], "caterpillar.byteorder": [[6, 5, 1, "", "Arch"], [6, 4, 1, "", "BYTEORDER_FIELD"], [6, 4, 1, "", "BigEndian"], [6, 5, 1, "", "ByteOrder"], [6, 4, 1, "", "LittleEndian"], [6, 4, 1, "", "Native"], [6, 4, 1, "", "NetEndian"], [6, 4, 1, "", "SysNative"], [6, 6, 1, "", "byteorder"], [6, 4, 1, "", "system_arch"]], "caterpillar.byteorder.ByteOrder": [[6, 5, 1, "", "Alignment"], [6, 5, 1, "", "Size"], [6, 7, 1, "", "apply"]], "caterpillar.context": [[8, 5, 1, "", "BinaryExpression"], [8, 4, 1, "", "CTX_FIELD"], [8, 4, 1, "", "CTX_INDEX"], [8, 4, 1, "", "CTX_OBJECT"], [8, 4, 1, "", "CTX_OFFSETS"], [8, 4, 1, "", "CTX_PARENT"], [8, 4, 1, "", "CTX_PATH"], [8, 4, 1, "", "CTX_POS"], [8, 4, 1, "", "CTX_SEQ"], [8, 4, 1, "", "CTX_STREAM"], [8, 4, 1, "", "CTX_VALUE"], [8, 5, 1, "", "ConditionContext"], [8, 5, 1, "", "Context"], [8, 5, 1, "", "ContextLength"], [8, 5, 1, "", "ContextPath"], [8, 5, 1, "", "ExprMixin"], [8, 5, 1, "", "UnaryExpression"], [8, 4, 1, "", "ctx"], [8, 4, 1, "", "parent"], [8, 4, 1, "", "this"]], "caterpillar.exception": [[9, 5, 1, "", "DelegationError"], [9, 5, 1, "", "DynamicSizeError"], [9, 5, 1, "", "InvalidValueError"], [9, 5, 1, "", "OptionError"], [9, 5, 1, "", "Stop"], [9, 5, 1, "", "StreamError"], [9, 5, 1, "", "StructException"], [9, 5, 1, "", "UnsupportedOperation"], [9, 5, 1, "", "ValidationError"]], "caterpillar.fields": [[10, 5, 1, "", "Bytes"], [11, 6, 1, "", "Bz2Compressed"], [10, 5, 1, "", "CString"], [13, 5, 1, "", "Chain"], [11, 5, 1, "", "Compressed"], [10, 5, 1, "", "Computed"], [10, 5, 1, "", "Const"], [10, 5, 1, "", "ConstBytes"], [10, 5, 1, "", "ConstString"], [13, 5, 1, "", "ElseIf"], [12, 5, 1, "", "Encrypted"], [10, 5, 1, "", "Enum"], [13, 5, 1, "", "Field"], [13, 5, 1, "", "FieldMixin"], [13, 5, 1, "", "FieldStruct"], [10, 5, 1, "", "FormatField"], [13, 5, 1, "", "If"], [10, 5, 1, "", "Int"], [11, 6, 1, "", "LZMACompressed"], [11, 6, 1, "", "LZOCompressed"], [10, 5, 1, "", "Memory"], [10, 4, 1, "", "Pass"], [10, 5, 1, "", "Prefixed"], [10, 5, 1, "", "String"], [10, 5, 1, "", "Transformer"], [10, 5, 1, "", "UInt"], [10, 5, 1, "", "VarInt"], [11, 6, 1, "", "ZLibCompressed"], [10, 4, 1, "", "boolean"], [10, 4, 1, "", "char"], [10, 4, 1, "", "float16"], [10, 4, 1, "", "float32"], [10, 4, 1, "", "float64"], [10, 4, 1, "", "int16"], [10, 4, 1, "", "int32"], [10, 4, 1, "", "int64"], [10, 4, 1, "", "int8"], [10, 4, 1, "", "padding"], [10, 4, 1, "", "size_t"], [10, 4, 1, "", "ssize_t"], [10, 4, 1, "", "uint16"], [10, 4, 1, "", "uint32"], [10, 4, 1, "", "uint64"], [10, 4, 1, "", "uint8"], [10, 4, 1, "", "vint"], [10, 4, 1, "", "void_ptr"]], "caterpillar.fields.Bytes": [[10, 7, 1, "", "unpack_single"]], "caterpillar.fields.CString": [[10, 7, 1, "", "pack_single"], [10, 7, 1, "", "unpack_single"]], "caterpillar.fields.Chain": [[13, 7, 1, "", "__and__"], [13, 7, 1, "", "__init__"], [13, 7, 1, "", "__rand__"], [13, 7, 1, "", "__size__"], [13, 7, 1, "", "__type__"], [13, 8, 1, "", "head"], [13, 7, 1, "", "pack_single"], [13, 8, 1, "", "tail"], [13, 7, 1, "", "unpack_single"]], "caterpillar.fields.Compressed": [[11, 7, 1, "", "decode"], [11, 7, 1, "", "encode"]], "caterpillar.fields.Computed": [[10, 7, 1, "", "pack_single"], [10, 7, 1, "", "unpack_single"]], "caterpillar.fields.Const": [[10, 7, 1, "", "decode"], [10, 7, 1, "", "encode"]], "caterpillar.fields.Encrypted": [[12, 7, 1, "", "algorithm"], [12, 7, 1, "", "get_instance"], [12, 7, 1, "", "mode"], [12, 7, 1, "", "pack_single"], [12, 7, 1, "", "padding"], [12, 7, 1, "", "unpack_single"]], "caterpillar.fields.Enum": [[10, 7, 1, "", "decode"], [10, 7, 1, "", "encode"]], "caterpillar.fields.Field": [[13, 4, 1, "", "amount"], [13, 4, 1, "", "arch"], [13, 4, 1, "", "bits"], [13, 4, 1, "", "condition"], [13, 4, 1, "", "default"], [13, 4, 1, "", "flags"], [13, 7, 1, "", "get_offset"], [13, 7, 1, "", "get_struct"], [13, 7, 1, "", "get_type"], [13, 7, 1, "", "has_condition"], [13, 7, 1, "", "has_flag"], [13, 7, 1, "", "is_enabled"], [13, 7, 1, "", "is_seq"], [13, 7, 1, "", "length"], [13, 4, 1, "", "offset"], [13, 4, 1, "", "options"], [13, 4, 1, "", "order"], [13, 4, 1, "", "struct"]], "caterpillar.fields.FieldStruct": [[13, 4, 1, "", "__bits__"], [13, 4, 1, "", "__byteorder__"], [13, 7, 1, "", "__pack__"], [13, 7, 1, "", "__repr__"], [13, 7, 1, "", "__unpack__"], [13, 7, 1, "", "pack_seq"], [13, 7, 1, "", "pack_single"], [13, 7, 1, "", "unpack_seq"], [13, 7, 1, "", "unpack_single"]], "caterpillar.fields.FormatField": [[10, 7, 1, "", "is_padding"], [10, 7, 1, "", "pack_seq"], [10, 7, 1, "", "pack_single"], [10, 4, 1, "", "text"], [10, 4, 1, "", "ty"], [10, 7, 1, "", "unpack_seq"], [10, 7, 1, "", "unpack_single"]], "caterpillar.fields.Int": [[10, 7, 1, "", "pack_single"], [10, 7, 1, "", "unpack_single"]], "caterpillar.fields.Memory": [[10, 7, 1, "", "pack_single"], [10, 7, 1, "", "unpack_single"]], "caterpillar.fields.Prefixed": [[10, 7, 1, "", "pack_single"], [10, 7, 1, "", "unpack_single"]], "caterpillar.fields.String": [[10, 7, 1, "", "unpack_single"]], "caterpillar.fields.Transformer": [[10, 7, 1, "", "decode"], [10, 7, 1, "", "encode"], [10, 7, 1, "", "pack_single"], [10, 7, 1, "", "unpack_single"]], "caterpillar.fields.VarInt": [[10, 7, 1, "", "pack_single"], [10, 7, 1, "", "unpack_single"]], "caterpillar.model": [[16, 5, 1, "", "BitField"], [16, 5, 1, "", "BitFieldGroup"], [16, 5, 1, "", "Sequence"], [16, 5, 1, "", "Struct"], [16, 5, 1, "", "TemplateTypeVar"], [16, 5, 1, "", "UnionHook"], [16, 6, 1, "", "bitfield"], [16, 6, 1, "", "derive"], [16, 6, 1, "", "istemplate"], [16, 6, 1, "", "pack"], [16, 6, 1, "", "pack_file"], [16, 6, 1, "", "pack_into"], [16, 6, 1, "", "struct"], [16, 6, 1, "", "template"], [16, 6, 1, "", "union"], [16, 6, 1, "", "unpack"], [16, 6, 1, "", "unpack_file"]], "caterpillar.model.Sequence": [[16, 7, 1, "", "add_field"], [16, 4, 1, "", "arch"], [16, 7, 1, "", "del_field"], [16, 4, 1, "", "field_options"], [16, 4, 1, "", "fields"], [16, 7, 1, "", "has_option"], [16, 4, 1, "", "model"], [16, 4, 1, "", "options"], [16, 4, 1, "", "order"]], "caterpillar.model.TemplateTypeVar": [[16, 4, 1, "", "field_kwds"], [16, 4, 1, "", "name"]], "caterpillar.model.UnionHook": [[16, 4, 1, "", "max_size"], [16, 4, 1, "", "struct"]], "caterpillar.options": [[17, 4, 1, "", "F_DYNAMIC"], [17, 4, 1, "", "F_KEEP_POSITION"], [17, 4, 1, "", "F_OFFSET_OVERRIDE"], [17, 4, 1, "", "F_SEQUENTIAL"], [17, 5, 1, "", "Flag"], [17, 9, 1, "", "O_ARRAY_FACTORY"], [17, 9, 1, "", "S_DISCARD_CONST"], [17, 9, 1, "", "S_DISCARD_UNNAMED"], [17, 9, 1, "", "S_EVAL_ANNOTATIONS"], [17, 9, 1, "", "S_REPLACE_TYPES"], [17, 9, 1, "", "S_SLOTS"], [17, 9, 1, "", "S_UNION"], [17, 6, 1, "", "configure"], [17, 6, 1, "", "get_flag"], [17, 6, 1, "", "get_flags"], [17, 6, 1, "", "has_flag"], [17, 6, 1, "", "set_field_flags"], [17, 6, 1, "", "set_struct_flags"], [17, 6, 1, "", "set_union_flags"]], "caterpillar.options.Flag": [[17, 4, 1, "", "name"], [17, 4, 1, "", "value"]], "class": [[31, 4, 1, "", "__struct__"], [31, 4, 1, "", "__template__"]], "examples.formats.nibarchive.object": [[31, 5, 1, "", "NIBHeader"]], "examples.formats.nibarchive.object.NIBHeader.NIBHeader": [[31, 4, 1, "", "magic"]], "field": [[34, 6, 1, "", "__ior__"], [34, 6, 1, "", "__ixor__"], [31, 4, 1, "", "__name__"], [34, 6, 1, "", "__or__"], [34, 6, 1, "", "__xor__"]], "object": [[31, 7, 1, "", "__bits__"], [31, 4, 1, "", "__byteorder__"], [31, 6, 1, "", "__call__"], [26, 6, 1, "", "__context_getattr__"], [31, 7, 1, "", "__pack__"], [31, 7, 1, "", "__set_byteorder__"], [31, 7, 1, "", "__size__"], [31, 7, 1, "", "__type__"], [31, 7, 1, "", "__unpack__"]], "path": [[34, 6, 1, "", "__call__"], [34, 6, 1, "", "__getitem__"]], "sequence": [[34, 6, 1, "", "__add__"], [34, 6, 1, "", "__iadd__"], [34, 6, 1, "", "__isub__"], [34, 6, 1, "", "__sub__"]], "struct": [[34, 6, 1, "", "__and__"], [34, 6, 1, "", "__floordiv__"], [34, 6, 1, "", "__getitem__"], [34, 6, 1, "", "__matmul__"], [34, 6, 1, "", "__rshift__"], [34, 6, 1, "", "__rsub__"]]}, "objnames": {"0": ["c", "type", "C type"], "1": ["c", "function", "C function"], "2": ["c", "functionParam", "C function parameter"], "3": ["c", "member", "C member"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "class", "Python class"], "6": ["py", "function", "Python function"], "7": ["py", "method", "Python method"], "8": ["py", "property", "Python property"], "9": ["py", "data", "Python data"]}, "objtypes": {"0": "c:type", "1": "c:function", "2": "c:functionParam", "3": "c:member", "4": "py:attribute", "5": "py:class", "6": "py:function", "7": "py:method", "8": "py:property", "9": "py:data"}, "terms": {"": [13, 17, 19, 27, 30, 33, 35, 36, 37, 38], "0": [6, 17, 19, 20, 21, 22, 24, 25, 30, 31, 33, 34, 35, 36], "0008136422": 33, "00100000": 35, "0021923946": 33, "0031346225": 33, "0033772090": 33, "0034705456": 33, "0037924385": 33, "0044497086": 33, "0051257158": 33, "0063716554": 33, "0078892448": 33, "0085910592": 33, "0097203362": 33, "0098681578": 33, "0110391153": 33, "0125181926": 33, "0126670091": 33, "0145166325": 33, "015825": 22, "0260070809": 33, "036922": 20, "04": 33, "05": 33, "0555872261": 33, "058688": 22, "0898006975": 33, "0b01110000": 33, "0b10000000": 33, "0x00": 10, "0x0000": 33, "0x00000204fdfa4411": 36, "0x0004": 33, "0x0005": 33, "0x0008": 33, "0x1233": 34, "0x1234": [34, 35], "0x4": 35, "0xbeef": 36, "0xff": 17, "0xff00ff00": 31, "1": [6, 10, 17, 19, 20, 21, 22, 24, 25, 30, 31, 33, 34, 35, 36, 37], "10": [3, 17, 33, 34, 36], "100": [34, 36], "100000": 36, "100239": 25, "1024": 10, "10608": 17, "109347": 20, "1157": 17, "12": [4, 33], "120": 17, "1232": 17, "128918": 22, "13": [33, 35], "137714": 21, "14": 33, "14240": 17, "15": [27, 31, 33], "16": [10, 24, 31, 33, 35], "166108": 25, "1704": 17, "19": 34, "1929": 33, "1937": 33, "2": [8, 13, 17, 20, 21, 22, 25, 31, 33, 35, 37], "20": 33, "211655": 22, "2305ca5": 33, "234711": 22, "235666": 25, "24": [33, 36], "241862": 22, "255": 17, "258163462": 35, "26": 27, "26520": 17, "267463": 25, "3": [4, 21, 22, 25, 27, 31, 33, 34, 35, 36, 37], "311959": 22, "32": [8, 10, 13], "33": [13, 33], "34": 13, "36": 33, "384": 17, "3848": 17, "4": [3, 25, 33, 35, 36], "40": 36, "4278255360": 31, "5": [35, 36], "526": 30, "5433": 17, "614697": 25, "6152": 17, "64": [6, 10, 33], "652622": 25, "65280": 31, "7": [17, 33], "712": 17, "716998": 20, "721222": 21, "738574": 22, "7520": 17, "76543210": 35, "8": [10, 31, 33, 34, 36], "813911": 21, "815762": 20, "845472": 25, "883599": 20, "8859": 36, "9": 17, "936": 17, "948262": 21, "960612": 21, "963965": 21, "968687": 25, "97": 33, "999292": 20, "A": [5, 6, 8, 10, 11, 13, 16, 17, 24, 30, 31, 34, 35, 36], "And": 37, "As": [19, 30, 31, 35], "By": [17, 26, 31, 33, 35, 37], "For": [17, 19, 26, 30, 31, 34, 35, 36, 38], "If": [1, 3, 4, 10, 13, 14, 17, 30, 31, 32, 34, 35, 36, 37], "In": [13, 17, 30, 31, 33, 34, 35, 36, 37], "It": [3, 4, 5, 10, 16, 17, 19, 26, 30, 31, 33, 34, 35, 36, 37], "Its": [31, 34, 35, 36], "No": [3, 31], "OR": [13, 34], "One": 31, "That": [31, 36, 37], "Thats": 35, "The": [5, 6, 8, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 30, 31, 33, 34, 36, 37, 38], "Their": 31, "There": [3, 19, 27, 30, 31, 33, 35], "These": [16, 31, 36], "To": [17, 27, 30, 31, 32, 34, 35, 36, 37], "Will": 31, "With": [17, 31, 33, 34, 36, 37], "_": [3, 13, 17, 31, 33, 35, 36], "_1": 35, "_123": 31, "_2": 35, "_3": 35, "_4": 35, "_5": 35, "_6": 35, "__4be4f2562b65393cformattempl": 31, "___": 35, "__add__": [31, 34], "__and__": [13, 34], "__annotations__": [16, 17, 30], "__bits__": [13, 31], "__byteorder__": [6, 13, 31], "__call__": [31, 34], "__context_getattr__": [18, 26], "__default": 5, "__eq__": 30, "__floordiv__": 34, "__future__": [17, 31], "__getitem__": 34, "__hash__": 30, "__iadd__": 34, "__init__": [13, 16], "__ior__": 34, "__isub__": 34, "__ixor__": 34, "__main__": 31, "__matmul__": 34, "__model_init__": 16, "__model_setattr__": 16, "__name__": 31, "__or__": 34, "__pack__": [13, 19, 31], "__rand__": 13, "__repr__": [13, 30], "__rshift__": 34, "__rsub__": 34, "__set_byteorder__": 31, "__setattr__": 16, "__size__": [13, 19, 31], "__slots__": 17, "__struct__": [5, 30, 31, 36], "__sub__": 34, "__template__": 31, "__type__": [13, 19, 31], "__unpack__": [13, 19, 31, 35], "__xor__": 34, "_arch": 35, "_argtyp": 12, "_c": 24, "_codemodulest": 19, "_compressor": 11, "_containsstruct": [5, 11, 16], "_contextlambda": [5, 8, 10, 11, 12, 13, 31, 34], "_contextlik": [5, 10, 11, 12, 13], "_coremodulest": [19, 30], "_endianobj": 7, "_enumlik": [5, 10], "_exampl": 27, "_field": [8, 31], "_greedytyp": [12, 13, 34], "_i16_l": 24, "_index": [8, 31], "_infix_": 35, "_io": [8, 31], "_is_seq": 8, "_m_little_endian": 24, "_m_sign": 24, "_member_map_": 10, "_obj": [8, 31, 34], "_offset": [8, 31], "_parent": [8, 31], "_path": [8, 31], "_po": [8, 31], "_prefixedtyp": 34, "_structlik": [5, 10, 11, 12, 13, 16, 31], "_supportspack": 5, "_supportss": 5, "_supportsunpack": [5, 16], "_switch": [5, 13], "_valu": [8, 31, 34], "_value2member_map_": 10, "abc": [5, 10], "abcd": 31, "abil": 37, "abl": [12, 33, 34, 38], "about": [3, 14, 31, 35, 37], "abov": [19, 31, 37], "absenc": 31, "absolut": 31, "abstract": [10, 13, 15, 19, 28, 32], "accept": 34, "access": [5, 8, 24, 26, 31, 34, 36, 37], "accordingli": 31, "accumul": [20, 21, 22, 25], "achiev": [17, 31], "acknowledg": 33, "acquir": 35, "act": [10, 31, 34], "action": 36, "activ": 31, "actual": [13, 31, 33, 36], "ad": [0, 13, 17, 31, 34, 35], "adapt": [16, 31, 37], "add": [1, 4, 16, 17, 30, 31, 33, 35, 36], "add_field": 16, "addit": [10, 12, 13, 16, 17, 30, 31, 35, 36, 37], "addition": [3, 31, 33, 36], "address": 33, "adjust": 3, "advanc": [36, 37, 38], "advantag": 33, "advis": [31, 33], "affect": [34, 35, 36], "after": [13, 33, 34, 37], "afterward": [31, 34], "again": [4, 31, 36], "against": 36, "agnost": 31, "aim": [31, 33], "algo_arg": 12, "algorithm": [11, 12], "align": 6, "all": [3, 4, 9, 14, 16, 17, 19, 26, 30, 31, 33, 34, 35, 36, 37], "allow": [5, 9, 13, 31, 35, 36], "almost": 34, "alon": 35, "along": 31, "alreadi": [30, 31, 34, 35], "also": [1, 3, 16, 17, 31, 33, 34, 35, 36, 37], "alter": [13, 17, 30, 31, 34, 35], "altern": [3, 19, 34], "although": [30, 31, 35], "alwai": [30, 31, 36], "amazingfeatur": 1, "amd64": 33, "amount": [6, 13, 17, 34], "an": [2, 5, 6, 8, 9, 10, 12, 13, 16, 17, 19, 27, 30, 31, 33, 34, 35, 36, 37, 38], "analyz": 17, "ancillari": 35, "ani": [1, 5, 8, 10, 11, 12, 13, 16, 17, 31, 34, 35, 36], "annot": [3, 13, 17, 30, 31, 33, 34, 36, 37, 38], "anonym": 31, "anoth": [6, 13, 31, 34, 37], "answer": 3, "anywher": 31, "api": [3, 31, 32, 35, 38], "appli": [3, 6, 8, 16, 17, 27, 31, 34, 35, 36, 37], "applic": [31, 34, 36, 37, 38], "approach": [30, 31, 36, 38], "appropri": 31, "approv": 4, "approxim": 33, "ar": [3, 4, 9, 10, 13, 14, 15, 16, 17, 19, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37], "arch": [6, 13, 16, 31, 37], "architectur": [13, 15, 16, 31, 35, 37], "arg": [5, 12, 16], "argument": [5, 12, 16, 30, 31, 34, 35, 37], "arm": 38, "around": [30, 33], "arrai": [3, 17, 31, 33, 34, 35, 37, 38], "ascii": 36, "asizeof": 17, "ask": 1, "aspect": [31, 33], "assert": 33, "assign": [13, 31, 33, 35], "associ": [13, 17, 24, 31, 36, 37], "assum": [27, 31, 37], "atom": [18, 28, 29, 32], "attach": [17, 31], "attempt": [9, 31], "attr": 17, "attribut": [5, 10, 13, 15, 16, 17, 24, 30, 31, 34, 35, 37], "audio": 17, "auto": 36, "autoclass": 31, "autodoc": 31, "autodoc_member_ord": 37, "automat": [3, 8, 13, 31, 33, 35, 36, 37], "avail": [3, 31, 33, 37], "avoid": 37, "awar": [17, 36], "b": [1, 3, 8, 10, 13, 17, 24, 31, 33, 34, 35, 36, 37], "b1": 33, "b3": 33, "b4": 33, "back": [34, 35], "bahaviour": 35, "bar": [3, 16, 26, 31, 34, 35], "base": [3, 8, 9, 13, 15, 17, 19, 24, 30, 31, 33, 35, 36], "baseformat": 31, "basic": [14, 31, 35, 37, 38], "baz": [3, 16, 31, 34, 35], "becaus": [16, 17, 30, 31, 34, 35, 36], "becom": 37, "been": [3, 13, 31, 33, 34, 36], "befor": [16, 17, 19, 27, 31, 35, 36], "begin": [13, 31], "behav": [31, 35], "behavior": [13, 31, 34, 35], "behaviour": [10, 17, 34, 36], "being": [31, 33, 36], "below": [24, 31, 33, 34, 35], "benchmark": 33, "benefici": 33, "besid": 36, "beta": 31, "better": 1, "between": [30, 31, 33], "beyond": 36, "bi": 35, "big": [3, 6, 10, 24, 37], "bigendian": [6, 31, 33, 35, 36, 37], "biggest": 33, "binari": [3, 5, 8, 10, 33, 34, 35, 36, 37, 38], "binaryexpress": 8, "bit": [6, 10, 13, 24, 31, 33, 34, 35, 36], "bitfield": [16, 33, 34, 38], "bitfieldgroup": [16, 31], "bits8": 33, "bitsinteg": 33, "bitstruct": 33, "blob": [33, 35], "block": [12, 33, 37], "blockfield": 33, "blueprint": 31, "bodi": 35, "bool": [5, 8, 10, 13, 16, 17, 23, 29], "bool1": 33, "boolatom": 20, "boolean": [8, 10, 13, 31, 34, 36], "both": 3, "bound": [16, 35, 36], "boundari": 6, "box": 4, "brace": 36, "branch": [1, 36], "break": 36, "breakdown": 35, "breathtak": 36, "bring": [33, 35], "buffer": 16, "build": [7, 13, 27, 31, 33, 36], "builder": [3, 35], "built": [31, 33, 36], "burn": 33, "butterfli": 33, "bysourc": 37, "byte": [6, 11, 13, 14, 16, 17, 24, 31, 33, 34, 35, 37, 38], "byteord": [13, 15, 16, 36], "byteorder_field": 6, "bz2": [11, 36], "bz2compress": 11, "c": [3, 10, 17, 20, 21, 22, 24, 25, 30, 31, 35, 36], "c_extens": 27, "cach": [16, 19], "caf": [17, 33], "cafaudioformat": 33, "cafchunk": 33, "cafchunkhead": 33, "cafdata": 33, "cafpackett": 33, "cafstringschunk": 33, "calcul": [13, 19, 31, 36], "call": [9, 16, 17, 19, 20, 21, 22, 24, 25, 30, 31, 33, 34, 35, 36], "callabl": [8, 11, 16, 31, 34], "can": [1, 3, 4, 5, 9, 10, 13, 16, 17, 19, 24, 30, 31, 33, 34, 35, 36, 37], "candid": 4, "cannot": 7, "capabl": [19, 31], "capi": 3, "captur": 31, "case": [30, 31, 33, 34, 35, 36], "categori": 31, "caterpillar": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 34, 35, 36, 37, 38], "catom": 27, "caus": 35, "caution": [17, 31, 33], "certain": [34, 36], "ch": [6, 10], "chain": [13, 14, 31, 34, 38], "challeng": [31, 35], "chang": [1, 19, 31, 32, 34, 35, 37], "changelog": [2, 3], "chapter": 36, "char": [10, 23, 29, 36], "charact": [6, 36], "charatom": 21, "check": [5, 10, 13, 16, 17, 19], "checklist": 1, "checkout": 1, "chnk": 35, "choic": [9, 35], "choos": 34, "chunk": [17, 35, 36, 37], "chunk_head": 33, "chunk_siz": 33, "chunk_typ": 33, "chunknam": 35, "chunkopt": 35, "chunkt": 36, "cipheralgorithm": 12, "cl": 16, "class": [3, 6, 7, 9, 10, 11, 12, 13, 17, 19, 20, 21, 22, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38], "clean": 38, "clone": 4, "close": 35, "cmake": 27, "cmake_dir": 27, "cmake_minimum_requir": 27, "cmakelist": 27, "code": [3, 17, 31, 33, 36, 37, 38], "codebas": 37, "coffe": 36, "collect": [16, 30, 31, 35], "com": 4, "combin": [13, 31, 35], "come": [3, 4, 17, 35, 36], "command": 27, "comment": 31, "commit": 1, "common": [14, 15, 35, 36, 37], "comp_kwarg": 11, "compact": [3, 36, 38], "compar": [24, 33, 35], "comparison": [31, 32], "comparison_1_caterpillar": 33, "comparison_1_construct": 33, "comparison_1_hachoir": 33, "comparison_1_kaitai": 33, "comparison_1_mrcrowbar": 33, "compat": [14, 31], "compil": 33, "complet": [31, 32, 35, 38], "complex": [3, 33, 36], "compon": 27, "compress": [4, 14, 15, 38], "compression_flag": 36, "compression_method": 36, "compressor": 11, "comput": [10, 38], "con": 32, "concaten": [13, 31], "concept": 38, "concern": [31, 37], "concret": [28, 32], "concurr": 31, "condit": [8, 13, 31, 34, 36, 38], "conditioncontext": 8, "configur": [3, 9, 10, 13, 16, 27, 30, 31, 35, 36, 38], "conflict": 33, "conform": 30, "congratul": 36, "consequ": 31, "consid": [17, 19, 26, 32, 33, 38], "consider": [17, 31, 33], "const": [10, 38], "constant": [3, 8, 10, 13, 17, 34, 37, 38], "constbyt": [10, 38], "construct": [20, 21, 22, 25, 31, 33], "constructor": [16, 31, 35, 36], "conststr": 10, "contain": [5, 17, 27, 30, 33, 36, 37], "content": [9, 27, 36], "context": [3, 9, 10, 11, 12, 13, 17, 18, 19, 28, 32, 35, 37, 38], "contextlength": 8, "contextpath": [8, 34], "continu": 34, "contrast": [30, 31], "contribut": [2, 3, 4, 38], "control": 17, "convent": [17, 31, 35], "convert": 36, "copi": [30, 31, 34], "core": [14, 30, 31, 33], "correct": [31, 37], "correctli": [35, 37], "correspond": [4, 10, 20, 21, 22, 25, 31, 35, 36], "could": [35, 37], "count": [31, 33, 35, 36], "counterpart": 24, "cover": [13, 27, 30, 33], "cp_include_dir": 27, "cpatom": 19, "cpatom_callpack": 19, "cpatom_calls": 19, "cpatom_canpack": 19, "cpatom_canunpack": 19, "cpatom_fastcanpack": 19, "cpatom_fastcanunpack": 19, "cpatom_fasthass": 19, "cpatom_fasthastyp": 19, "cpatom_hass": 19, "cpatom_hastyp": 19, "cpatom_typ": 19, "cpatomobject": 19, "cpboolatom_pack": 20, "cpboolatom_typ": 20, "cpboolatom_unpack": 20, "cpboolatomobject": 20, "cpcharatom_pack": 21, "cpcharatom_typ": 21, "cpcharatom_unpack": 21, "cpcharatomobject": 21, "cpfield": 30, "cpfloatatom_pack": 22, "cpfloatatom_typ": 22, "cpfloatatom_unpack": 22, "cpfloatatomobject": 22, "cpintatom_typ": 24, "cpintatomobject": 24, "cplayerobject": [20, 21, 22, 25], "cppaddingatom_pack": 25, "cppaddingatom_packmani": 25, "cppaddingatom_typ": 25, "cppaddingatom_unpack": 25, "cppaddingatom_unpackmani": 25, "cppaddingatomobject": 25, "cpstate": 19, "cpstruct": 30, "cpstruct_addfield": 30, "cpstruct_getannot": 30, "cpstruct_new": 30, "cpstruct_typ": 30, "cpstructfieldinfo": 30, "cpstructfieldinfo_typ": 30, "cpstructfieldinfoobject": 30, "cpstructmodel_check": 30, "cpstructmodel_getstruct": 30, "cpstructobject": 30, "crc": 35, "creat": [1, 3, 8, 11, 13, 16, 17, 19, 27, 30, 31, 33, 34, 35, 38], "createfield": 33, "creation": [31, 35], "crucial": [31, 33, 36], "crypt": 4, "cryptograph": [14, 15], "cstring": [3, 10, 31, 33, 34, 35, 38], "cstringn": 33, "ctx": [8, 19, 31, 34], "ctx_field": [8, 31], "ctx_index": [8, 31], "ctx_object": [8, 31], "ctx_offset": [8, 31], "ctx_parent": [8, 31], "ctx_path": [8, 31], "ctx_po": [8, 31], "ctx_seq": 8, "ctx_stream": [8, 31], "ctx_valu": [8, 31], "current": [3, 9, 10, 12, 13, 16, 31, 32, 34, 35, 36], "custom": [3, 27, 30, 34, 38], "customiz": 17, "d": [10, 17, 33], "d_compil": 33, "dai": 37, "data": [3, 5, 10, 11, 12, 13, 16, 17, 19, 26, 30, 32, 33, 34, 35, 36, 38], "dataclass": [30, 31], "deactiv": 13, "deal": 36, "decid": [13, 17, 31], "decis": 31, "declar": [3, 13, 16, 31, 37], "decod": [10, 11, 37], "decomp_kwarg": 11, "decompress": [11, 35], "decor": [16, 34, 35, 37], "decrypt": [4, 12], "dedic": 31, "deeper": [33, 38], "def": 33, "default": [6, 10, 12, 13, 16, 17, 26, 31, 33, 34, 35, 36, 37], "default_opt": [33, 34, 35], "default_valu": 33, "defin": [3, 16, 17, 19, 24, 27, 31, 33, 34, 35, 36, 38], "definit": [3, 8, 13, 16, 30, 31, 33, 34, 35, 36, 37, 38], "degre": 33, "del_field": 16, "delegationerror": 9, "deliber": 31, "deliv": 33, "delv": 32, "demonstr": [27, 31, 33, 36], "depend": [4, 26, 31, 33, 35, 37], "depent": 31, "depth": [8, 13], "deriv": [16, 31, 35], "desc": 33, "describ": [1, 19, 24, 30, 31, 32, 33, 34], "descript": [15, 35], "deseri": [16, 31], "desersi": 31, "design": [3, 4, 17, 19, 26, 31, 33, 34, 35, 36, 37], "desir": [12, 31, 33], "despit": 31, "destin": [27, 35], "detail": [1, 3, 24, 36, 37], "determin": [5, 9, 19, 30, 31], "develop": [1, 3, 4, 27, 32], "dict": [9, 11, 13, 16, 31], "dictat": 31, "dictclass": 17, "dictionari": [5, 16, 30, 31, 34], "differ": [30, 31, 33, 34, 35, 36], "dig": 38, "direct": [4, 5, 24, 31, 35, 36], "directli": [27, 30, 31, 33, 34, 37], "directori": [7, 27], "disabl": 17, "disadvantag": 31, "discard": 17, "discov": 30, "discuss": [1, 3, 14, 31, 33, 36], "displai": [13, 31, 37], "distinct": 31, "distinguish": 31, "dive": 33, "divers": 38, "divid": 36, "do": [19, 31, 35, 36, 38], "doc": [31, 33, 35, 37], "document": [17, 27, 31, 32, 33, 35, 36, 38], "doe": [3, 4, 10, 13, 19, 30, 31, 34, 35, 36], "doesn": [33, 34, 36], "don": [3, 4, 34, 35, 36], "done": [4, 14, 36, 37], "dot": 26, "down": 35, "doxygen": 7, "doxygenstruct": 7, "draft": 1, "due": 37, "duplic": 31, "dure": [10, 13, 30, 31, 35], "dynam": [3, 9, 13, 31, 34, 36], "dynamicsizeerror": [9, 13, 31], "e": [4, 10, 13, 17, 31, 35, 36], "each": [13, 16, 17, 19, 31, 37], "earlier": [31, 36], "eas": [31, 33, 36], "easi": [3, 31, 37, 38], "easier": 3, "effect": [24, 34, 35], "effici": [3, 24], "eight": 31, "either": [1, 17, 27, 31, 34, 35], "element": [9, 10, 12, 13, 26, 30, 31, 34, 36], "elimin": [33, 36], "ellipsi": [12, 13, 16, 31], "els": [5, 16, 31, 34, 35], "elseif": [13, 14, 35], "elsewher": 31, "emploi": 31, "emul": 35, "en": 33, "enabl": [3, 4, 13, 17, 26, 31, 34, 37, 38], "encapsul": [36, 37], "encod": [3, 10, 11, 33, 36, 37], "encount": 36, "encourag": 37, "encout": 1, "encrypt": [4, 12], "end": [10, 13, 31, 34, 36, 38], "endia": [35, 36], "endian": [3, 6, 10, 15, 24, 33, 37], "enforc": 10, "engin": [3, 33], "enhanc": [1, 31, 33, 34, 35], "enough": 35, "ensur": [10, 27], "entail": 31, "entri": [0, 3, 33, 37], "enum": [5, 10, 16, 31, 36, 37], "enumer": [6, 10, 38], "eof": 34, "equip": [35, 38], "equival": 37, "error": [9, 16, 19, 30, 31, 34, 36], "especi": 4, "essenc": 31, "essenti": [31, 36], "etc": 36, "eval": 30, "evalu": [13, 31], "even": [3, 31, 34, 35, 36], "everi": [31, 36, 37], "everyth": [14, 34, 37], "evid": 31, "evolv": 32, "exampl": [3, 16, 17, 24, 26, 27, 31, 33, 35, 36, 37], "except": [1, 30, 31, 34, 35], "exclud": [30, 31], "exclus": 31, "execut": [1, 13, 17, 31, 34], "execute_process": 27, "exercis": 31, "exist": [8, 31], "expect": [35, 37], "experi": 33, "experiment": [31, 34], "explain": [31, 38], "explan": [3, 36], "explicit": 31, "explicitli": [6, 13, 31, 37], "explor": [36, 37, 38], "expr": 33, "express": [15, 31, 36], "exprmixin": 8, "extend": [4, 27, 30, 31, 34, 35, 36], "extens": [3, 27, 31, 33], "extern": 33, "extra": [4, 13, 30, 31, 34, 35, 36, 37], "f": [10, 17, 34, 35, 36], "f0": 35, "f1": 35, "f2": 35, "f3": 35, "f_dynam": 17, "f_keep_posit": [17, 34], "f_offset_overrid": 17, "f_sequenti": 17, "facil": 34, "facilit": 33, "factori": 17, "fail": 9, "fall": 31, "fallback": [33, 36], "fals": [5, 10, 16, 17, 31, 35], "faster": [19, 33, 37], "fastest": 33, "fdat": [35, 36], "fdatchunk": [35, 36], "featur": [2, 17, 31, 33, 34, 37, 38], "feel": [1, 36], "few": 30, "field": [3, 8, 10, 11, 12, 15, 16, 20, 21, 22, 25, 30, 32, 33, 36, 37, 38], "field_kwd": 16, "field_opt": 16, "fieldmixin": [13, 14, 31, 34], "fieldset": 33, "fieldstruct": [10, 13, 14], "figur": 33, "file": [3, 16, 17, 27, 33, 34, 35, 36, 37], "filenam": 16, "files": 17, "fill": 31, "final": [16, 17, 31, 32, 34, 35], "find": [7, 37], "find_packag": 27, "finish": 35, "finit": [30, 31], "first": [13, 26, 31, 34, 35, 38], "firstli": 34, "five": 36, "fix": [3, 4, 24, 31, 34, 35], "fixedarrai": 33, "fixedarray1": 33, "flag": [10, 13, 16, 17, 30, 33, 34], "float": [10, 23, 29, 34, 36], "float16": [10, 36], "float32": [10, 36], "float32n": 22, "float64": [10, 36], "floatatom": 22, "focu": [31, 37], "focus": [24, 33], "follow": [1, 3, 4, 10, 17, 19, 24, 26, 27, 31, 33, 34, 35, 36, 37], "foo": [3, 8, 16, 26, 31, 34, 35, 36], "foobar": 36, "foohello": 3, "forget": 4, "fork": 1, "form": [3, 13, 31, 33], "formal": 15, "format": [3, 6, 8, 10, 13, 17, 31, 33, 34, 35, 36, 37, 38], "format16": 35, "format2": 17, "format32": [31, 35], "format8": 35, "formatfield": [10, 17, 24, 31], "formatsubtempl": 35, "formattempl": [31, 35], "forward": 37, "found": [13, 17, 30, 31], "foundat": [14, 31, 33], "four": [19, 24, 37], "frame": [8, 36], "frame_data": 36, "framework": [3, 31, 32, 33, 38], "free": [1, 33], "friendli": [3, 32, 34, 35, 38], "from": [5, 6, 7, 8, 10, 13, 16, 17, 19, 24, 26, 30, 31, 33, 34, 35, 36, 37, 38], "from_byt": 24, "fun": 33, "function": [5, 8, 12, 13, 15, 19, 20, 21, 22, 25, 26, 30, 31, 33, 34, 36, 37, 38], "fundament": [24, 37], "further": [24, 31, 35], "furthermor": [19, 31], "futur": [0, 34, 35], "g": [10, 17, 20, 21, 22, 25, 31, 35, 36, 37], "gain": [36, 38], "gama": [35, 36], "gamachunk": [35, 36], "gamma": 36, "gamma_valu": 36, "gener": [2, 3, 5, 30, 31, 33, 35], "get": [3, 5, 6, 12, 13, 16, 17, 32, 35, 37], "get_annot": 30, "get_flag": 17, "get_global_core_st": 30, "get_inst": 12, "get_memb": 31, "get_offset": 13, "get_struct": 13, "get_typ": 13, "getattr": [19, 31, 34], "getitem": 34, "getsizeof": 17, "getstruct": 5, "git": [1, 4], "github": [1, 3, 4, 31, 35], "given": [3, 5, 6, 13, 14, 16, 30, 31, 33, 34, 36, 37], "global": [10, 16, 19, 20, 21, 22, 24, 25, 34, 35, 37], "global_const": 13, "go": [31, 35], "goal": 33, "goe": 35, "greatest": 31, "greedi": [34, 35, 36], "group": 31, "guid": 27, "guidelin": [2, 4], "h": [10, 27], "ha": [4, 5, 8, 10, 13, 16, 17, 31, 34, 36], "hachoir": 33, "handi": 36, "handl": [9, 10, 24, 31, 38], "happend": 1, "has_condit": 13, "has_flag": [13, 17], "has_opt": 16, "hasstruct": 5, "hastili": 38, "have": [2, 3, 4, 5, 13, 16, 17, 27, 33, 34, 35, 36, 37], "haven": 36, "head": [13, 35], "header": 27, "hello": [3, 35, 36], "help": [34, 35, 37], "henc": 31, "here": [8, 27, 31, 33, 35, 36, 37, 38], "heve": 36, "hierarchi": 31, "high": [30, 38], "highlight": 31, "hook": [16, 31], "hook_cl": 35, "hour": 37, "how": [3, 24, 27, 31, 35], "howev": 36, "html": 3, "http": [4, 33], "i": [3, 4, 6, 9, 10, 12, 13, 14, 16, 17, 19, 24, 26, 30, 31, 32, 34, 35, 36, 38], "i16": 24, "i16_l": 24, "id": 33, "ident": 30, "identifi": 10, "iend": 35, "ignor": [10, 31], "ihdr": 35, "ihdrchunk": 35, "illustr": [24, 31], "imag": 35, "impact": [13, 24, 31], "implement": [8, 10, 13, 14, 16, 19, 20, 21, 22, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37], "implicitli": 36, "import": [17, 24, 27, 31, 33, 34, 35, 36, 37, 38], "import_caterpillar": 27, "imposs": 37, "improv": 34, "includ": [6, 16, 17, 27, 31, 33, 34, 36], "inclus": 37, "incorpor": [17, 19, 31, 33], "independ": [31, 37], "index": [3, 31], "indic": [5, 6, 13, 19, 24, 31], "individu": 31, "infer": [13, 16, 31, 35], "info": 33, "inform": [3, 6, 11, 14, 31, 35, 37], "ingor": 17, "inherit": [19, 31, 34], "initi": [13, 16, 30, 33, 34], "inlin": [8, 16], "inner": 31, "input": [10, 11, 31, 36, 37], "insert": 31, "insid": 31, "insight": [31, 38], "inspect": [30, 31], "instal": [27, 31, 36], "instanc": [12, 13, 16, 17, 19, 20, 21, 22, 25, 30, 31, 33, 34, 35, 36, 37], "instanti": [31, 37], "instead": [31, 32, 33, 35, 36], "int": [6, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 24, 25, 30, 34, 35, 36], "int16": [10, 36], "int24": 36, "int24ul": 33, "int32": [10, 36], "int32ul": 33, "int64": [10, 36], "int8": [10, 36], "int8ul": 33, "intatom": 24, "integ": [10, 23, 29, 34, 35, 37, 38], "integr": [27, 31, 33, 36, 37], "intend": [31, 36], "intenum": 36, "intercept": 16, "interfac": [14, 15, 19, 30, 32, 34], "intern": [3, 13, 14, 16, 17, 30, 31, 32, 34, 35, 36, 38], "interpret": [27, 33, 36, 37], "intric": 31, "introduc": [19, 30, 31, 35, 36, 37, 38], "introduct": [3, 32, 37], "introspect": 19, "invalid": 9, "invalidvalueerror": 9, "invert": 35, "invok": [19, 31, 34], "involv": [3, 31, 33, 37], "iobas": 16, "is_en": 13, "is_pad": 10, "is_seq": 13, "isn": 36, "iso": 36, "issu": [2, 3, 9, 31], "istempl": 16, "item": [33, 36], "iter": [12, 13, 16, 31, 33], "its": [10, 13, 17, 19, 24, 27, 30, 31, 33, 34, 35, 37], "itxt": [35, 36], "itxtchunk": [35, 36], "journi": 35, "jump": 34, "just": [1, 3, 17, 31, 33, 35, 36, 37], "k": [33, 35], "kaitai": 33, "keep": 36, "keep_posit": 13, "kei": [31, 34, 35], "keword": 36, "keyword": [16, 31, 34, 35, 36, 37], "kind": 34, "know": 35, "knowledg": 36, "known": [31, 34], "kwarg": [5, 16, 34], "kwd": 16, "l": 33, "lack": 33, "lambda": [5, 8, 13, 34, 35, 36], "languag": 27, "language_tag": 36, "larva": 33, "last": [10, 13, 31, 34, 35, 36], "later": [31, 36, 37], "latest": 33, "layer": [20, 21, 22, 25, 28, 31, 32], "layout": 35, "lazi": [31, 34], "le": [3, 10, 24, 33], "learn": 38, "least": 30, "leav": 35, "left": [8, 35], "len": 36, "len_name2": 33, "length": [3, 8, 10, 11, 12, 13, 31, 34, 35, 38], "length_field": 33, "lenof": [34, 36], "less": [17, 37], "let": [3, 35, 36, 37], "level": [30, 31, 36, 38], "leverag": 31, "librari": [3, 4, 14, 27, 30, 31, 32, 33, 35, 36, 37, 38], "like": [5, 31, 33, 34, 35, 36, 37], "limit": [34, 35], "line": [17, 27, 33, 35], "link": [4, 13, 31, 33, 34], "list": [10, 13, 16, 31, 34, 37, 38], "littl": [3, 6, 10, 24, 33, 37], "little_endian": [24, 33], "littleendian": [6, 33], "ll": [36, 38], "local": [20, 21, 22, 25], "logic": [13, 32, 34], "look": [3, 35, 36, 37], "lookup": 13, "lose": 34, "lot": 36, "low": 30, "lower": [17, 35], "lzallright": 36, "lzma": [11, 36], "lzmacompress": 11, "lzo": [4, 11, 36], "lzocompress": 11, "m": [1, 27, 30, 35, 36], "m_byte_count": 24, "magic": [3, 8, 31, 35, 36], "mai": [13, 17, 19, 31, 32, 34, 36], "main": [35, 36], "maintain": 31, "make": [1, 4, 31, 33, 35, 36], "manag": [13, 24, 30], "mandatori": 31, "mani": 31, "manner": 3, "manual": [19, 27], "map": [5, 31, 34], "mark": [1, 34], "master": 36, "match": 10, "matrixeditor": 4, "max_siz": 16, "maximum": 16, "mean": [16, 24, 31, 34], "meaningless": 37, "measur": [13, 19, 20, 21, 22, 25, 31, 33], "mechan": 24, "member": [17, 19, 31, 37], "memori": [3, 10, 12, 13, 17, 35, 37, 38], "memoryview": [10, 12, 13, 36], "mention": [31, 36], "mere": 36, "messag": 9, "meta": 33, "metamorphosi": 33, "method": [8, 10, 13, 16, 17, 19, 24, 30, 32, 34, 36], "metr": 36, "mgk": 8, "might": [35, 36, 37], "million": [20, 21, 22, 25], "mimic": 31, "minim": [31, 33, 37], "minu": 13, "minut": 37, "miss": 31, "mix": 13, "mixin": [8, 13], "mode": [4, 12], "mode_arg": 12, "model": [3, 10, 14, 17, 30, 32, 33, 34, 35, 37, 38], "modif": 5, "modifi": [13, 16], "modul": [6, 19, 27, 30, 31, 35, 37], "modular": 31, "month": 37, "more": [3, 14, 17, 30, 31, 33, 34, 35, 36, 37, 38], "moreov": 38, "most": [16, 31, 35, 37], "moth": 33, "move": [31, 37], "mozilla": 37, "mrcrowbar": 33, "msc": 33, "much": [31, 35, 37], "multipl": [8, 13, 26, 31, 36], "multipli": 35, "must": [10, 13, 17, 19, 31, 34, 35, 36, 37], "n": [3, 10, 35], "name": [3, 4, 5, 6, 8, 16, 17, 19, 27, 30, 32, 33, 35], "name1": 33, "name2": 33, "nativ": [6, 19, 30, 35], "navig": [3, 38], "nbyte": 24, "ndarrai": 17, "necessari": [16, 30, 31, 35, 37], "need": [1, 3, 4, 16, 17, 30, 31, 33, 34, 35, 36, 37, 38], "nest": [26, 31], "netendian": 6, "network": 6, "never": [3, 13], "new": [2, 16, 17, 19, 21, 30, 31, 34, 35], "next": [1, 13, 19, 31, 36, 38], "nibarch": [17, 31], "nibhead": 31, "none": [5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 31, 35, 36], "nor": 31, "normal": [3, 17, 31, 34], "notabl": 35, "note": [8, 13, 16, 19, 32, 33, 36, 37], "noth": [32, 36], "notic": 17, "notimpl": 19, "notimplementederror": [10, 13], "now": [30, 31, 32, 33, 35, 36, 37], "null": [13, 19, 30, 36], "num1": 33, "num2": 33, "num2_hi": 33, "num2_lo": 33, "num4": 33, "number": [13, 24, 31, 37, 38], "numer": 14, "numpi": 17, "o": [19, 30, 35], "o1": 17, "o2": 17, "o_array_factori": 17, "obj": [3, 5, 6, 10, 11, 12, 13, 16, 17, 31, 35, 37], "object": [3, 5, 6, 8, 10, 16, 19, 20, 21, 22, 24, 25, 26, 28, 32, 33, 34, 35, 37, 38], "obvious": 27, "occupi": [3, 17, 31, 36], "occur": [19, 30, 34], "off": 33, "offer": [31, 38], "offici": 31, "offset": [13, 31, 34, 38], "often": [3, 36], "ok": 35, "okai": [35, 36], "older": 31, "onc": [10, 30, 31], "one": [6, 13, 17, 19, 20, 21, 22, 25, 27, 30, 31, 33, 35, 36, 37], "ones": 31, "onli": [3, 8, 13, 17, 27, 31, 33, 34, 35, 36, 37], "open": 1, "oper": [3, 8, 9, 10, 12, 13, 16, 24, 31, 32, 36, 38], "operand": [8, 31, 35], "opt": [17, 37], "optim": [3, 24, 31, 37], "option": [3, 4, 9, 12, 13, 15, 16, 30, 31, 33, 34, 35, 37, 38], "optionerror": 9, "order": [6, 13, 16, 31, 33, 35, 36, 37], "org": 33, "organ": 37, "organiz": 31, "origin": [1, 10, 13, 17, 30, 35], "other": [6, 8, 13, 15, 19, 31, 33, 34, 35, 36, 37], "otherwis": [10, 17, 19, 30], "our": [13, 17, 31, 35, 36, 37], "out": [4, 36], "outcom": 31, "outer": 16, "output": [7, 10, 17, 31], "output_strip_trailing_whitespac": 27, "output_vari": 27, "over": [32, 35], "overal": [17, 35], "overhead": [24, 31], "overload": 38, "overrid": 35, "overview": [31, 33, 34], "own": [19, 30, 35, 36], "p": 10, "pack": [3, 5, 10, 12, 13, 16, 17, 19, 20, 21, 22, 24, 25, 26, 31, 33, 34, 35, 36, 38], "pack_fil": [16, 35], "pack_into": 16, "pack_seq": [10, 13], "pack_singl": [10, 12, 13], "packag": [4, 26, 27], "pad": [10, 12, 17, 23, 29, 31, 33, 35, 38], "padding_arg": 12, "paddingatom": 25, "paddingbit": 33, "page": 3, "pakt": 33, "paramet": [5, 6, 8, 10, 11, 12, 13, 16, 17, 31, 35], "paramount": 31, "parent": [8, 27, 31, 36], "parenthes": 31, "pars": [9, 10, 11, 13, 31, 33, 34, 35, 36], "parser": [3, 33, 35], "part": 34, "partial": [16, 31, 35], "particularli": 31, "pascal": 36, "pascalstr": 33, "pascalstring8": 33, "pass": [10, 16, 30, 31, 34, 35, 38], "path": [15, 26, 35, 36], "pep": 30, "per": [10, 17, 31], "perfect": 33, "perform": 33, "persist": 13, "phy": [35, 36, 37], "physchunk": [35, 36, 37], "physunit": 36, "pip": [4, 27, 36], "pipelin": 35, "pixels_per_unit_i": [36, 37], "pixels_per_unit_x": [36, 37], "place": [17, 31, 34, 35], "placehold": 31, "placement": 31, "plai": [33, 36], "pleas": [1, 27, 31, 32], "plte": [35, 36, 37], "pltechunk": [35, 36], "png": [35, 36, 37], "pngchunk": [35, 37], "po": [16, 31], "point": [31, 33, 36, 37, 38], "pointer": [6, 38], "pose": 31, "posit": [13, 16, 31, 34, 35], "possess": 31, "possibl": [3, 10, 16, 17, 30, 31, 34, 35, 36, 37], "post": 12, "potenti": 31, "power": [3, 31, 38], "pre": [31, 35], "predefin": 31, "prefix": [3, 10, 33, 34, 35, 38], "prefixed_arrai": 34, "prepar": 16, "presenc": 19, "present": [17, 19, 30, 33, 37], "prevent": 31, "previou": 35, "previous": [31, 34, 35, 36], "primari": 33, "primit": [31, 36], "print": [3, 10, 36], "prior": 4, "privat": [27, 35], "pro": 32, "problem": [3, 31, 33, 35], "proceed": 27, "process": [9, 12, 13, 31, 33, 35, 36], "procotol": 26, "produc": 31, "program": 30, "progress": [27, 35], "project": [1, 4, 7, 27, 35], "prompt": [36, 37], "proper": 19, "properti": [13, 36], "propos": 34, "proprietari": [3, 36], "protocol": [18, 28, 30, 32], "provid": [1, 3, 4, 8, 13, 16, 19, 24, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38], "ptr_size": 6, "pull": 1, "purpos": [3, 17, 31], "push": 1, "put": [27, 33], "py": 33, "pyinit__exampl": 27, "pymodinit_func": 27, "pympler": 17, "pyobject": [19, 20, 21, 22, 24, 25, 27, 30], "pypi": 33, "pyproject": 27, "pytest": 1, "python": [3, 4, 10, 17, 19, 24, 27, 30, 31, 33, 35, 36, 37, 38], "python3": 33, "python_add_librari": 27, "python_execut": 27, "pytypeobject": [19, 20, 21, 22, 24, 25, 30], "q": 10, "qualifi": 35, "qualnam": 6, "question": [2, 3, 33, 36], "quick": 33, "r": [33, 35, 37], "rais": [9, 10, 13, 31], "rang": [33, 36], "rapidli": 33, "rare": 36, "rather": [31, 36], "raw": [34, 36], "re": [3, 34, 37], "reach": 34, "read": [9, 16, 33, 35, 36], "readabl": [3, 33], "reader": 34, "readi": [32, 36, 37, 38], "real": 36, "realli": [35, 36], "reason": 33, "receiv": 31, "recent": 35, "recommend": [3, 30, 31, 32, 35, 36], "recreat": 37, "recurs": 34, "reduc": [17, 24], "ref": 33, "refer": [3, 4, 13, 14, 16, 19, 21, 27, 30, 31, 33, 35, 36, 38], "referenc": 36, "reflect": 33, "refresh": 31, "regard": [31, 33], "regular": 31, "rel": [16, 31], "relat": [9, 13, 17, 26, 31, 33], "relax": 37, "releas": 19, "relev": [31, 36], "reli": 31, "remomv": 16, "remov": [16, 17, 31, 32, 34, 37], "repeat": 33, "replac": [8, 17, 31, 34], "repo": 1, "repositori": [4, 33], "repres": [6, 8, 10, 11, 13, 16, 19, 20, 21, 22, 24, 25, 31, 36, 38], "represent": [13, 31, 34], "reproduc": 37, "request": [1, 31, 34], "requir": [16, 17, 27, 31, 33, 36, 37], "reserv": 35, "reset": 13, "resolut": 31, "resolv": [26, 31, 34], "resourc": [35, 37, 38], "result": [16, 17, 19, 26, 31, 33, 34, 35], "retain": 36, "retriev": [6, 8, 13, 17, 26, 31, 34, 36], "return": [5, 6, 10, 11, 12, 13, 16, 17, 19, 21, 27, 30, 31, 34, 35, 36], "revers": [3, 33], "revisit": 36, "rgb": [36, 37], "rhello": 36, "right": [8, 31, 35], "risk": 31, "robust": 38, "role": [36, 37], "root": 31, "rp": 33, "run": [2, 4], "runtim": [15, 16, 24, 33, 38], "s_discard_const": 17, "s_discard_unnam": [17, 31, 35], "s_eval_annot": [17, 31], "s_replace_typ": [17, 31, 37], "s_slot": [17, 37], "s_union": 17, "safe_to_copi": 35, "same": [31, 34, 35, 36, 37], "sampl": [35, 36], "save": 37, "scenario": [31, 33, 36], "schema": 17, "scheme": 12, "scikit": 27, "scope": 17, "score": 33, "search": [3, 19, 30], "sec": 33, "second": [20, 21, 22, 25, 37], "section": [14, 31, 32, 34, 35, 36, 37], "secur": 31, "see": 35, "seen": 36, "select": 31, "self": [19, 20, 21, 22, 25, 26, 31, 33, 34], "seq": [10, 13, 17, 33, 34], "sequenc": [10, 13, 16, 32, 38], "sequence_numb": 36, "sequent": 13, "sequenti": [13, 36], "serial": [16, 31, 37], "serv": [14, 31, 33, 36], "set": [6, 10, 13, 16, 17, 27, 30, 31, 34, 36, 38], "set_field_flag": 17, "set_struct_flag": [17, 37], "set_union_flag": 17, "setattr": 16, "setup": 27, "seven": 17, "sever": [31, 33, 35], "share": 35, "shareabl": 33, "shift": 35, "shortcut": [31, 33, 34, 36, 37], "should": [6, 13, 16, 17, 19, 26, 30, 31, 33, 35, 36], "show": [17, 33], "showcas": 35, "shown": 31, "shrink": 3, "side": 35, "sidenot": 35, "sign": [10, 24, 36], "signifi": 24, "signific": [10, 31], "similar": [31, 33, 35, 37], "similarli": 31, "simpl": [3, 13, 17, 31, 35, 36, 37], "simpli": [1, 4, 19, 33, 35, 36, 37], "simplic": 33, "simplifi": 36, "simul": [16, 31], "sinc": [19, 31, 33, 36], "singl": [10, 12, 13, 26, 31], "singular": 31, "situat": [16, 31, 35, 36], "size": [3, 5, 6, 9, 13, 16, 19, 24, 31, 33, 38], "size_t": [10, 36], "skbuild_project_nam": 27, "skim": 38, "slice": [13, 31, 34], "slotsclass": 17, "slow": 35, "slower": 33, "small": [33, 35], "snippet": 37, "so": [3, 4, 19, 31, 34, 36], "sole": [24, 31], "solut": [36, 37], "solv": 35, "some": [1, 16, 31, 32, 33, 34, 35, 36], "someon": 35, "someth": 19, "sourc": [3, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 27, 35], "space": [3, 17, 31, 36, 37], "speak": 33, "special": [3, 14, 15, 17, 19, 24, 26, 32, 34, 35, 38], "specialis": 16, "specif": [4, 14, 16, 17, 19, 32, 33, 35, 36, 38], "specifi": [6, 8, 10, 12, 13, 16, 30, 31, 34, 35, 36, 37], "sperat": 26, "sphinx": [3, 31, 37], "split": 34, "src": 27, "ssize_t": [10, 36], "stabl": 33, "stack": 8, "stackoverflow": 37, "stage": 36, "standard": [3, 6, 14, 15, 32, 35, 38], "start": [6, 31, 32, 33, 35, 36, 37, 38], "state": [19, 30, 34, 35, 37], "statement": [13, 31], "static": [16, 31, 33, 34, 36], "statu": 16, "stdin": 35, "step": [27, 38], "still": [1, 3, 4, 31, 32, 36], "stop": [9, 34], "storag": 31, "store": [13, 16, 17, 30, 31, 34, 35, 36], "str": [6, 8, 9, 10, 13, 16, 17, 33, 35], "str___pack__": 19, "straightforward": [3, 31], "stream": [5, 10, 13, 16, 19, 31, 33, 34, 35, 36, 37], "streamerror": 9, "string": [3, 6, 13, 14, 17, 19, 31, 35, 38], "stringifi": 17, "stringinputstream": 33, "stringiz": 31, "strip": 36, "struct": [3, 4, 6, 8, 9, 13, 14, 28, 29, 32, 33, 35, 38], "struct_": 16, "struct_field": 5, "structcontain": 30, "structexcept": 9, "structur": [3, 5, 9, 12, 13, 16, 19, 27, 31, 33, 34, 35, 36, 38], "strz": 33, "style": 8, "sub": [31, 35], "subclass": [10, 13, 30, 31, 34], "subject": [4, 19, 31, 32, 35], "submit": 2, "submodul": 34, "subsequ": 31, "success": 30, "successfulli": 36, "suce": 30, "suggest": [1, 31], "summari": 31, "suppli": 31, "support": [3, 4, 5, 9, 13, 14, 16, 19, 26, 31, 33, 34, 35, 36, 38], "sure": 4, "switch": [5, 13, 31, 32, 33, 38], "sy": 17, "synchron": [31, 35], "syntact": 31, "sysn": [6, 13], "system": [6, 27, 31], "system_arch": 6, "t": [3, 4, 16, 17, 19, 31, 33, 34, 35, 36, 37], "tabl": 17, "tag": [1, 33], "tail": [13, 35], "tailor": 35, "take": [3, 5, 6, 17, 31, 34, 35, 36, 37], "taken": 37, "target": [16, 19, 27, 31], "target_include_directori": 27, "task": [31, 33], "tbd": 13, "technic": 37, "techniqu": [31, 35, 36], "templat": [15, 38], "template_ti": 16, "templatetypevar": [16, 31, 35], "temporari": 34, "temporarili": [31, 34, 35], "termin": 36, "test": [2, 33], "text": [10, 35, 36], "textchunk": [35, 36], "textual": 36, "th": 35, "than": [17, 30, 31, 34, 35, 37], "thank": 37, "thats": 37, "thei": [16, 17, 30, 31, 35, 37], "them": [31, 34, 36, 37], "themselv": [31, 33], "therefor": [4, 10, 16, 17, 30, 31, 34, 35], "thi": [1, 3, 4, 8, 9, 10, 13, 14, 16, 17, 19, 24, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38], "think": 31, "third": 31, "those": [33, 34, 38], "though": [33, 34], "thousand": 33, "three": [31, 34, 36, 37], "through": [3, 13, 31, 38], "throw": [16, 35], "thrown": 34, "time": [1, 3, 31, 32, 33, 35, 36, 37], "timechunk": [35, 37], "timeit": 33, "to_byt": 24, "todo": [2, 8, 12, 16, 17, 20, 21, 22, 24, 25, 31, 33, 34, 35], "togeth": 19, "toml": 27, "too": 36, "tool": 27, "top": [31, 34], "topic": [36, 37], "total": 17, "touch": 3, "tox": 1, "traceback": [1, 35], "track": 36, "trade": 33, "tradit": 31, "trail": 36, "transform": [10, 11, 35], "translat": [13, 16], "translated_keyword": 36, "travel": 13, "treat": 31, "tri": [31, 34], "tricki": [31, 34], "trigger": 36, "true": [5, 10, 13, 16, 17, 24, 31, 35], "try": [30, 31, 36, 37], "turn": 34, "tutori": [3, 32, 33, 35, 36, 37], "two": [16, 17, 31, 34, 35, 37], "txt": 27, "ty": 10, "type": [5, 6, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 30, 32, 33, 34, 35, 38], "type_": [10, 12], "typeerror": 35, "typeof": 5, "typic": 31, "tys_arg": 16, "tys_kwarg": 16, "u": [35, 36], "u1": 33, "u2": 33, "u4": 33, "uint": [10, 33, 36], "uint16": [3, 10, 31, 34, 35, 36, 37], "uint24": [33, 36], "uint24_l": 33, "uint32": [3, 8, 10, 13, 31, 33, 34, 35, 36, 37], "uint32_l": 33, "uint64": [10, 36], "uint8": [8, 10, 13, 17, 31, 33, 34, 35, 36, 37], "uintptr": 35, "unari": 8, "unaryexpress": 8, "undefin": 31, "under": [20, 21, 22, 25, 31], "undergo": [31, 33], "underli": [9, 13, 31, 34], "underscor": 31, "understand": [35, 36, 37], "unicod": 19, "unintend": 35, "union": [8, 11, 12, 13, 16, 17, 38], "unionhook": [16, 35], "unit": [36, 37], "univers": 37, "unknown": [34, 36], "unless": 36, "unlik": 24, "unnam": [17, 30, 31, 35], "unnecessari": 37, "unnecessarili": 35, "unpack": [3, 5, 10, 12, 13, 16, 17, 19, 20, 21, 22, 24, 25, 26, 31, 33, 34, 35, 36, 38], "unpack_fil": [16, 35], "unpack_seq": [10, 13], "unpack_singl": [10, 12, 13], "unsign": [10, 24, 36, 37], "unsupport": [9, 35], "unsupportedoper": 9, "until": [31, 34, 35], "untrust": 17, "unus": 31, "up": [1, 33, 37], "upcom": 37, "updat": [13, 17], "upon": [35, 38], "upper": 35, "us": [1, 3, 4, 5, 6, 8, 9, 10, 13, 14, 16, 17, 19, 20, 21, 22, 24, 25, 26, 28, 30, 31, 32, 34, 35, 36, 37, 38], "usabl": 31, "usag": 35, "use_tempfil": 16, "user": [3, 17, 32, 33, 34, 35, 37, 38], "usual": [3, 19, 31, 36], "utf": [10, 33, 36], "utf8": 33, "util": [24, 31, 33, 37], "uuid": 17, "v": [27, 33], "v3": 33, "valid": [9, 19, 36], "validationerror": [9, 10], "valu": [3, 5, 6, 8, 9, 10, 13, 16, 17, 19, 20, 21, 22, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37], "variabl": [10, 16, 26, 31, 34, 35, 38], "variant": 30, "varint": [10, 36], "varint_lsb": 10, "variou": 34, "ve": [1, 32, 35, 37], "venv": 33, "verif": 31, "version": [4, 27, 31, 35], "via": [4, 36], "view": 13, "vint": [10, 36], "visibl": [17, 31], "visit": 32, "vm": 33, "void": 27, "void_ptr": [10, 36], "wa": [17, 30, 31, 33, 35, 36, 37], "wai": [3, 31, 36], "want": [3, 4, 32, 33, 34, 35, 36], "warm": 37, "wasn": 31, "we": [16, 17, 31, 33, 34, 35, 36, 37], "well": [13, 17, 19, 31, 34, 35, 38], "were": 1, "what": [1, 3, 16, 31, 35, 36], "whatev": 35, "when": [3, 9, 27, 31, 33, 34, 36, 37], "where": [4, 13, 16, 31, 33, 34, 35, 36], "wherebi": [16, 17], "whether": [6, 13, 16, 17, 24, 26, 31], "which": [6, 10, 13, 19, 31, 34, 36, 37], "while": [3, 19, 24, 26, 31, 33, 36, 37], "why": [31, 32], "wide": [31, 37], "width": 31, "wiki": 33, "wikipedia": [33, 37], "win32": 33, "window": 33, "wip": 15, "wish": 4, "with_soabi": 27, "with_union": 17, "within": [9, 13, 16, 31, 34, 36], "without": [3, 27, 31, 34], "won": [17, 19, 31, 35, 36, 37], "work": [3, 8, 19, 26, 27, 31, 35, 36, 38], "workaround": 31, "world": [3, 35, 36], "wormlik": 33, "worri": 3, "worth": 36, "would": [1, 19, 34, 35, 36], "wow": 37, "wrap": [10, 35, 37], "wrapper": [16, 30, 31], "write": [3, 9, 16, 27, 31, 34, 35, 36, 38], "written": [27, 31, 34, 35], "x": [10, 31, 34], "x00": [3, 10, 17, 31, 35, 36], "x00baz": 3, "x01": [24, 36, 37], "x02": [24, 36, 37], "x02bar": 3, "x03": [36, 37], "x04": 36, "x04hello": 35, "x08": 10, "x0a": [35, 36], "x0d": [35, 36], "x1a": [35, 36], "x80": 10, "x86": 35, "x86_64": 6, "x88": 10, "x89png": [35, 36], "xff": 17, "xml": 7, "xor": 34, "ye": [31, 35], "year": 37, "yet": [31, 36, 37], "yield": 33, "you": [1, 3, 4, 16, 17, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38], "your": [1, 17, 27, 31, 33, 35, 36, 37, 38], "yourself": 36, "zero": [10, 13, 17, 31], "zlib": [11, 36], "zlibcompress": [11, 34, 35, 36], "ztxt": [35, 36], "ztxtchunk": [35, 36], "\u00e6": 33, "\u0259": 33, "\u026a": 33, "\u02c8": 33}, "titles": ["<span class=\"section-number\">2. </span>Changelog", "<span class=\"section-number\">1. </span>Contribution Guidelines", "Development", "Welcome to Caterpillar\u2019s documentation!", "Installation", "Abstract base classes", "Byteorder and Architecture", "Endian / Byteorder", "Context", "Exceptions", "Common Structs", "Compression Structs", "Cryptographic Structs", "Field Model", "Fields", "Library", "Struct Model", "Options", "Abstract Objects Layer", "Atom Protocol", "Bool Atoms", "Char Atoms", "Float Atoms", "Atom Objects", "Integer Atoms", "Padding Atoms", "Context Protocol", "Using the C API", "Caterpillar C API Reference", "Concrete Objects Layer", "Struct Objects", "Data Model", "Reference", "Introduction", "Operators", "<span class=\"section-number\">3. </span>Advanced Concepts", "<span class=\"section-number\">2. </span>Basic Concepts", "<span class=\"section-number\">1. </span>First Steps", "Tutorial"], "titleterms": {"": [3, 31, 34], "The": 35, "abstract": [5, 18], "advanc": 35, "an": 1, "api": [15, 27, 28], "appetit": 3, "architectur": 6, "arrai": 36, "atom": [19, 20, 21, 22, 23, 24, 25], "attribut": 8, "base": [5, 16], "basic": [11, 15, 36], "behaviour": 31, "between": 17, "bitfield": [31, 35], "bool": 20, "byte": [10, 36], "byteord": [6, 7, 31], "c": [15, 27, 28, 32], "caterpillar": [3, 28, 33], "chain": 35, "challeng": [36, 37], "changelog": 0, "char": 21, "class": [5, 8, 15, 16], "common": 10, "comparison": 33, "compress": [11, 36], "comput": 36, "con": 33, "concept": [35, 36], "concret": 29, "condit": 35, "configur": [17, 37], "const": 36, "constant": 36, "constbyt": 36, "contain": 31, "content": 14, "context": [5, 8, 15, 26, 31, 34, 36], "contribut": 1, "core": [12, 15], "cryptograph": 12, "cstring": 36, "custom": [31, 35, 36], "data": [31, 37], "defin": 37, "detail": 31, "develop": [2, 31, 34], "differ": 17, "document": [3, 37], "doe": 33, "emul": 31, "end": 35, "endia": 37, "endian": 7, "enumer": 36, "even": 33, "exactli": 33, "except": [9, 15], "express": 8, "featur": 1, "field": [13, 14, 17, 31, 34, 35], "first": 37, "float": 22, "formal": 9, "function": 16, "gener": 1, "global": 17, "greedi": 31, "guidelin": 1, "have": 1, "hold": 3, "how": 33, "i": [33, 37], "implement": 31, "indic": 3, "instal": 4, "integ": [24, 36], "interfac": [5, 12, 17], "introduct": 33, "issu": 1, "lambda": 31, "layer": [18, 29], "length": 36, "librari": 15, "list": 36, "memori": 36, "method": 31, "minut": 3, "model": [13, 15, 16, 31], "modifi": 31, "name": 31, "new": 1, "next": 37, "note": [31, 34], "number": 36, "numer": 10, "object": [17, 18, 23, 29, 30, 31, 36], "offset": 35, "oper": [34, 35], "option": 17, "other": 5, "pack": 37, "pad": [25, 36], "pass": 36, "path": [8, 31, 34], "perform": [20, 21, 22, 25], "pointer": 35, "prefix": [31, 36], "pro": 33, "programm": 31, "protocol": [19, 26], "python": 32, "question": 1, "recommend": 24, "refer": [28, 32], "roadmap": 38, "run": 1, "runtim": [9, 20, 21, 22, 25, 36], "sequenc": [17, 31, 34, 36], "size": [17, 36], "special": [8, 10, 31, 36], "specif": [31, 34], "standard": [5, 12, 16, 31, 36], "start": 3, "step": 37, "string": [10, 36], "struct": [5, 10, 11, 12, 15, 16, 17, 30, 31, 34, 36, 37], "submit": 1, "support": 11, "switch": 35, "tabl": 3, "templat": [16, 31, 35], "test": 1, "thi": 33, "tutori": 38, "type": [11, 17, 31, 36], "union": [31, 35], "unpack": 37, "up": 3, "us": [27, 33], "variabl": 36, "wait": 3, "welcom": 3, "what": [33, 37], "where": 3, "whet": 3, "why": 33, "work": [33, 37], "your": 3}})