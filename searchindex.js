Search.setIndex({"docnames": ["development/changelog", "development/contribution", "development/index", "index", "installing/index", "library/abc", "library/byteorder", "library/context", "library/exceptions", "library/fields/common", "library/fields/compression", "library/fields/crypto", "library/fields/field_model", "library/fields/index", "library/index", "library/model", "library/options", "reference/datamodel", "reference/index", "reference/introduction", "reference/operators", "tutorial/advanced", "tutorial/basics", "tutorial/first_steps", "tutorial/index"], "filenames": ["development/changelog.rst", "development/contribution.rst", "development/index.rst", "index.rst", "installing/index.rst", "library/abc.rst", "library/byteorder.rst", "library/context.rst", "library/exceptions.rst", "library/fields/common.rst", "library/fields/compression.rst", "library/fields/crypto.rst", "library/fields/field_model.rst", "library/fields/index.rst", "library/index.rst", "library/model.rst", "library/options.rst", "reference/datamodel.rst", "reference/index.rst", "reference/introduction.rst", "reference/operators.rst", "tutorial/advanced.rst", "tutorial/basics.rst", "tutorial/first_steps.rst", "tutorial/index.rst"], "titles": ["<span class=\"section-number\">2. </span>Changelog", "<span class=\"section-number\">1. </span>Contribution Guidelines", "Development", "Welcome to Caterpillar\u2019s documentation!", "Installation", "<span class=\"section-number\">3. </span>Abstract base classes", "<span class=\"section-number\">1. </span>Byteorder and Architecture", "<span class=\"section-number\">4. </span>Context", "<span class=\"section-number\">7. </span>Exceptions", "<span class=\"section-number\">6.2. </span>Common Structs", "<span class=\"section-number\">6.3. </span>Compression Structs", "<span class=\"section-number\">6.4. </span>Cryptographic Structs", "<span class=\"section-number\">6.1. </span>Field Model", "<span class=\"section-number\">6. </span>Fields", "Library", "<span class=\"section-number\">5. </span>Struct Model", "<span class=\"section-number\">2. </span>Options", "<span class=\"section-number\">2. </span>Data Model", "Reference", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">3. </span>Operators", "<span class=\"section-number\">3. </span>Advanced Concepts", "<span class=\"section-number\">2. </span>Basic Concepts", "<span class=\"section-number\">1. </span>First Steps", "Tutorial"], "terms": {"entri": [0, 3, 19, 23], "ad": [0, 12, 16, 17, 20, 21], "futur": [0, 20, 21], "If": [1, 3, 4, 9, 12, 13, 16, 17, 18, 20, 21, 22, 23], "you": [1, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "suggest": [1, 17], "would": [1, 20, 21, 22], "make": [1, 4, 9, 17, 19, 21, 22], "thi": [1, 3, 4, 7, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24], "better": 1, "pleas": [1, 17, 18], "fork": 1, "repo": 1, "creat": [1, 3, 7, 10, 12, 15, 16, 17, 19, 20, 21, 24], "pull": 1, "request": [1, 17, 20], "can": [1, 3, 4, 5, 8, 12, 15, 16, 17, 19, 20, 21, 22, 23], "also": [1, 3, 15, 16, 17, 19, 20, 21, 22, 23], "simpli": [1, 4, 19, 21, 22, 23], "open": 1, "tag": [1, 19], "enhanc": [1, 17, 19, 20, 21], "next": [1, 12, 17, 22, 24], "follow": [1, 3, 4, 16, 17, 19, 20, 21, 22, 23], "checklist": 1, "project": [1, 4, 21], "your": [1, 16, 17, 19, 21, 22, 23, 24], "branch": [1, 22], "git": [1, 4], "checkout": 1, "b": [1, 3, 7, 9, 12, 16, 17, 19, 20, 21, 22, 23], "amazingfeatur": 1, "commit": 1, "chang": [1, 17, 18, 20, 21, 23], "m": [1, 22], "add": [1, 4, 15, 16, 17, 19, 21, 22], "some": [1, 15, 17, 18, 19, 20, 21, 22], "push": 1, "origin": [1, 9, 12, 16, 21], "still": [1, 3, 4, 17, 18, 22], "need": [1, 3, 4, 15, 16, 17, 19, 20, 21, 22, 23, 24], "time": [1, 3, 17, 18, 19, 21, 22, 23], "develop": [1, 3, 4, 18], "mark": [1, 20], "draft": 1, "feel": [1, 22], "free": [1, 19], "up": [1, 19, 23], "ani": [1, 5, 7, 9, 10, 11, 12, 15, 16, 17, 20, 21, 22], "ve": [1, 18, 21, 23], "encout": 1, "describ": [1, 17, 19, 20], "what": [1, 3, 15, 17, 21, 22], "happend": 1, "provid": [1, 3, 4, 7, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24], "detail": [1, 3, 22, 23], "except": [1, 14, 17, 20, 21], "traceback": [1, 21], "were": 1, "us": [1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24], "pytest": 1, "execut": [1, 12, 16, 17, 20], "either": [1, 16, 17, 20, 21], "tox": 1, "just": [1, 3, 16, 17, 19, 21, 22, 23], "ask": 1, "discuss": [1, 3, 13, 17, 19, 22], "github": [1, 3, 4, 17, 21], "todo": [2, 7, 11, 15, 16, 17, 19, 20, 21], "contribut": [2, 3, 4, 24], "guidelin": [2, 4], "submit": 2, "new": [2, 15, 16, 17, 20, 21], "featur": [2, 16, 17, 19, 20, 23, 24], "an": [2, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24], "issu": [2, 3, 8, 17], "run": [2, 4], "test": [2, 19], "have": [2, 3, 4, 5, 12, 15, 16, 19, 20, 21, 22, 23], "gener": [2, 3, 5, 17, 19, 21], "question": [2, 3, 19, 22], "changelog": [2, 3], "i": [3, 4, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24], "power": [3, 17, 24], "python": [3, 4, 9, 16, 17, 19, 21, 22, 23, 24], "framework": [3, 17, 18, 19, 24], "design": [3, 4, 16, 17, 19, 20, 21, 22, 23], "navig": [3, 24], "through": [3, 12, 17, 24], "structur": [3, 5, 8, 11, 12, 15, 17, 19, 20, 21, 22, 24], "binari": [3, 5, 7, 9, 19, 20, 21, 22, 23, 24], "data": [3, 5, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 22, 24], "oper": [3, 7, 8, 9, 11, 12, 15, 17, 18, 22, 24], "declar": [3, 12, 15, 17, 23], "parser": [3, 19, 21], "builder": [3, 21], "standard": [3, 6, 13, 14, 18, 21, 24], "class": [3, 6, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24], "definit": [3, 7, 12, 15, 17, 19, 20, 21, 22, 23, 24], "annot": [3, 12, 16, 17, 19, 20, 22, 23, 24], "re": [3, 20, 23], "involv": [3, 17, 19, 23], "revers": [3, 19], "engin": [3, 19], "work": [3, 7, 17, 21, 22, 24], "custom": [3, 20, 21, 24], "proprietari": [3, 22], "file": [3, 15, 16, 19, 20, 21, 22, 23], "format": [3, 6, 7, 9, 12, 16, 17, 19, 20, 21, 22, 23, 24], "often": [3, 22], "come": [3, 4, 16, 21, 22], "wai": [3, 17, 22], "both": 3, "easi": [3, 17, 23, 24], "effici": 3, "let": [3, 21, 22, 23], "defin": [3, 15, 16, 17, 19, 20, 21, 22, 24], "struct": [3, 4, 6, 7, 8, 12, 13, 14, 18, 19, 21, 24], "fix": [3, 4, 17, 20], "size": [3, 5, 6, 8, 12, 15, 17, 19, 24], "while": [3, 17, 19, 22, 23], "support": [3, 4, 5, 8, 12, 13, 15, 17, 19, 20, 21, 22, 24], "dynam": [3, 8, 12, 17, 20, 22], "adjust": 3, "base": [3, 7, 8, 12, 14, 16, 17, 19, 21, 22], "current": [3, 8, 9, 11, 12, 15, 17, 18, 20, 21, 22], "context": [3, 8, 9, 10, 11, 12, 14, 16, 18, 21, 23, 24], "enabl": [3, 4, 12, 16, 17, 20, 23, 24], "write": [3, 8, 15, 17, 20, 21, 22, 24], "complex": [3, 19, 22], "compact": [3, 22, 24], "readabl": [3, 19], "manner": 3, "simpl": [3, 12, 16, 17, 21, 22, 23], "exampl": [3, 15, 16, 17, 19, 21, 22, 23], "magic": [3, 7, 17, 21, 22], "foo": [3, 7, 15, 17, 20, 21, 22], "constant": [3, 7, 9, 12, 16, 20, 23, 24], "valu": [3, 5, 6, 7, 8, 9, 12, 15, 16, 17, 19, 20, 21, 22, 23], "name": [3, 4, 5, 6, 7, 15, 16, 18, 19, 21], "cstring": [3, 9, 17, 19, 20, 21, 24], "c": [3, 9, 16, 17, 21, 22], "string": [3, 6, 12, 13, 16, 17, 21, 24], "without": [3, 17, 20], "length": [3, 7, 9, 10, 11, 12, 17, 20, 21, 24], "le": [3, 19], "uint16": [3, 9, 17, 20, 21, 22, 23], "littl": [3, 6, 19, 23], "endian": [3, 6, 19, 23], "encod": [3, 9, 10, 19, 22, 23], "uint32": [3, 7, 9, 12, 17, 19, 20, 21, 22, 23], "arrai": [3, 16, 17, 19, 20, 21, 23, 24], "big": [3, 6, 23], "prefix": [3, 9, 19, 20, 21, 24], "how": [3, 17, 21], "doe": [3, 4, 9, 12, 17, 20, 21, 22], "even": [3, 17, 20, 21, 22], "answer": 3, "ar": [3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "given": [3, 5, 12, 13, 15, 17, 19, 20, 22, 23], "introduct": [3, 18, 23], "straightforward": [3, 17], "normal": [3, 16, 17, 20], "all": [3, 4, 8, 13, 15, 16, 17, 19, 20, 21, 22, 23], "automat": [3, 7, 12, 17, 19, 21, 22, 23], "obj": [3, 5, 6, 9, 10, 11, 12, 15, 16, 17, 21, 23], "hello": [3, 21, 22], "world": [3, 21, 22], "10": [3, 16, 19, 20, 22], "bar": [3, 15, 17, 20, 21], "baz": [3, 15, 17, 20, 21], "print": [3, 22], "pack": [3, 5, 9, 11, 12, 15, 16, 17, 19, 20, 21, 22, 24], "unpack": [3, 5, 9, 11, 12, 15, 16, 17, 19, 20, 21, 22, 24], "never": [3, 12], "been": [3, 12, 17, 19, 20, 22], "easier": 3, "foohello": 3, "x00": [3, 16, 17, 21, 22], "n": [3, 9, 21], "x02bar": 3, "x00baz": 3, "_": [3, 12, 16, 17, 19, 21, 22], "about": [3, 13, 17, 21, 23], "There": [3, 17, 19, 21], "special": [3, 13, 14, 16, 18, 20, 21, 24], "option": [3, 4, 8, 9, 11, 12, 14, 15, 17, 19, 20, 21, 23, 24], "onli": [3, 7, 12, 16, 17, 19, 20, 21, 22, 23], "purpos": [3, 16, 17], "so": [3, 4, 17, 20, 22], "don": [3, 4, 20, 21, 22], "t": [3, 4, 15, 16, 17, 19, 20, 21, 22, 23], "worri": 3, "field": [3, 7, 9, 10, 11, 14, 15, 18, 19, 22, 23, 24], "appli": [3, 6, 7, 15, 16, 17, 20, 21, 22, 23], "usual": [3, 17, 22], "want": [3, 4, 19, 20, 21, 22], "optim": [3, 17, 23], "memori": [3, 9, 11, 12, 16, 21, 23, 24], "space": [3, 16, 17, 22, 23], "No": [3, 17], "problem": [3, 17, 19, 21], "It": [3, 4, 5, 15, 16, 17, 19, 20, 21, 22, 23], "possibl": [3, 15, 16, 17, 20, 21, 22, 23], "shrink": 3, "occupi": [3, 16, 17, 22], "object": [3, 5, 6, 7, 9, 15, 19, 20, 21, 23, 24], "4": [3, 19, 21, 22], "more": [3, 13, 16, 17, 19, 20, 21, 22, 23, 24], "inform": [3, 6, 10, 13, 17, 21, 23], "when": [3, 8, 17, 19, 20, 22, 23], "avail": [3, 17, 19, 23], "configur": [3, 8, 12, 15, 17, 21, 22, 24], "recommend": [3, 17, 18, 21, 22], "take": [3, 5, 6, 16, 17, 20, 21, 22, 23], "look": [3, 21, 22, 23], "explan": [3, 22], "intern": [3, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24], "model": [3, 9, 13, 14, 16, 18, 19, 20, 21, 23, 24], "get": [3, 5, 6, 9, 11, 12, 15, 16, 18, 21, 23], "touch": 3, "form": [3, 12, 17, 19], "addition": [3, 17, 19, 22], "altern": [3, 20], "tutori": [3, 18, 19, 21, 22, 23], "user": [3, 16, 18, 19, 20, 21, 23, 24], "friendli": [3, 18, 20, 21, 24], "refer": [3, 4, 12, 13, 15, 17, 19, 21, 22, 24], "librari": [3, 4, 13, 17, 18, 19, 21, 22, 23, 24], "sourc": [3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 21], "code": [3, 16, 17, 19, 22, 23, 24], "sphinx": [3, 17, 23], "index": [3, 17], "modul": [3, 6, 17, 21, 23], "search": 3, "page": 3, "caterpillar": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24], "direct": [4, 5, 17, 21, 22], "candid": 4, "therefor": [4, 15, 16, 17, 20, 21], "link": [4, 12, 17, 19, 20], "ha": [4, 5, 7, 12, 15, 16, 17, 20, 22], "depend": [4, 17, 19, 21, 23], "out": [4, 22], "box": 4, "pip": [4, 22], "http": [4, 19], "com": 4, "matrixeditor": 4, "clone": 4, "repositori": [4, 19], "forget": 4, "e": [4, 9, 12, 16, 17, 21, 22], "via": [4, 22], "mode": [4, 11], "packag": 4, "extra": [4, 12, 17, 20, 21, 22, 23], "specif": [4, 13, 15, 16, 18, 19, 22, 24], "correspond": [4, 9, 17, 21, 22], "done": [4, 13, 22, 23], "again": [4, 17, 22], "where": [4, 12, 15, 17, 19, 20, 21, 22], "lzo": [4, 10, 22], "compress": [4, 13, 14, 24], "crypt": 4, "extend": [4, 17, 20, 21, 22], "encrypt": [4, 11], "decrypt": [4, 11], "wish": 4, "sure": 4, "especi": 4, "3": [4, 17, 19, 20, 21, 22, 23], "12": [4, 19], "prior": 4, "version": [4, 17, 21], "subject": [4, 17, 18, 21], "approv": 4, "abc": [5, 9], "_supportspack": 5, "arg": [5, 11, 15], "kwarg": [5, 15, 20], "stream": [5, 9, 12, 15, 17, 19, 20, 21, 22, 23], "_supportsunpack": [5, 15], "from": [5, 6, 7, 9, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24], "_supportss": 5, "determin": [5, 8, 17], "_structlik": [5, 9, 10, 11, 12, 15, 17], "like": [5, 17, 19, 20, 21, 22, 23], "_containsstruct": [5, 10, 15], "indic": [5, 6, 12, 17], "contain": [5, 16, 19, 22, 23], "_contextlik": [5, 9, 10, 11, 12], "A": [5, 6, 7, 9, 10, 12, 15, 16, 17, 20, 21, 22], "dictionari": [5, 15, 17, 20], "allow": [5, 8, 12, 17, 21, 22], "attribut": [5, 9, 12, 14, 15, 16, 17, 20, 21, 23], "access": [5, 7, 17, 20, 22, 23], "modif": 5, "_contextlambda": [5, 7, 9, 10, 11, 12, 17, 20], "lambda": [5, 7, 12, 20, 21, 22], "function": [5, 7, 11, 12, 14, 17, 19, 20, 22, 23, 24], "argument": [5, 11, 15, 17, 20, 21, 23], "_enumlik": [5, 9], "enum": [5, 9, 15, 17, 22, 23], "map": [5, 17, 20], "_switch": [5, 12], "switch": [5, 12, 17, 19, 24], "struct_field": 5, "__struct__": [5, 17, 22], "hasstruct": 5, "bool": [5, 7, 9, 12, 15, 16], "check": [5, 9, 12, 15, 16], "paramet": [5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 21], "The": [5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 19, 20, 22, 23, 24], "return": [5, 6, 9, 10, 11, 12, 15, 16, 17, 20, 21, 22], "true": [5, 9, 12, 15, 16, 17, 21], "els": [5, 15, 17, 20, 21], "fals": [5, 9, 15, 16, 17, 21], "getstruct": 5, "__default": 5, "none": [5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 21, 22], "typeof": 5, "type": [5, 6, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 24], "str": [6, 7, 8, 9, 12, 15, 16, 19, 21], "ch": [6, 9], "align": 6, "repres": [6, 7, 9, 10, 12, 15, 17, 22, 24], "byte": [6, 10, 12, 13, 15, 16, 17, 19, 20, 21, 23, 24], "order": [6, 12, 15, 17, 19, 21, 22, 23], "includ": [6, 15, 16, 17, 19, 20, 22], "charact": [6, 22], "specifi": [6, 7, 11, 12, 15, 17, 20, 21, 22, 23], "enumer": [6, 9, 24], "default": [6, 9, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23], "qualnam": 6, "start": [6, 17, 18, 19, 21, 22, 23, 24], "1": [6, 16, 17, 19, 20, 21, 22, 23], "boundari": 6, "other": [6, 7, 12, 14, 17, 19, 20, 21, 22, 23], "anoth": [6, 12, 17, 20, 23], "which": [6, 12, 17, 20, 22, 23], "should": [6, 12, 15, 16, 17, 19, 21, 22], "byteorder_field": 6, "__byteorder__": [6, 12, 17], "nativ": [6, 21], "0": [6, 16, 17, 19, 20, 21, 22], "bigendian": [6, 17, 19, 21, 22, 23], "littleendian": [6, 19], "netendian": 6, "network": 6, "sysn": [6, 12], "explicitli": [6, 12, 17, 23], "set": [6, 12, 15, 16, 17, 20, 22, 24], "retriev": [6, 7, 12, 16, 17, 20, 22], "arch": [6, 12, 15, 17, 23], "ptr_size": 6, "int": [6, 9, 10, 11, 12, 15, 16, 20, 21, 22], "system": [6, 17], "whether": [6, 12, 15, 16, 17], "64": [6, 19], "bit": [6, 9, 12, 17, 19, 20, 21, 22], "amount": [6, 12, 16, 20], "one": [6, 12, 16, 17, 19, 21, 22, 23], "pointer": [6, 24], "system_arch": 6, "x86_64": 6, "style": 7, "contextpath": [7, 20], "contextlength": 7, "conditioncontext": 7, "condit": [7, 12, 17, 20, 22, 24], "depth": [7, 12], "2": [7, 12, 16, 17, 19, 21, 23], "implement": [7, 9, 12, 13, 15, 19, 20, 21, 22, 23], "inlin": [7, 15], "multipl": [7, 12, 17, 22], "note": [7, 12, 15, 18, 19, 22, 23], "parent": [7, 17, 22], "stack": 7, "frame": [7, 22], "mgk": 7, "32": [7, 12], "here": [7, 17, 19, 21, 22, 23, 24], "uint8": [7, 9, 12, 16, 17, 19, 20, 21, 22, 23], "replac": [7, 16, 17, 20], "exist": [7, 17], "union": [7, 10, 11, 12, 15, 16, 24], "boolean": [7, 9, 12, 17, 20], "ctx": [7, 17, 20], "ctx_parent": [7, 17], "_parent": [7, 17], "ctx_object": [7, 17], "_obj": [7, 17, 20], "ctx_offset": [7, 17], "_offset": [7, 17], "ctx_stream": [7, 17], "_io": [7, 17], "ctx_field": [7, 17], "_field": [7, 17], "ctx_valu": [7, 17], "_valu": [7, 17, 20], "ctx_po": [7, 17], "_po": [7, 17], "ctx_index": [7, 17], "_index": [7, 17], "ctx_path": [7, 17], "_path": [7, 17], "ctx_seq": 7, "_is_seq": 7, "exprmixin": 7, "mixin": [7, 12], "method": [7, 9, 12, 15, 16, 18, 20, 22], "unari": 7, "binaryexpress": 7, "operand": [7, 17, 21], "callabl": [7, 10, 15, 17, 20], "left": [7, 21], "right": [7, 17, 21], "unaryexpress": 7, "structexcept": 8, "messag": 8, "dict": [8, 10, 12, 15, 17], "relat": [8, 12, 16, 17, 19], "invalidvalueerror": 8, "rais": [8, 9, 12, 17], "invalid": 8, "dynamicsizeerror": [8, 12, 17], "error": [8, 15, 17, 20, 22], "element": [8, 9, 11, 12, 17, 20, 22], "streamerror": 8, "read": [8, 15, 19, 21, 22], "delegationerror": 8, "underli": [8, 12, 17, 20], "call": [8, 15, 16, 17, 19, 20, 21, 22], "fail": 8, "stop": [8, 20], "pars": [8, 9, 10, 12, 17, 19, 20, 21, 22], "process": [8, 11, 12, 17, 19, 21, 22], "optionerror": 8, "handl": [8, 9, 17, 24], "choic": [8, 21], "within": [8, 12, 15, 17, 20, 22], "unsupportedoper": 8, "unsupport": [8, 21], "attempt": [8, 17], "validationerror": [8, 9], "valid": [8, 22], "content": [8, 22], "formatfield": [9, 16, 17], "type_": [9, 11], "get_format": 9, "is_pad": 9, "pad": [9, 11, 16, 17, 19, 21, 24], "otherwis": [9, 16], "pack_seq": [9, 12], "seq": [9, 12, 16, 19, 20], "sequenc": [9, 12, 15, 18, 24], "pack_singl": [9, 11, 12], "singl": [9, 11, 12, 17], "output": [9, 16, 17], "text": [9, 21, 22], "char": 9, "g": [9, 16, 17, 21, 22, 23], "x": [9, 17, 20], "ty": 9, "unpack_seq": [9, 12], "list": [9, 12, 15, 17, 20, 23, 24], "unpack_singl": [9, 11, 12], "int8": [9, 22], "h": 9, "int16": [9, 22], "int32": [9, 22], "uint64": 9, "q": 9, "int64": [9, 22], "size_t": 9, "ssize_t": 9, "float16": 9, "float": [9, 20, 22], "float32": [9, 22], "f": [9, 16, 20, 21, 22], "float64": [9, 22], "d": [9, 16, 19], "void_ptr": 9, "p": 9, "sign": [9, 22], "abstract": [9, 12, 14], "notimplementederror": [9, 12], "must": [9, 12, 16, 17, 20, 21, 22, 23], "subclass": [9, 12, 17, 20], "memoryview": [9, 11, 12, 22], "uint": [9, 19, 22], "varint": [9, 22], "fieldstruct": [9, 12, 13], "end": [9, 12, 17, 20, 22, 24], "0x00": 9, "conststr": 9, "utf": [9, 19, 22], "8": [9, 17, 19, 20, 22], "constbyt": [9, 24], "pass": [9, 15, 17, 20, 21, 24], "notrequir": 9, "transform": [9, 10, 21], "dure": [9, 12, 17], "comput": [9, 24], "act": [9, 17, 20], "decod": [9, 10, 23], "wrap": [9, 21, 23], "_member_map_": 9, "_value2member_map_": 9, "integ": [9, 20, 21, 23, 24], "its": [9, 12, 16, 17, 19, 20, 21, 23], "input": [9, 10, 17, 22, 23], "const": [9, 24], "enforc": 9, "ensur": 9, "match": 9, "ignor": [9, 17], "compressor": 10, "_compressor": 10, "comp_kwarg": 10, "decomp_kwarg": 10, "algorithm": [10, 11], "decompress": [10, 21], "zlibcompress": [10, 20, 21, 22], "zlib": [10, 22], "bz2compress": 10, "bz2": [10, 22], "lzmacompress": 10, "lzma": [10, 22], "lzocompress": 10, "ellipsi": [11, 12, 15, 17], "cipheralgorithm": 11, "algo_arg": 11, "iter": [11, 12, 15, 17, 19], "mode_arg": 11, "padding_arg": 11, "post": 11, "abl": [11, 19, 20, 24], "block": [11, 19, 23], "_greedytyp": [11, 12, 20], "scheme": 11, "_argtyp": 11, "addit": [11, 12, 15, 16, 17, 22, 23], "instanc": [11, 12, 15, 16, 17, 19, 20, 21, 22, 23], "get_inst": 11, "desir": [11, 17, 19], "slice": [12, 17, 20], "zero": [12, 16, 17], "associ": [12, 16, 17, 22, 23], "": [12, 16, 19, 21, 22, 23, 24], "architectur": [12, 14, 15, 17, 21, 23], "infer": [12, 15, 17, 21], "decid": [12, 16, 17], "flag": [12, 15, 16, 19, 20], "logic": [12, 18, 20], "OR": [12, 20], "keep_posit": 12, "persist": 12, "posit": [12, 15, 17, 20, 21], "after": [12, 19, 20, 23], "In": [12, 16, 17, 19, 20, 21, 22, 23], "offset": [12, 17, 20, 24], "reset": 12, "deactiv": 12, "store": [12, 15, 16, 17, 20, 21, 22], "sequenti": [12, 22], "get_offset": 12, "get_struct": 12, "get_typ": 12, "has_condit": 12, "has_flag": [12, 16], "lookup": 12, "found": [12, 16, 17], "is_en": 12, "evalu": [12, 17], "is_seq": 12, "sequent": 12, "calcul": [12, 17, 22], "number": [12, 17, 23, 24], "assign": [12, 17, 19, 21], "minu": 12, "translat": [12, 15], "statement": [12, 17], "byteord": [12, 14, 15, 22], "mai": [12, 16, 17, 18, 20, 22], "impact": [12, 17], "actual": [12, 17, 19, 22], "build": [12, 17, 19, 22], "our": [12, 16, 17, 21, 22, 23], "null": [12, 22], "fieldmixin": [12, 13, 17, 20], "mix": 12, "combin": [12, 17, 21], "behavior": [12, 17, 20, 21], "__bits__": [12, 17], "tbd": 12, "measur": [12, 17, 19], "__pack__": [12, 17], "__repr__": 12, "represent": [12, 17, 20], "__unpack__": [12, 17, 21], "chain": [12, 13, 17, 20, 24], "initi": [12, 15, 19, 20], "each": [12, 15, 16, 17, 23], "travel": 12, "head": [12, 21], "tail": [12, 21], "__and__": [12, 20], "concaten": [12, 17], "updat": [12, 16], "__init__": [12, 15], "__rand__": 12, "begin": [12, 17], "__size__": [12, 17], "__type__": [12, 17], "properti": [12, 22], "first": [12, 17, 20, 21, 24], "last": [12, 17, 20, 21, 22], "view": 12, "global_const": 12, "33": [12, 19], "alter": [12, 16, 17, 20, 21], "cover": [12, 19], "modifi": [12, 15], "displai": [12, 17, 23], "well": [12, 16, 17, 20, 21, 24], "manag": 12, "elseif": [12, 13, 21], "34": 12, "serv": [13, 17, 19, 22], "foundat": [13, 17, 19], "everyth": [13, 20, 23], "section": [13, 17, 18, 20, 21, 22, 23], "compat": [13, 17], "common": [13, 14, 21, 22, 23], "numer": 13, "basic": [13, 17, 21, 23, 24], "cryptograph": [13, 14], "core": [13, 17, 19], "interfac": [13, 14, 18, 20], "descript": [14, 21], "wip": 14, "path": [14, 21, 22], "express": [14, 17, 22], "templat": [14, 24], "runtim": [14, 15, 19, 24], "formal": 14, "add_field": 15, "global": [15, 20, 21, 23], "del_field": 15, "remomv": 15, "remov": [15, 16, 17, 18, 20, 23], "field_opt": 15, "collect": [15, 17, 21], "wherebi": [15, 16], "mean": [15, 17, 20], "rel": [15, 17], "These": [15, 17, 22], "has_opt": 15, "target": [15, 17], "final": [15, 16, 17, 18, 20, 21], "__annotations__": [15, 16], "serial": [15, 17, 23], "deseri": [15, 17], "bitfieldgroup": [15, 17], "po": [15, 17], "bitfield": [15, 19, 20, 24], "unionhook": [15, 21], "struct_": 15, "hook": [15, 17], "simul": [15, 17], "two": [15, 16, 17, 20, 21, 23], "__setattr__": 15, "becaus": [15, 16, 17, 20, 21, 22], "constructor": [15, 17, 21, 22], "setattr": 15, "we": [15, 16, 17, 19, 20, 21, 22, 23], "intercept": 15, "befor": [15, 16, 17, 21, 22], "statu": 15, "__model_init__": 15, "__model_setattr__": 15, "max_siz": 15, "static": [15, 17, 19, 20, 22], "cach": 15, "maximum": 15, "cl": 15, "kwd": 15, "decor": [15, 20, 21, 23], "wrapper": [15, 17], "buffer": 15, "keyword": [15, 17, 20, 21, 22, 23], "pack_into": 15, "iobas": 15, "use_tempfil": 15, "pack_fil": [15, 21], "filenam": 15, "unpack_fil": [15, 21], "templatetypevar": [15, 17, 21], "field_kwd": 15, "variabl": [15, 17, 20, 21, 24], "specialis": 15, "thei": [15, 16, 17, 21, 23], "most": [15, 17, 21, 23], "situat": [15, 17, 21, 22], "adapt": [15, 17, 23], "throw": [15, 21], "bound": [15, 21, 22], "istempl": 15, "requir": [15, 16, 17, 19, 22, 23], "necessari": [15, 17, 21, 23], "prepar": 15, "deriv": [15, 17, 21], "template_ti": 15, "tys_arg": 15, "partial": [15, 17, 21], "tys_kwarg": 15, "result": [15, 16, 17, 19, 20, 21], "outer": 15, "o_array_factori": 16, "To": [16, 17, 18, 20, 21, 22, 23], "control": 16, "factori": 16, "attach": [16, 17], "For": [16, 17, 20, 21, 22, 24], "incorpor": [16, 17, 19], "numpi": 16, "ndarrai": 16, "import": [16, 17, 19, 20, 22, 23, 24], "With": [16, 17, 19, 20, 22, 23], "less": [16, 23], "tabl": 16, "show": [16, 19], "nibarch": [16, 17], "caf": [16, 19], "26520": 16, "10608": 16, "__slots__": 16, "14240": 16, "3848": 16, "7520": 16, "1232": 16, "6152": 16, "384": 16, "files": 16, "1157": 16, "5433": 16, "audio": 16, "chunk": [16, 21, 22, 23], "By": [16, 17, 19, 21, 23], "ingor": 16, "achiev": [16, 17], "than": [16, 17, 20, 21, 23], "s_discard_unnam": [16, 17, 21], "unnam": [16, 17, 21], "discard": 16, "won": [16, 17, 21, 22, 23], "visibl": [16, 17], "convent": [16, 17, 21], "9": 16, "schema": 16, "opt": [16, 23], "xff": 16, "255": 16, "s_discard_const": 16, "s_slot": [16, 23], "lower": [16, 21], "consider": [16, 17, 19], "dictclass": 16, "slotsclass": 16, "seven": 16, "total": 16, "format2": 16, "member": [16, 17, 23], "pympler": 16, "per": [16, 17], "o1": 16, "0xff": 16, "7": [16, 19], "asizeof": 16, "712": 16, "o2": 16, "120": 16, "overal": 16, "reduc": 16, "sy": 16, "getsizeof": 16, "1704": 16, "936": 16, "s_replace_typ": [16, 17, 23], "wa": [16, 17, 19, 21, 22, 23], "document": [16, 17, 18, 19, 21, 22, 24], "consid": [16, 18, 19, 24], "uuid": 16, "line": [16, 19, 21], "set_struct_flag": [16, 23], "notic": 16, "disabl": 16, "s_eval_annot": [16, 17], "__future__": [16, 17], "scope": 16, "stringifi": 16, "place": [16, 17, 20, 21], "analyz": 16, "caution": [16, 17, 19], "untrust": 16, "awar": [16, 22], "s_union": 16, "behaviour": [16, 20, 22], "f_keep_posit": [16, 20], "f_dynam": 16, "f_sequenti": 16, "f_offset_overrid": 16, "customiz": 16, "with_union": 16, "set_field_flag": 16, "set_union_flag": 16, "get_flag": 16, "attr": 16, "present": [16, 19, 23], "undergo": [17, 19], "three": [17, 20, 22, 23], "independ": [17, 23], "them": [17, 20, 22, 23], "agnost": 17, "As": [17, 21], "do": [17, 21, 22, 24], "typic": 17, "later": [17, 22, 23], "primit": 17, "depent": 17, "being": [17, 19, 22], "scenario": [17, 19, 22], "select": 17, "paramount": 17, "focu": [17, 23], "sole": 17, "modular": 17, "approach": [17, 22, 24], "essenti": [17, 22], "aim": [17, 19], "capabl": 17, "below": [17, 19, 20, 21], "maintain": 17, "older": 17, "particularli": 17, "previous": [17, 20, 21, 22], "explain": [17, 24], "introduc": [17, 21, 22, 23, 24], "finit": 17, "distinct": 17, "between": [17, 19], "regard": [17, 19], "entail": 17, "directli": [17, 19, 20, 23], "inherit": [17, 20], "pose": 17, "challeng": [17, 21], "hierarchi": 17, "instanti": [17, 23], "concern": [17, 23], "activ": 17, "Their": 17, "underscor": 17, "_123": 17, "mention": [17, 22], "earlier": [17, 22], "exclud": 17, "complet": [17, 18, 21, 24], "why": [17, 18], "intric": 17, "construct": [17, 19], "__add__": [17, 20], "disadvantag": 17, "placement": 17, "baseformat": 17, "get_memb": 17, "intend": [17, 22], "correct": [17, 23], "unus": 17, "elsewher": 17, "sub": [17, 21], "resolv": [17, 20], "eas": [17, 19, 22], "nest": 17, "layer": 17, "contrast": 17, "util": [17, 19, 23], "dataclass": 17, "offer": [17, 24], "sever": [17, 19, 21], "differ": [17, 19, 20, 21, 22], "signific": 17, "ones": 17, "highlight": 17, "ye": [17, 21], "getattr": [17, 20], "insid": 17, "evid": 17, "comparison": [17, 18], "crucial": [17, 19, 22], "exclus": 17, "afterward": [17, 20], "sinc": [17, 19, 22], "stringiz": 17, "inspect": 17, "potenti": 17, "secur": 17, "risk": 17, "exercis": 17, "shown": 17, "abov": [17, 23], "resolut": 17, "That": [17, 22, 23], "anonym": 17, "inner": 17, "techniqu": [17, 21, 22], "anywher": 17, "tricki": [17, 20], "offici": 17, "yet": [17, 22, 23], "workaround": 17, "api": [17, 18, 21, 24], "predefin": 17, "greatest": 17, "much": [17, 21, 23], "essenc": 17, "behav": [17, 21], "similarli": 17, "tradit": 17, "instal": [17, 22], "captur": 17, "illustr": 17, "now": [17, 18, 19, 21, 22, 23], "henc": 17, "0xff00ff00": 17, "65280": 17, "4278255360": 17, "synchron": [17, 21], "produc": 17, "overhead": 17, "everi": [17, 22, 23], "refresh": 17, "despit": 17, "similar": [17, 19, 21, 23], "experiment": [17, 20], "advis": [17, 19], "known": [17, 20], "individu": 17, "Its": [17, 20, 21, 22], "reli": 17, "consequ": 17, "alwai": [17, 22], "possess": 17, "organiz": 17, "group": 17, "absolut": 17, "along": 17, "width": 17, "15": [17, 19], "16": [17, 19, 21], "eight": 17, "until": [17, 20, 21], "fill": 17, "third": 17, "wide": [17, 23], "storag": 17, "duplic": 17, "built": [17, 19, 22], "case": [17, 19, 20, 21, 22], "rather": [17, 22], "leverag": 17, "syntact": 17, "abcd": 17, "relev": [17, 22], "top": [17, 20], "level": [17, 22, 24], "themselv": [17, 19], "pre": 17, "applic": [17, 20, 22, 23, 24], "wasn": 17, "assum": [17, 23], "root": 17, "point": [17, 19, 22, 23, 24], "minim": [17, 19, 23], "shortcut": [17, 19, 20, 22, 23], "insert": 17, "prevent": 17, "miss": 17, "although": [17, 21], "under": 17, "receiv": 17, "temporarili": [17, 20, 21], "undefin": 17, "mimic": 17, "__call__": [17, 20], "self": [17, 19, 20], "distinguish": 17, "treat": 17, "same": [17, 20, 21, 22, 23], "aspect": [17, 19], "lazi": [17, 20], "onc": 17, "try": [17, 22, 23], "think": 17, "blueprint": 17, "placehold": 17, "usabl": 17, "suppli": 17, "nor": 17, "formattempl": [17, 21], "__main__": 17, "__4be4f2562b65393cformattempl": 17, "tri": [17, 20], "summari": 17, "alreadi": [17, 20, 21], "__template__": 17, "format32": [17, 21], "copi": [17, 20], "comment": 17, "subsequ": 17, "overview": [17, 19, 20], "further": [17, 21], "insight": [17, 24], "invok": [17, 20], "accordingli": 17, "singular": 17, "absenc": 17, "deliber": 17, "verif": 17, "dictat": 17, "written": [17, 20, 21], "outcom": 17, "beta": 17, "instead": [17, 19, 21, 22], "move": [17, 23], "desersi": 17, "go": [17, 21], "task": [17, 19], "decis": 17, "concurr": 17, "integr": [17, 19, 22, 23], "furthermor": 17, "explicit": 17, "mandatori": 17, "demonstr": [17, 19, 22], "autodoc": 17, "extens": [17, 19], "autoclass": 17, "nibhead": 17, "Will": 17, "doc": [17, 19, 21, 23], "parenthes": 17, "creation": [17, 21], "fall": 17, "categori": 17, "emploi": 17, "mani": 17, "One": 17, "kei": [17, 20, 21], "count": [17, 19, 22], "appropri": 17, "__set_byteorder__": 17, "__name__": 17, "regular": 17, "dedic": 17, "readi": [18, 22, 23, 24], "delv": 18, "evolv": 18, "over": [18, 21], "noth": [18, 22], "visit": 18, "pro": 18, "con": 18, "dive": 19, "deeper": [19, 24], "\u02c8": 19, "k": [19, 21], "\u00e6": 19, "\u0259": 19, "rp": 19, "\u026a": 19, "l": 19, "r": [19, 21, 23], "wormlik": 19, "larva": 19, "butterfli": 19, "moth": 19, "metamorphosi": 19, "facilit": 19, "address": 19, "burn": 19, "those": [19, 20, 24], "doesn": [19, 20, 22], "shareabl": 19, "deliv": 19, "advantag": 19, "bring": [19, 21], "reason": 19, "benefici": 19, "quick": 19, "rapidli": 19, "fun": 19, "experi": 19, "plai": [19, 22], "around": 19, "biggest": 19, "lack": 19, "extern": 19, "though": [19, 20], "speak": 19, "cafchunk": 19, "chunk_head": 19, "cafchunkhead": 19, "chunk_typ": 19, "desc": 19, "cafaudioformat": 19, "info": 19, "cafstringschunk": 19, "pakt": 19, "cafpackett": 19, "cafdata": 19, "chunk_siz": 19, "fallback": [19, 22], "default_opt": [19, 20, 21], "conflict": 19, "default_valu": 19, "elimin": [19, 22], "kaitai": 19, "benchmark": 19, "focus": 19, "bool1": 19, "num4": 19, "item": [19, 22], "num1": 19, "num2": 19, "24": [19, 22], "fixedarray1": 19, "name1": 19, "name2": 19, "put": 19, "int32ul": 19, "int8ul": 19, "int24ul": 19, "bitstruct": 19, "bitsinteg": 19, "utf8": 19, "pascalstr": 19, "d_compil": 19, "compil": 19, "meta": 19, "id": 19, "comparison_1_kaitai": 19, "u4": 19, "repeat": 19, "expr": 19, "u1": 19, "num2_lo": 19, "u2": 19, "num2_hi": 19, "strz": 19, "len_name2": 19, "b1": 19, "b3": 19, "b4": 19, "hachoir": 19, "stringinputstream": 19, "little_endian": 19, "fieldset": 19, "def": 19, "createfield": 19, "yield": 19, "uint24": 19, "paddingbit": 19, "rang": [19, 22], "fixedarrai": 19, "pascalstring8": 19, "mrcrowbar": 19, "bits8": 19, "uint24_l": 19, "uint32_l": 19, "blockfield": 19, "cstringn": 19, "ref": 19, "0x0004": 19, "0b10000000": 19, "0b01110000": 19, "0x0005": 19, "0x0008": 19, "length_field": 19, "0x0000": 19, "thousand": 19, "score": 19, "fastest": 19, "perform": 19, "compar": [19, 21], "primari": 19, "goal": 19, "window": 19, "vm": 19, "latest": 19, "stabl": 19, "v3": 19, "2305ca5": 19, "msc": 19, "v": 19, "1937": 19, "amd64": 19, "win32": 19, "pypi": 19, "1929": 19, "venv": 19, "python3": 19, "comparison_1_caterpillar": 19, "py": 19, "blob": [19, 21], "timeit": 19, "0097203362": 19, "sec": 19, "0078892448": 19, "0044497086": 19, "0021923946": 19, "comparison_1_construct": 19, "0145166325": 19, "0085910592": 19, "0125181926": 19, "0098681578": 19, "0051257158": 19, "0033772090": 19, "0037924385": 19, "0031346225": 19, "0034705456": 19, "0008136422": 19, "comparison_1_hachoir": 19, "0260070809": 19, "0063716554": 19, "comparison_1_mrcrowbar": 19, "0555872261": 19, "0898006975": 19, "0110391153": 19, "0126670091": 19, "approxim": 19, "04": 19, "faster": [19, 23], "36": 19, "97": 19, "13": [19, 21], "14": 19, "slower": 19, "20": 19, "05": 19, "figur": 19, "reflect": 19, "trade": 19, "off": 19, "simplic": 19, "small": [19, 21], "acknowledg": 19, "assert": 19, "perfect": 19, "interpret": [19, 22, 23], "en": 19, "wikipedia": [19, 23], "org": 19, "wiki": 19, "degre": 19, "variou": 20, "__getitem__": 20, "kind": 20, "accept": 20, "100": [20, 22], "choos": 20, "greedi": [20, 21, 22], "unknown": [20, 22], "eof": 20, "thrown": 20, "_prefixedtyp": 20, "improv": 20, "prefixed_arrai": 20, "__rshift__": 20, "limit": [20, 21], "back": [20, 21], "submodul": 20, "__matmul__": 20, "reader": 20, "jump": 20, "continu": 20, "lose": 20, "firstli": 20, "temporari": 20, "0x1234": [20, 21], "raw": [20, 22], "turn": 20, "help": [20, 21, 23], "0x1233": 20, "__floordiv__": 20, "certain": [20, 22], "lenof": [20, 22], "propos": 20, "__rsub__": 20, "affect": [20, 22], "__or__": 20, "__ior__": 20, "__xor__": 20, "__ixor__": 20, "xor": 20, "__iadd__": 20, "__sub__": 20, "__isub__": 20, "recurs": 20, "split": 20, "part": 20, "reach": 20, "occur": 20, "facil": 20, "almost": 20, "state": [20, 21, 23], "19": 20, "effect": [20, 21], "getitem": 20, "acquir": 21, "understand": [21, 22, 23], "close": 21, "leav": 21, "equip": [21, 24], "own": [21, 22], "showcas": 21, "notabl": 21, "usag": 21, "someon": 21, "might": [21, 22, 23], "expect": [21, 23], "know": 21, "endia": [21, 22], "unnecessarili": 21, "slow": 21, "down": 21, "enough": 21, "png": [21, 22, 23], "layout": 21, "pngchunk": [21, 23], "shift": 21, "ihdr": 21, "ihdrchunk": 21, "plte": [21, 22, 23], "pltechunk": [21, 22], "phy": [21, 22, 23], "physchunk": [21, 22, 23], "itxt": [21, 22], "itxtchunk": [21, 22], "timechunk": [21, 23], "textchunk": [21, 22], "fdat": [21, 22], "fdatchunk": [21, 22], "ztxt": [21, 22], "ztxtchunk": [21, 22], "gama": [21, 22], "gamachunk": [21, 22], "iend": 21, "overrid": 21, "solv": 21, "ok": 21, "okai": [21, 22], "recent": 21, "stdin": 21, "typeerror": 21, "emul": 21, "uintptr": 21, "multipli": 21, "x04hello": 21, "o": 21, "_arch": 21, "x86": 21, "0x4": 21, "sidenot": 21, "bi": 21, "pipelin": 21, "goe": 21, "share": 21, "alon": 21, "could": [21, 23], "caus": 21, "unintend": 21, "side": 21, "invert": 21, "chunkopt": 21, "ancillari": 21, "f0": 21, "_1": 21, "_2": 21, "privat": 21, "5": [21, 22], "th": 21, "_3": 21, "_4": 21, "reserv": 21, "f2": 21, "_5": 21, "_6": 21, "safe_to_copi": 21, "f3": 21, "76543210": 21, "breakdown": 21, "00100000": 21, "___": 21, "u": [21, 22], "f1": 21, "realli": [21, 22], "previou": 21, "chunknam": 21, "bahaviour": 21, "chnk": 21, "upper": 21, "whatev": 21, "hook_cl": 21, "correctli": [21, 23], "see": 21, "format16": 21, "formatsubtempl": 21, "upon": [21, 24], "format8": 21, "finish": 21, "main": [21, 22], "x89png": [21, 22], "x0d": [21, 22], "x0a": [21, 22], "x1a": [21, 22], "Thats": 21, "qualifi": 21, "imag": 21, "sampl": [21, 22], "bodi": 21, "crc": 21, "258163462": 21, "destin": 21, "journi": 21, "resourc": [21, 23, 24], "progress": 21, "ll": [22, 24], "explor": [22, 23, 24], "stage": 22, "advanc": [22, 23, 24], "topic": [22, 23], "chapter": 22, "prompt": [22, 23], "deal": 22, "role": [22, 23], "besid": 22, "etc": 22, "unsign": [22, 23], "aka": 22, "doubl": 22, "howev": 22, "40": 22, "five": 22, "revisit": 22, "physunit": 22, "intenum": 22, "metr": 22, "pixels_per_unit_x": [22, 23], "pixels_per_unit_i": [22, 23], "unit": [22, 23], "auto": 22, "worth": 22, "encount": 22, "trigger": 22, "simplifi": 22, "rgb": [22, 23], "divid": 22, "beyond": 22, "mere": 22, "iso": 22, "8859": 22, "chunkt": 22, "strip": 22, "keword": 22, "yourself": 22, "solut": [22, 23], "isn": 22, "compression_flag": 22, "compression_method": 22, "language_tag": 22, "ascii": 22, "translated_keyword": 22, "len": 22, "termin": 22, "trail": 22, "pascal": 22, "rhello": 22, "too": 22, "x01": [22, 23], "x02": [22, 23], "x03": [22, 23], "x04": 22, "0x00000204fdfa4411": 22, "handi": 22, "convert": 22, "gain": [22, 24], "knowledg": 22, "sequence_numb": 22, "frame_data": 22, "textual": 22, "haven": 22, "heve": 22, "retain": 22, "lot": 22, "coffe": 22, "break": 22, "keep": 22, "track": 22, "referenc": 22, "encapsul": [22, 23], "seen": 22, "foobar": 22, "against": 22, "implicitli": 22, "0xbeef": 22, "lzallright": 22, "rare": 22, "unless": 22, "real": 22, "gamma": 22, "gamma_valu": 22, "100000": 22, "congratul": 22, "successfulli": 22, "master": 22, "brace": 22, "breathtak": 22, "action": 22, "relax": 23, "avoid": 23, "technic": 23, "snippet": 23, "reproduc": 23, "encourag": 23, "organ": 23, "due": 23, "imposs": 23, "forward": 23, "save": 23, "becom": 23, "univers": 23, "taken": 23, "wow": 23, "thats": 23, "thank": 23, "unnecessari": 23, "equival": 23, "recreat": 23, "And": 23, "warm": 23, "four": 23, "find": 23, "mozilla": 23, "stackoverflow": 23, "meaningless": 23, "year": 23, "month": 23, "dai": 23, "hour": 23, "minut": 23, "second": 23, "codebas": 23, "abil": 23, "autodoc_member_ord": 23, "bysourc": 23, "fundament": 23, "upcom": 23, "inclus": 23, "learn": 24, "robust": 24, "high": 24, "overload": 24, "clean": 24, "divers": 24, "moreov": 24, "arm": 24, "hastili": 24, "skim": 24, "dig": 24, "step": 24, "concept": 24}, "objects": {"": [[17, 0, 1, "", "CTX_FIELD"], [17, 0, 1, "", "CTX_INDEX"], [17, 0, 1, "", "CTX_OBJECT"], [17, 0, 1, "", "CTX_OFFSETS"], [17, 0, 1, "", "CTX_PARENT"], [17, 0, 1, "", "CTX_PATH"], [17, 0, 1, "", "CTX_POS"], [17, 0, 1, "", "CTX_STREAM"], [17, 0, 1, "", "CTX_VALUE"], [17, 0, 1, "", "ctx"], [17, 0, 1, "", "parent"], [17, 0, 1, "", "this"]], "caterpillar.abc": [[5, 0, 1, "", "STRUCT_FIELD"], [5, 1, 1, "", "_ContainsStruct"], [5, 1, 1, "", "_ContextLambda"], [5, 1, 1, "", "_ContextLike"], [5, 1, 1, "", "_EnumLike"], [5, 1, 1, "", "_StructLike"], [5, 1, 1, "", "_SupportsPack"], [5, 1, 1, "", "_SupportsSize"], [5, 1, 1, "", "_SupportsUnpack"], [5, 1, 1, "", "_Switch"], [5, 2, 1, "", "getstruct"], [5, 2, 1, "", "hasstruct"], [5, 2, 1, "", "typeof"]], "caterpillar.byteorder": [[6, 1, 1, "", "Arch"], [6, 0, 1, "", "BYTEORDER_FIELD"], [6, 0, 1, "", "BigEndian"], [6, 1, 1, "", "ByteOrder"], [6, 0, 1, "", "LittleEndian"], [6, 0, 1, "", "Native"], [6, 0, 1, "", "NetEndian"], [6, 0, 1, "", "SysNative"], [6, 2, 1, "", "byteorder"], [6, 0, 1, "", "system_arch"]], "caterpillar.byteorder.ByteOrder": [[6, 1, 1, "", "Alignment"], [6, 1, 1, "", "Size"], [6, 3, 1, "", "apply"]], "caterpillar.context": [[7, 1, 1, "", "BinaryExpression"], [7, 0, 1, "", "CTX_FIELD"], [7, 0, 1, "", "CTX_INDEX"], [7, 0, 1, "", "CTX_OBJECT"], [7, 0, 1, "", "CTX_OFFSETS"], [7, 0, 1, "", "CTX_PARENT"], [7, 0, 1, "", "CTX_PATH"], [7, 0, 1, "", "CTX_POS"], [7, 0, 1, "", "CTX_SEQ"], [7, 0, 1, "", "CTX_STREAM"], [7, 0, 1, "", "CTX_VALUE"], [7, 1, 1, "", "ConditionContext"], [7, 1, 1, "", "Context"], [7, 1, 1, "", "ContextLength"], [7, 1, 1, "", "ContextPath"], [7, 1, 1, "", "ExprMixin"], [7, 1, 1, "", "UnaryExpression"], [7, 0, 1, "", "ctx"], [7, 0, 1, "", "parent"], [7, 0, 1, "", "this"]], "caterpillar.exception": [[8, 1, 1, "", "DelegationError"], [8, 1, 1, "", "DynamicSizeError"], [8, 1, 1, "", "InvalidValueError"], [8, 1, 1, "", "OptionError"], [8, 1, 1, "", "Stop"], [8, 1, 1, "", "StreamError"], [8, 1, 1, "", "StructException"], [8, 1, 1, "", "UnsupportedOperation"], [8, 1, 1, "", "ValidationError"]], "caterpillar.fields": [[9, 1, 1, "", "Bytes"], [10, 2, 1, "", "Bz2Compressed"], [9, 1, 1, "", "CString"], [12, 1, 1, "", "Chain"], [10, 1, 1, "", "Compressed"], [9, 1, 1, "", "Computed"], [9, 1, 1, "", "Const"], [9, 1, 1, "", "ConstBytes"], [9, 1, 1, "", "ConstString"], [12, 1, 1, "", "ElseIf"], [11, 1, 1, "", "Encrypted"], [9, 1, 1, "", "Enum"], [12, 1, 1, "", "Field"], [12, 1, 1, "", "FieldMixin"], [12, 1, 1, "", "FieldStruct"], [9, 1, 1, "", "FormatField"], [12, 1, 1, "", "If"], [9, 1, 1, "", "Int"], [10, 2, 1, "", "LZMACompressed"], [10, 2, 1, "", "LZOCompressed"], [9, 1, 1, "", "Memory"], [9, 1, 1, "", "NotRequired"], [9, 0, 1, "", "Pass"], [9, 1, 1, "", "Prefixed"], [9, 1, 1, "", "String"], [9, 1, 1, "", "Transformer"], [9, 1, 1, "", "UInt"], [9, 0, 1, "", "VarInt"], [10, 2, 1, "", "ZLibCompressed"], [9, 0, 1, "", "boolean"], [9, 0, 1, "", "char"], [9, 0, 1, "", "float16"], [9, 0, 1, "", "float32"], [9, 0, 1, "", "float64"], [9, 0, 1, "", "int16"], [9, 0, 1, "", "int32"], [9, 0, 1, "", "int64"], [9, 0, 1, "", "int8"], [9, 0, 1, "", "padding"], [9, 0, 1, "", "size_t"], [9, 0, 1, "", "ssize_t"], [9, 0, 1, "", "uint16"], [9, 0, 1, "", "uint32"], [9, 0, 1, "", "uint64"], [9, 0, 1, "", "uint8"], [9, 0, 1, "", "void_ptr"]], "caterpillar.fields.Bytes": [[9, 3, 1, "", "unpack_single"]], "caterpillar.fields.CString": [[9, 3, 1, "", "pack_single"], [9, 3, 1, "", "unpack_single"]], "caterpillar.fields.Chain": [[12, 3, 1, "", "__and__"], [12, 3, 1, "", "__init__"], [12, 3, 1, "", "__rand__"], [12, 3, 1, "", "__size__"], [12, 3, 1, "", "__type__"], [12, 4, 1, "", "head"], [12, 3, 1, "", "pack_single"], [12, 4, 1, "", "tail"], [12, 3, 1, "", "unpack_single"]], "caterpillar.fields.Compressed": [[10, 3, 1, "", "decode"], [10, 3, 1, "", "encode"]], "caterpillar.fields.Computed": [[9, 3, 1, "", "pack_single"], [9, 3, 1, "", "unpack_single"]], "caterpillar.fields.Const": [[9, 3, 1, "", "decode"], [9, 3, 1, "", "encode"]], "caterpillar.fields.Encrypted": [[11, 3, 1, "", "algorithm"], [11, 3, 1, "", "get_instance"], [11, 3, 1, "", "mode"], [11, 3, 1, "", "pack_single"], [11, 3, 1, "", "padding"], [11, 3, 1, "", "unpack_single"]], "caterpillar.fields.Enum": [[9, 3, 1, "", "decode"], [9, 3, 1, "", "encode"]], "caterpillar.fields.Field": [[12, 0, 1, "", "amount"], [12, 0, 1, "", "arch"], [12, 0, 1, "", "bits"], [12, 0, 1, "", "condition"], [12, 0, 1, "", "default"], [12, 0, 1, "", "flags"], [12, 3, 1, "", "get_offset"], [12, 3, 1, "", "get_struct"], [12, 3, 1, "", "get_type"], [12, 3, 1, "", "has_condition"], [12, 3, 1, "", "has_flag"], [12, 3, 1, "", "is_enabled"], [12, 3, 1, "", "is_seq"], [12, 3, 1, "", "length"], [12, 0, 1, "", "offset"], [12, 0, 1, "", "options"], [12, 0, 1, "", "order"], [12, 0, 1, "", "struct"]], "caterpillar.fields.FieldStruct": [[12, 0, 1, "", "__bits__"], [12, 0, 1, "", "__byteorder__"], [12, 3, 1, "", "__pack__"], [12, 3, 1, "", "__repr__"], [12, 3, 1, "", "__unpack__"], [12, 3, 1, "", "pack_seq"], [12, 3, 1, "", "pack_single"], [12, 3, 1, "", "unpack_seq"], [12, 3, 1, "", "unpack_single"]], "caterpillar.fields.FormatField": [[9, 3, 1, "", "get_format"], [9, 3, 1, "", "is_padding"], [9, 3, 1, "", "pack_seq"], [9, 3, 1, "", "pack_single"], [9, 0, 1, "", "text"], [9, 0, 1, "", "ty"], [9, 3, 1, "", "unpack_seq"], [9, 3, 1, "", "unpack_single"]], "caterpillar.fields.Int": [[9, 3, 1, "", "pack_single"], [9, 3, 1, "", "unpack_single"]], "caterpillar.fields.Memory": [[9, 3, 1, "", "pack_single"], [9, 3, 1, "", "unpack_single"]], "caterpillar.fields.Prefixed": [[9, 3, 1, "", "pack_single"], [9, 3, 1, "", "unpack_single"]], "caterpillar.fields.String": [[9, 3, 1, "", "unpack_single"]], "caterpillar.fields.Transformer": [[9, 3, 1, "", "decode"], [9, 3, 1, "", "encode"], [9, 3, 1, "", "pack_single"], [9, 3, 1, "", "unpack_single"]], "caterpillar.model": [[15, 1, 1, "", "BitField"], [15, 1, 1, "", "BitFieldGroup"], [15, 1, 1, "", "Sequence"], [15, 1, 1, "", "Struct"], [15, 1, 1, "", "TemplateTypeVar"], [15, 1, 1, "", "UnionHook"], [15, 2, 1, "", "bitfield"], [15, 2, 1, "", "derive"], [15, 2, 1, "", "istemplate"], [15, 2, 1, "", "pack"], [15, 2, 1, "", "pack_file"], [15, 2, 1, "", "pack_into"], [15, 2, 1, "", "struct"], [15, 2, 1, "", "template"], [15, 2, 1, "", "union"], [15, 2, 1, "", "unpack"], [15, 2, 1, "", "unpack_file"]], "caterpillar.model.Sequence": [[15, 3, 1, "", "add_field"], [15, 0, 1, "", "arch"], [15, 3, 1, "", "del_field"], [15, 0, 1, "", "field_options"], [15, 0, 1, "", "fields"], [15, 3, 1, "", "has_option"], [15, 0, 1, "", "model"], [15, 0, 1, "", "options"], [15, 0, 1, "", "order"]], "caterpillar.model.TemplateTypeVar": [[15, 0, 1, "", "field_kwds"], [15, 0, 1, "", "name"]], "caterpillar.model.UnionHook": [[15, 0, 1, "", "max_size"], [15, 0, 1, "", "struct"]], "caterpillar.options": [[16, 0, 1, "", "F_DYNAMIC"], [16, 0, 1, "", "F_KEEP_POSITION"], [16, 0, 1, "", "F_OFFSET_OVERRIDE"], [16, 0, 1, "", "F_SEQUENTIAL"], [16, 1, 1, "", "Flag"], [16, 5, 1, "", "O_ARRAY_FACTORY"], [16, 5, 1, "", "S_DISCARD_CONST"], [16, 5, 1, "", "S_DISCARD_UNNAMED"], [16, 5, 1, "", "S_EVAL_ANNOTATIONS"], [16, 5, 1, "", "S_REPLACE_TYPES"], [16, 5, 1, "", "S_SLOTS"], [16, 5, 1, "", "S_UNION"], [16, 2, 1, "", "configure"], [16, 2, 1, "", "get_flag"], [16, 2, 1, "", "get_flags"], [16, 2, 1, "", "has_flag"], [16, 2, 1, "", "set_field_flags"], [16, 2, 1, "", "set_struct_flags"], [16, 2, 1, "", "set_union_flags"]], "caterpillar.options.Flag": [[16, 0, 1, "", "name"], [16, 0, 1, "", "value"]], "class": [[17, 0, 1, "", "__struct__"], [17, 0, 1, "", "__template__"]], "examples.formats.nibarchive.object": [[17, 1, 1, "", "NIBHeader"]], "examples.formats.nibarchive.object.NIBHeader.NIBHeader": [[17, 0, 1, "", "magic"]], "field": [[20, 2, 1, "", "__ior__"], [20, 2, 1, "", "__ixor__"], [17, 0, 1, "", "__name__"], [20, 2, 1, "", "__or__"], [20, 2, 1, "", "__xor__"]], "object": [[17, 3, 1, "", "__bits__"], [17, 0, 1, "", "__byteorder__"], [17, 2, 1, "", "__call__"], [17, 3, 1, "", "__pack__"], [17, 3, 1, "", "__set_byteorder__"], [17, 3, 1, "", "__size__"], [17, 3, 1, "", "__type__"], [17, 3, 1, "", "__unpack__"]], "path": [[20, 2, 1, "", "__call__"], [20, 2, 1, "", "__getitem__"]], "sequence": [[20, 2, 1, "", "__add__"], [20, 2, 1, "", "__iadd__"], [20, 2, 1, "", "__isub__"], [20, 2, 1, "", "__sub__"]], "struct": [[20, 2, 1, "", "__and__"], [20, 2, 1, "", "__floordiv__"], [20, 2, 1, "", "__getitem__"], [20, 2, 1, "", "__matmul__"], [20, 2, 1, "", "__rshift__"], [20, 2, 1, "", "__rsub__"]]}, "objtypes": {"0": "py:attribute", "1": "py:class", "2": "py:function", "3": "py:method", "4": "py:property", "5": "py:data"}, "objnames": {"0": ["py", "attribute", "Python attribute"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"]}, "titleterms": {"changelog": 0, "contribut": 1, "guidelin": 1, "submit": 1, "new": 1, "featur": 1, "an": 1, "issu": 1, "run": 1, "test": 1, "have": 1, "gener": 1, "question": 1, "develop": [2, 17, 20], "welcom": 3, "caterpillar": [3, 19], "": [3, 17, 20], "document": [3, 23], "whet": 3, "your": 3, "appetit": 3, "hold": 3, "up": 3, "wait": 3, "minut": 3, "where": 3, "start": 3, "indic": 3, "tabl": 3, "instal": 4, "abstract": 5, "base": [5, 15], "class": [5, 7, 15], "struct": [5, 9, 10, 11, 15, 16, 17, 20, 22, 23], "context": [5, 7, 17, 20, 22], "other": 5, "standard": [5, 11, 15, 17, 22], "interfac": [5, 11, 16], "byteord": [6, 17], "architectur": 6, "special": [7, 9, 17, 22], "path": [7, 17, 20], "attribut": 7, "express": 7, "except": 8, "runtim": [8, 22], "formal": 8, "common": 9, "numer": 9, "byte": [9, 22], "string": [9, 22], "compress": [10, 22], "basic": [10, 22], "support": 10, "type": [10, 16, 17, 22], "cryptograph": 11, "core": 11, "field": [12, 13, 16, 17, 20, 21], "model": [12, 15, 17], "content": 13, "librari": 14, "function": 15, "templat": [15, 17, 21], "option": 16, "global": 16, "object": [16, 17, 22], "size": [16, 22], "between": 16, "differ": 16, "configur": [16, 23], "sequenc": [16, 17, 20, 22], "data": [17, 23], "programm": 17, "note": [17, 20], "behaviour": 17, "implement": 17, "union": [17, 21], "detail": 17, "bitfield": [17, 21], "greedi": 17, "prefix": [17, 22], "lambda": 17, "method": 17, "name": 17, "emul": 17, "custom": [17, 22], "contain": 17, "specif": [17, 20], "modifi": 17, "refer": 18, "introduct": 19, "what": [19, 23], "exactli": 19, "i": [19, 23], "why": 19, "us": 19, "how": 19, "doe": 19, "thi": 19, "even": 19, "work": [19, 23], "pro": 19, "con": 19, "comparison": 19, "oper": [20, 21], "advanc": 21, "concept": [21, 22], "switch": 21, "offset": 21, "pointer": 21, "chain": 21, "condit": 21, "The": 21, "end": 21, "number": 22, "integ": 22, "variabl": 22, "enumer": 22, "arrai": 22, "list": 22, "cstring": 22, "challeng": [22, 23], "memori": 22, "pad": 22, "length": 22, "constant": 22, "constbyt": 22, "const": 22, "comput": 22, "pass": 22, "first": 23, "step": 23, "defin": 23, "pack": 23, "unpack": 23, "endia": 23, "next": 23, "tutori": 24, "roadmap": 24}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Changelog": [[0, "changelog"]], "Contribution Guidelines": [[1, "contribution-guidelines"]], "Submit a new Feature": [[1, "submit-a-new-feature"]], "Submit an Issue": [[1, "submit-an-issue"]], "Running Tests": [[1, "running-tests"]], "Having a general question?": [[1, "having-a-general-question"]], "Development": [[2, "development"]], "Welcome to Caterpillar\u2019s documentation!": [[3, "welcome-to-caterpillar-s-documentation"]], "Whetting Your Appetite": [[3, "whetting-your-appetite"]], "Hold up, wait a minute!": [[3, null]], "Where to start?": [[3, "where-to-start"]], "Indices and tables": [[3, "indices-and-tables"]], "Installation": [[4, "installation"]], "Abstract base classes": [[5, "abstract-base-classes"]], "Struct": [[5, "struct"], [17, "struct"]], "Context": [[5, "context"], [7, "context"], [17, "context"], [22, "context"]], "Other base classes": [[5, "other-base-classes"]], "Standard interface": [[5, "standard-interface"], [11, "standard-interface"]], "Byteorder and Architecture": [[6, "byteorder-and-architecture"]], "Byteorder": [[6, "id1"]], "Architecture": [[6, "architecture"]], "Context classes": [[7, "context-classes"]], "Special paths": [[7, "special-paths"]], "Special Attributes": [[7, "special-attributes"]], "Expressions": [[7, "expressions"]], "Exceptions": [[8, "exceptions"]], "Runtime exceptions": [[8, "runtime-exceptions"]], "Formal exceptions": [[8, "formal-exceptions"]], "Common Structs": [[9, "common-structs"]], "Numeric Structs": [[9, "numeric-structs"]], "Bytes, Strings": [[9, "bytes-strings"]], "Special Structs": [[9, "special-structs"]], "Compression Structs": [[10, "compression-structs"]], "Basic structs": [[10, "basic-structs"]], "Supported compression types": [[10, "supported-compression-types"]], "Cryptographic Structs": [[11, "cryptographic-structs"]], "Core structs": [[11, "core-structs"]], "Field Model": [[12, "field-model"]], "Fields": [[13, "fields"]], "Contents:": [[13, null]], "Library": [[14, "library"]], "Struct Model": [[15, "struct-model"]], "Base classes": [[15, "base-classes"]], "Standard functions": [[15, "standard-functions"]], "Templates": [[15, "templates"], [17, "templates"], [21, "templates"]], "Options": [[16, "options"]], "Options by type": [[16, "options-by-type"]], "Global options": [[16, "global-options"]], "Object sizes between different configuration options": [[16, "id4"]], "Sequence options": [[16, "sequence-options"]], "Struct options": [[16, "struct-options"]], "Field options": [[16, "field-options"]], "Interface": [[16, "interface"]], "Data Model": [[17, "data-model"]], "Structs, Sequences and Fields": [[17, "structs-sequences-and-fields"]], "Standard Types": [[17, "standard-types"], [22, "standard-types"]], "Sequence": [[17, "sequence"]], "Programmers Note:": [[17, null]], "Behaviour of structs and sequences": [[17, "id7"]], "Implementation Note": [[17, null], [17, null]], "Programmers Note": [[17, null]], "Union": [[17, "union"]], "Implementation Detail": [[17, null]], "BitField": [[17, "bitfield"]], "Field": [[17, "field"]], "Greedy": [[17, "greedy"]], "Prefixed": [[17, "prefixed"], [22, "prefixed"]], "Context lambda": [[17, "context-lambda"]], "Context path": [[17, "context-path"], [20, "context-path"]], "Developer\u2019s note": [[17, null], [20, null]], "Special method names": [[17, "special-method-names"]], "Emulating Struct Types": [[17, "emulating-struct-types"]], "Customizing the struct\u2019s type": [[17, "customizing-the-struct-s-type"]], "Struct containers": [[17, "struct-containers"]], "Template Containers": [[17, "template-containers"]], "BitField specific methods": [[17, "bitfield-specific-methods"]], "Customizing the object\u2019s byteorder": [[17, "customizing-the-object-s-byteorder"]], "Modifying fields": [[17, "modifying-fields"]], "Reference": [[18, "reference"]], "Introduction": [[19, "introduction"]], "What exactly is a caterpillar?": [[19, null]], "Why use Caterpillar?": [[19, "why-use-caterpillar"]], "How does this even work?": [[19, "how-does-this-even-work"]], "Pros & Cons": [[19, "pros-cons"]], "Comparison": [[19, "comparison"]], "Operators": [[20, "operators"], [21, "operators"]], "Struct operators": [[20, "struct-operators"]], "Field specific operations": [[20, "field-specific-operations"]], "Sequence specific operators": [[20, "sequence-specific-operators"]], "Context specific operations": [[20, "context-specific-operations"]], "Advanced Concepts": [[21, "advanced-concepts"]], "Switch": [[21, "switch"]], "Offset": [[21, "offset"]], "Pointers": [[21, "pointers"]], "Chaining": [[21, "chaining"]], "Conditional fields": [[21, "conditional-fields"]], "BitFields": [[21, "bitfields"]], "Unions": [[21, "unions"]], "The End!": [[21, "the-end"]], "Basic Concepts": [[22, "basic-concepts"]], "Numbers": [[22, "numbers"]], "Custom-sized integer": [[22, "custom-sized-integer"]], "Variable-sized integer": [[22, "variable-sized-integer"]], "Enumerations": [[22, "enumerations"]], "Arrays/Lists": [[22, "arrays-lists"]], "String Types": [[22, "string-types"]], "CString": [[22, "cstring"]], "Challenge": [[22, null], [22, null], [22, null], [23, null]], "String": [[22, "string"]], "Byte Sequences": [[22, "byte-sequences"]], "Memory": [[22, "memory"]], "Bytes": [[22, "bytes"]], "Padding": [[22, "padding"]], "Runtime length of objects": [[22, "runtime-length-of-objects"]], "Standard Structs": [[22, "standard-structs"]], "Constants": [[22, "constants"]], "ConstBytes": [[22, "constbytes"]], "Const": [[22, "const"]], "Compression": [[22, "compression"]], "Specials": [[22, "specials"]], "Computed": [[22, "computed"]], "Pass": [[22, "pass"]], "First Steps": [[23, "first-steps"]], "Defining structs": [[23, "defining-structs"]], "Working with structs": [[23, "working-with-structs"]], "Packing data": [[23, "packing-data"]], "Unpacking data": [[23, "unpacking-data"]], "Configuring structs": [[23, "configuring-structs"]], "What is endianess?": [[23, null]], "Documenting structs": [[23, "documenting-structs"]], "Next Steps": [[23, "next-steps"]], "Tutorial": [[24, "tutorial"]], "Roadmap": [[24, null]]}, "indexentries": {"struct_field (caterpillar.abc attribute)": [[5, "caterpillar.abc.STRUCT_FIELD"]], "_containsstruct (class in caterpillar.abc)": [[5, "caterpillar.abc._ContainsStruct"]], "_contextlambda (class in caterpillar.abc)": [[5, "caterpillar.abc._ContextLambda"]], "_contextlike (class in caterpillar.abc)": [[5, "caterpillar.abc._ContextLike"]], "_enumlike (class in caterpillar.abc)": [[5, "caterpillar.abc._EnumLike"]], "_structlike (class in caterpillar.abc)": [[5, "caterpillar.abc._StructLike"]], "_supportspack (class in caterpillar.abc)": [[5, "caterpillar.abc._SupportsPack"]], "_supportssize (class in caterpillar.abc)": [[5, "caterpillar.abc._SupportsSize"]], "_supportsunpack (class in caterpillar.abc)": [[5, "caterpillar.abc._SupportsUnpack"]], "_switch (class in caterpillar.abc)": [[5, "caterpillar.abc._Switch"]], "getstruct() (in module caterpillar.abc)": [[5, "caterpillar.abc.getstruct"]], "hasstruct() (in module caterpillar.abc)": [[5, "caterpillar.abc.hasstruct"]], "typeof() (in module caterpillar.abc)": [[5, "caterpillar.abc.typeof"]], "arch (class in caterpillar.byteorder)": [[6, "caterpillar.byteorder.Arch"]], "byteorder_field (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.BYTEORDER_FIELD"]], "bigendian (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.BigEndian"]], "byteorder (class in caterpillar.byteorder)": [[6, "caterpillar.byteorder.ByteOrder"]], "byteorder.alignment (class in caterpillar.byteorder)": [[6, "caterpillar.byteorder.ByteOrder.Alignment"]], "byteorder.size (class in caterpillar.byteorder)": [[6, "caterpillar.byteorder.ByteOrder.Size"]], "littleendian (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.LittleEndian"]], "native (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.Native"]], "netendian (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.NetEndian"]], "sysnative (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.SysNative"]], "apply() (caterpillar.byteorder.byteorder method)": [[6, "caterpillar.byteorder.ByteOrder.apply"]], "byteorder() (in module caterpillar.byteorder)": [[6, "caterpillar.byteorder.byteorder"]], "system_arch (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.system_arch"]], "binaryexpression (class in caterpillar.context)": [[7, "caterpillar.context.BinaryExpression"]], "ctx_field (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_FIELD"]], "ctx_index (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_INDEX"]], "ctx_object (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_OBJECT"]], "ctx_offsets (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_OFFSETS"]], "ctx_parent (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_PARENT"]], "ctx_path (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_PATH"]], "ctx_pos (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_POS"]], "ctx_seq (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_SEQ"]], "ctx_stream (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_STREAM"]], "ctx_value (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_VALUE"]], "conditioncontext (class in caterpillar.context)": [[7, "caterpillar.context.ConditionContext"]], "context (class in caterpillar.context)": [[7, "caterpillar.context.Context"]], "contextlength (class in caterpillar.context)": [[7, "caterpillar.context.ContextLength"]], "contextpath (class in caterpillar.context)": [[7, "caterpillar.context.ContextPath"]], "exprmixin (class in caterpillar.context)": [[7, "caterpillar.context.ExprMixin"]], "unaryexpression (class in caterpillar.context)": [[7, "caterpillar.context.UnaryExpression"]], "ctx (caterpillar.context attribute)": [[7, "caterpillar.context.ctx"]], "parent (caterpillar.context attribute)": [[7, "caterpillar.context.parent"]], "this (caterpillar.context attribute)": [[7, "caterpillar.context.this"]], "delegationerror (class in caterpillar.exception)": [[8, "caterpillar.exception.DelegationError"]], "dynamicsizeerror (class in caterpillar.exception)": [[8, "caterpillar.exception.DynamicSizeError"]], "invalidvalueerror (class in caterpillar.exception)": [[8, "caterpillar.exception.InvalidValueError"]], "optionerror (class in caterpillar.exception)": [[8, "caterpillar.exception.OptionError"]], "stop (class in caterpillar.exception)": [[8, "caterpillar.exception.Stop"]], "streamerror (class in caterpillar.exception)": [[8, "caterpillar.exception.StreamError"]], "structexception (class in caterpillar.exception)": [[8, "caterpillar.exception.StructException"]], "unsupportedoperation (class in caterpillar.exception)": [[8, "caterpillar.exception.UnsupportedOperation"]], "validationerror (class in caterpillar.exception)": [[8, "caterpillar.exception.ValidationError"]], "bytes (class in caterpillar.fields)": [[9, "caterpillar.fields.Bytes"]], "cstring (class in caterpillar.fields)": [[9, "caterpillar.fields.CString"]], "computed (class in caterpillar.fields)": [[9, "caterpillar.fields.Computed"]], "const (class in caterpillar.fields)": [[9, "caterpillar.fields.Const"]], "constbytes (class in caterpillar.fields)": [[9, "caterpillar.fields.ConstBytes"]], "conststring (class in caterpillar.fields)": [[9, "caterpillar.fields.ConstString"]], "enum (class in caterpillar.fields)": [[9, "caterpillar.fields.Enum"]], "formatfield (class in caterpillar.fields)": [[9, "caterpillar.fields.FormatField"]], "int (class in caterpillar.fields)": [[9, "caterpillar.fields.Int"]], "memory (class in caterpillar.fields)": [[9, "caterpillar.fields.Memory"]], "notrequired (class in caterpillar.fields)": [[9, "caterpillar.fields.NotRequired"]], "pass (caterpillar.fields attribute)": [[9, "caterpillar.fields.Pass"]], "prefixed (class in caterpillar.fields)": [[9, "caterpillar.fields.Prefixed"]], "string (class in caterpillar.fields)": [[9, "caterpillar.fields.String"]], "transformer (class in caterpillar.fields)": [[9, "caterpillar.fields.Transformer"]], "uint (class in caterpillar.fields)": [[9, "caterpillar.fields.UInt"]], "varint (caterpillar.fields attribute)": [[9, "caterpillar.fields.VarInt"]], "boolean (caterpillar.fields attribute)": [[9, "caterpillar.fields.boolean"]], "char (caterpillar.fields attribute)": [[9, "caterpillar.fields.char"]], "decode() (caterpillar.fields.const method)": [[9, "caterpillar.fields.Const.decode"]], "decode() (caterpillar.fields.enum method)": [[9, "caterpillar.fields.Enum.decode"]], "decode() (caterpillar.fields.transformer method)": [[9, "caterpillar.fields.Transformer.decode"]], "encode() (caterpillar.fields.const method)": [[9, "caterpillar.fields.Const.encode"]], "encode() (caterpillar.fields.enum method)": [[9, "caterpillar.fields.Enum.encode"]], "encode() (caterpillar.fields.transformer method)": [[9, "caterpillar.fields.Transformer.encode"]], "float16 (caterpillar.fields attribute)": [[9, "caterpillar.fields.float16"]], "float32 (caterpillar.fields attribute)": [[9, "caterpillar.fields.float32"]], "float64 (caterpillar.fields attribute)": [[9, "caterpillar.fields.float64"]], "get_format() (caterpillar.fields.formatfield method)": [[9, "caterpillar.fields.FormatField.get_format"]], "int16 (caterpillar.fields attribute)": [[9, "caterpillar.fields.int16"]], "int32 (caterpillar.fields attribute)": [[9, "caterpillar.fields.int32"]], "int64 (caterpillar.fields attribute)": [[9, "caterpillar.fields.int64"]], "int8 (caterpillar.fields attribute)": [[9, "caterpillar.fields.int8"]], "is_padding() (caterpillar.fields.formatfield method)": [[9, "caterpillar.fields.FormatField.is_padding"]], "pack_seq() (caterpillar.fields.formatfield method)": [[9, "caterpillar.fields.FormatField.pack_seq"]], "pack_single() (caterpillar.fields.cstring method)": [[9, "caterpillar.fields.CString.pack_single"]], "pack_single() (caterpillar.fields.computed method)": [[9, "caterpillar.fields.Computed.pack_single"]], "pack_single() (caterpillar.fields.formatfield method)": [[9, "caterpillar.fields.FormatField.pack_single"]], "pack_single() (caterpillar.fields.int method)": [[9, "caterpillar.fields.Int.pack_single"]], "pack_single() (caterpillar.fields.memory method)": [[9, "caterpillar.fields.Memory.pack_single"]], "pack_single() (caterpillar.fields.prefixed method)": [[9, "caterpillar.fields.Prefixed.pack_single"]], "pack_single() (caterpillar.fields.transformer method)": [[9, "caterpillar.fields.Transformer.pack_single"]], "padding (caterpillar.fields attribute)": [[9, "caterpillar.fields.padding"]], "size_t (caterpillar.fields attribute)": [[9, "caterpillar.fields.size_t"]], "ssize_t (caterpillar.fields attribute)": [[9, "caterpillar.fields.ssize_t"]], "text (caterpillar.fields.formatfield attribute)": [[9, "caterpillar.fields.FormatField.text"]], "ty (caterpillar.fields.formatfield attribute)": [[9, "caterpillar.fields.FormatField.ty"]], "uint16 (caterpillar.fields attribute)": [[9, "caterpillar.fields.uint16"]], "uint32 (caterpillar.fields attribute)": [[9, "caterpillar.fields.uint32"]], "uint64 (caterpillar.fields attribute)": [[9, "caterpillar.fields.uint64"]], "uint8 (caterpillar.fields attribute)": [[9, "caterpillar.fields.uint8"]], "unpack_seq() (caterpillar.fields.formatfield method)": [[9, "caterpillar.fields.FormatField.unpack_seq"]], "unpack_single() (caterpillar.fields.bytes method)": [[9, "caterpillar.fields.Bytes.unpack_single"]], "unpack_single() (caterpillar.fields.cstring method)": [[9, "caterpillar.fields.CString.unpack_single"]], "unpack_single() (caterpillar.fields.computed method)": [[9, "caterpillar.fields.Computed.unpack_single"]], "unpack_single() (caterpillar.fields.formatfield method)": [[9, "caterpillar.fields.FormatField.unpack_single"]], "unpack_single() (caterpillar.fields.int method)": [[9, "caterpillar.fields.Int.unpack_single"]], "unpack_single() (caterpillar.fields.memory method)": [[9, "caterpillar.fields.Memory.unpack_single"]], "unpack_single() (caterpillar.fields.prefixed method)": [[9, "caterpillar.fields.Prefixed.unpack_single"]], "unpack_single() (caterpillar.fields.string method)": [[9, "caterpillar.fields.String.unpack_single"]], "unpack_single() (caterpillar.fields.transformer method)": [[9, "caterpillar.fields.Transformer.unpack_single"]], "void_ptr (caterpillar.fields attribute)": [[9, "caterpillar.fields.void_ptr"]], "bz2compressed() (in module caterpillar.fields)": [[10, "caterpillar.fields.Bz2Compressed"]], "compressed (class in caterpillar.fields)": [[10, "caterpillar.fields.Compressed"]], "lzmacompressed() (in module caterpillar.fields)": [[10, "caterpillar.fields.LZMACompressed"]], "lzocompressed() (in module caterpillar.fields)": [[10, "caterpillar.fields.LZOCompressed"]], "zlibcompressed() (in module caterpillar.fields)": [[10, "caterpillar.fields.ZLibCompressed"]], "decode() (caterpillar.fields.compressed method)": [[10, "caterpillar.fields.Compressed.decode"]], "encode() (caterpillar.fields.compressed method)": [[10, "caterpillar.fields.Compressed.encode"]], "encrypted (class in caterpillar.fields)": [[11, "caterpillar.fields.Encrypted"]], "algorithm() (caterpillar.fields.encrypted method)": [[11, "caterpillar.fields.Encrypted.algorithm"]], "get_instance() (caterpillar.fields.encrypted method)": [[11, "caterpillar.fields.Encrypted.get_instance"]], "mode() (caterpillar.fields.encrypted method)": [[11, "caterpillar.fields.Encrypted.mode"]], "pack_single() (caterpillar.fields.encrypted method)": [[11, "caterpillar.fields.Encrypted.pack_single"]], "padding() (caterpillar.fields.encrypted method)": [[11, "caterpillar.fields.Encrypted.padding"]], "unpack_single() (caterpillar.fields.encrypted method)": [[11, "caterpillar.fields.Encrypted.unpack_single"]], "chain (class in caterpillar.fields)": [[12, "caterpillar.fields.Chain"]], "elseif (class in caterpillar.fields)": [[12, "caterpillar.fields.ElseIf"]], "field (class in caterpillar.fields)": [[12, "caterpillar.fields.Field"]], "fieldmixin (class in caterpillar.fields)": [[12, "caterpillar.fields.FieldMixin"]], "fieldstruct (class in caterpillar.fields)": [[12, "caterpillar.fields.FieldStruct"]], "if (class in caterpillar.fields)": [[12, "caterpillar.fields.If"]], "__and__() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.__and__"]], "__bits__ (caterpillar.fields.fieldstruct attribute)": [[12, "caterpillar.fields.FieldStruct.__bits__"]], "__byteorder__ (caterpillar.fields.fieldstruct attribute)": [[12, "caterpillar.fields.FieldStruct.__byteorder__"]], "__init__() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.__init__"]], "__pack__() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.__pack__"]], "__rand__() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.__rand__"]], "__repr__() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.__repr__"]], "__size__() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.__size__"]], "__type__() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.__type__"]], "__unpack__() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.__unpack__"]], "amount (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.amount"]], "arch (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.arch"]], "bits (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.bits"]], "condition (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.condition"]], "default (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.default"]], "flags (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.flags"]], "get_offset() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.get_offset"]], "get_struct() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.get_struct"]], "get_type() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.get_type"]], "has_condition() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.has_condition"]], "has_flag() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.has_flag"]], "head (caterpillar.fields.chain property)": [[12, "caterpillar.fields.Chain.head"]], "is_enabled() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.is_enabled"]], "is_seq() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.is_seq"]], "length() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.length"]], "offset (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.offset"]], "options (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.options"]], "order (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.order"]], "pack_seq() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.pack_seq"]], "pack_single() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.pack_single"]], "pack_single() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.pack_single"]], "struct (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.struct"]], "tail (caterpillar.fields.chain property)": [[12, "caterpillar.fields.Chain.tail"]], "unpack_seq() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.unpack_seq"]], "unpack_single() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.unpack_single"]], "unpack_single() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.unpack_single"]], "bitfield (class in caterpillar.model)": [[15, "caterpillar.model.BitField"]], "bitfieldgroup (class in caterpillar.model)": [[15, "caterpillar.model.BitFieldGroup"]], "sequence (class in caterpillar.model)": [[15, "caterpillar.model.Sequence"]], "struct (class in caterpillar.model)": [[15, "caterpillar.model.Struct"]], "templatetypevar (class in caterpillar.model)": [[15, "caterpillar.model.TemplateTypeVar"]], "unionhook (class in caterpillar.model)": [[15, "caterpillar.model.UnionHook"]], "add_field() (caterpillar.model.sequence method)": [[15, "caterpillar.model.Sequence.add_field"]], "arch (caterpillar.model.sequence attribute)": [[15, "caterpillar.model.Sequence.arch"]], "bitfield() (in module caterpillar.model)": [[15, "caterpillar.model.bitfield"]], "del_field() (caterpillar.model.sequence method)": [[15, "caterpillar.model.Sequence.del_field"]], "derive() (in module caterpillar.model)": [[15, "caterpillar.model.derive"]], "field_kwds (caterpillar.model.templatetypevar attribute)": [[15, "caterpillar.model.TemplateTypeVar.field_kwds"]], "field_options (caterpillar.model.sequence attribute)": [[15, "caterpillar.model.Sequence.field_options"]], "fields (caterpillar.model.sequence attribute)": [[15, "caterpillar.model.Sequence.fields"]], "has_option() (caterpillar.model.sequence method)": [[15, "caterpillar.model.Sequence.has_option"]], "istemplate() (in module caterpillar.model)": [[15, "caterpillar.model.istemplate"]], "max_size (caterpillar.model.unionhook attribute)": [[15, "caterpillar.model.UnionHook.max_size"]], "model (caterpillar.model.sequence attribute)": [[15, "caterpillar.model.Sequence.model"]], "name (caterpillar.model.templatetypevar attribute)": [[15, "caterpillar.model.TemplateTypeVar.name"]], "options (caterpillar.model.sequence attribute)": [[15, "caterpillar.model.Sequence.options"]], "order (caterpillar.model.sequence attribute)": [[15, "caterpillar.model.Sequence.order"]], "pack() (in module caterpillar.model)": [[15, "caterpillar.model.pack"]], "pack_file() (in module caterpillar.model)": [[15, "caterpillar.model.pack_file"]], "pack_into() (in module caterpillar.model)": [[15, "caterpillar.model.pack_into"]], "struct (caterpillar.model.unionhook attribute)": [[15, "caterpillar.model.UnionHook.struct"]], "struct() (in module caterpillar.model)": [[15, "caterpillar.model.struct"]], "template() (in module caterpillar.model)": [[15, "caterpillar.model.template"]], "union() (in module caterpillar.model)": [[15, "caterpillar.model.union"]], "unpack() (in module caterpillar.model)": [[15, "caterpillar.model.unpack"]], "unpack_file() (in module caterpillar.model)": [[15, "caterpillar.model.unpack_file"]], "f_dynamic (caterpillar.options attribute)": [[16, "caterpillar.options.F_DYNAMIC"]], "f_keep_position (caterpillar.options attribute)": [[16, "caterpillar.options.F_KEEP_POSITION"]], "f_offset_override (caterpillar.options attribute)": [[16, "caterpillar.options.F_OFFSET_OVERRIDE"]], "f_sequential (caterpillar.options attribute)": [[16, "caterpillar.options.F_SEQUENTIAL"]], "flag (class in caterpillar.options)": [[16, "caterpillar.options.Flag"]], "caterpillar.options.o_array_factory (built-in variable)": [[16, "caterpillar.options.O_ARRAY_FACTORY"]], "caterpillar.options.s_discard_const (built-in variable)": [[16, "caterpillar.options.S_DISCARD_CONST"]], "caterpillar.options.s_discard_unnamed (built-in variable)": [[16, "caterpillar.options.S_DISCARD_UNNAMED"]], "caterpillar.options.s_eval_annotations (built-in variable)": [[16, "caterpillar.options.S_EVAL_ANNOTATIONS"]], "caterpillar.options.s_replace_types (built-in variable)": [[16, "caterpillar.options.S_REPLACE_TYPES"]], "caterpillar.options.s_slots (built-in variable)": [[16, "caterpillar.options.S_SLOTS"]], "caterpillar.options.s_union (built-in variable)": [[16, "caterpillar.options.S_UNION"]], "configure() (in module caterpillar.options)": [[16, "caterpillar.options.configure"]], "get_flag() (in module caterpillar.options)": [[16, "caterpillar.options.get_flag"]], "get_flags() (in module caterpillar.options)": [[16, "caterpillar.options.get_flags"]], "has_flag() (in module caterpillar.options)": [[16, "caterpillar.options.has_flag"]], "name (caterpillar.options.flag attribute)": [[16, "caterpillar.options.Flag.name"]], "set_field_flags() (in module caterpillar.options)": [[16, "caterpillar.options.set_field_flags"]], "set_struct_flags() (in module caterpillar.options)": [[16, "caterpillar.options.set_struct_flags"]], "set_union_flags() (in module caterpillar.options)": [[16, "caterpillar.options.set_union_flags"]], "value (caterpillar.options.flag attribute)": [[16, "caterpillar.options.Flag.value"]], "ctx_field": [[17, "CTX_FIELD"]], "ctx_index": [[17, "CTX_INDEX"]], "ctx_object": [[17, "CTX_OBJECT"]], "ctx_offsets": [[17, "CTX_OFFSETS"]], "ctx_parent": [[17, "CTX_PARENT"]], "ctx_path": [[17, "CTX_PATH"]], "ctx_pos": [[17, "CTX_POS"]], "ctx_stream": [[17, "CTX_STREAM"]], "ctx_value": [[17, "CTX_VALUE"]], "__bits__() (object method)": [[17, "object.__bits__"]], "__byteorder__ (object attribute)": [[17, "object.__byteorder__"]], "__name__ (field attribute)": [[17, "field.__name__"]], "__pack__() (object method)": [[17, "object.__pack__"]], "__set_byteorder__() (object method)": [[17, "object.__set_byteorder__"]], "__size__() (object method)": [[17, "object.__size__"]], "__struct__ (class attribute)": [[17, "class.__struct__"]], "__template__ (class attribute)": [[17, "class.__template__"]], "__type__() (object method)": [[17, "object.__type__"]], "__unpack__() (object method)": [[17, "object.__unpack__"]], "built-in function": [[17, "object.__call__"], [20, "field.__ior__"], [20, "field.__ixor__"], [20, "field.__or__"], [20, "field.__xor__"], [20, "path.__call__"], [20, "path.__getitem__"], [20, "sequence.__add__"], [20, "sequence.__iadd__"], [20, "sequence.__isub__"], [20, "sequence.__sub__"], [20, "struct.__and__"], [20, "struct.__floordiv__"], [20, "struct.__getitem__"], [20, "struct.__matmul__"], [20, "struct.__rshift__"], [20, "struct.__rsub__"]], "ctx": [[17, "ctx"]], "magic (examples.formats.nibarchive.object.nibheader.nibheader attribute)": [[17, "examples.formats.nibarchive.object.NIBHeader.NIBHeader.magic"]], "object.nibheader (class in examples.formats.nibarchive)": [[17, "examples.formats.nibarchive.object.NIBHeader"]], "object.__call__()": [[17, "object.__call__"]], "parent": [[17, "parent"]], "this": [[17, "this"]], "field.__ior__()": [[20, "field.__ior__"]], "field.__ixor__()": [[20, "field.__ixor__"]], "field.__or__()": [[20, "field.__or__"]], "field.__xor__()": [[20, "field.__xor__"]], "path.__call__()": [[20, "path.__call__"]], "path.__getitem__()": [[20, "path.__getitem__"]], "sequence.__add__()": [[20, "sequence.__add__"]], "sequence.__iadd__()": [[20, "sequence.__iadd__"]], "sequence.__isub__()": [[20, "sequence.__isub__"]], "sequence.__sub__()": [[20, "sequence.__sub__"]], "struct.__and__()": [[20, "struct.__and__"]], "struct.__floordiv__()": [[20, "struct.__floordiv__"]], "struct.__getitem__()": [[20, "struct.__getitem__"]], "struct.__matmul__()": [[20, "struct.__matmul__"]], "struct.__rshift__()": [[20, "struct.__rshift__"]], "struct.__rsub__()": [[20, "struct.__rsub__"]]}})