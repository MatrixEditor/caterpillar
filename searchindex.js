Search.setIndex({"alltitles": {"Abstract Objects Layer": [[20, null]], "Abstract base classes": [[6, null]], "Advanced Concepts": [[46, null]], "Annotation Registry": [[19, null]], "Arch & Endian Objects": [[26, null]], "Arch Objects": [[26, "arch-objects"]], "Architecture": [[7, "architecture"]], "Arrays/Lists": [[47, "arrays-lists"]], "Atom Objects": [[30, null]], "Atom Objects:": [[3, "atom-objects"]], "Atom Protocol": [[21, null]], "Base classes": [[17, "base-classes"]], "Basic Concepts": [[47, null]], "Basic structs": [[12, "basic-structs"]], "Behaviour of structs and sequences": [[42, "id7"]], "Binary Expressions": [[33, "binary-expressions"]], "BitField": [[42, "bitfield"]], "BitField specific methods": [[42, "bitfield-specific-methods"]], "BitFields": [[46, "bitfields"]], "Bool Atoms": [[27, null]], "Byte Sequences": [[47, "byte-sequences"]], "Byteorder": [[7, "id1"]], "Byteorder and Architecture": [[7, null]], "Bytes": [[47, "bytes"]], "Bytes, Strings": [[11, "bytes-strings"]], "C API": [[3, "c-api"]], "C API Python Types": [[16, null]], "C API Reference": [[43, null]], "CString": [[47, "cstring"]], "Chaining": [[46, "chaining"]], "Challenge": [[47, null], [47, null], [47, null], [48, null]], "Changelog": [[0, null]], "Char Atoms": [[28, null]], "Common Structs": [[11, null]], "Comparison": [[44, "comparison"]], "Compression": [[47, "compression"]], "Compression Structs": [[12, null]], "Computed": [[47, "computed"]], "Concrete Objects Layer": [[37, null]], "Conditional fields": [[46, "conditional-fields"]], "Configuring structs": [[48, "configuring-structs"]], "Const": [[47, "const"]], "ConstBytes": [[47, "constbytes"]], "Constants": [[47, "constants"]], "Contents:": [[15, null]], "Context": [[6, "context"], [8, null], [42, "context"], [47, "context"]], "Context Expressions": [[33, null]], "Context Objects": [[34, null]], "Context Path Objects": [[35, null]], "Context Protocol": [[22, null]], "Context classes": [[8, "context-classes"]], "Context lambda": [[42, "context-lambda"]], "Context path": [[42, "context-path"], [45, "context-path"]], "Context specific operations": [[45, "context-specific-operations"]], "Contribution Guidelines": [[1, null]], "Core structs": [[13, "core-structs"]], "Cryptographic Structs": [[13, null]], "Custom Operators": [[46, "custom-operators"]], "Custom-sized integer": [[47, "custom-sized-integer"]], "Customizing the object\u2019s byteorder": [[42, "customizing-the-object-s-byteorder"]], "Customizing the struct\u2019s type": [[42, "customizing-the-struct-s-type"]], "Data Model": [[42, null]], "Defined Macros": [[24, null]], "Defining structs": [[48, "defining-structs"]], "Developer\u2019s note": [[42, null], [45, null]], "Development": [[2, null]], "Documenting structs": [[48, "documenting-structs"]], "Emulating Struct Types": [[42, "emulating-struct-types"]], "Endian Objects": [[26, "endian-objects"]], "Enumerations": [[47, "enumerations"]], "Exceptions": [[10, null]], "Expressions": [[8, "expressions"]], "Field": [[42, "field"]], "Field Model": [[14, null]], "Field options": [[18, "field-options"]], "Field specific operations": [[45, "field-specific-operations"]], "Fields": [[15, null]], "First Steps": [[48, null]], "Float Atoms": [[29, null]], "Formal exceptions": [[10, "formal-exceptions"]], "Global options": [[18, "global-options"]], "Greedy": [[42, "greedy"]], "Having a general question?": [[1, "having-a-general-question"]], "Hold up, wait a minute!": [[4, null]], "How does this even work?": [[44, "how-does-this-even-work"]], "Implementation Detail": [[42, null]], "Implementation Note": [[42, null], [42, null]], "Indices and tables": [[4, "indices-and-tables"]], "Installation": [[5, null]], "Integer Atoms": [[31, null]], "Integer Types": [[9, null]], "Interface": [[18, "interface"]], "Introduction": [[44, null]], "Layer Objects": [[36, null]], "Library": [[16, null]], "Memory": [[47, "memory"]], "Modifying fields": [[42, "modifying-fields"]], "Module API": [[25, null]], "Next Steps": [[48, "next-steps"]], "Numbers": [[47, "numbers"]], "Numeric Structs": [[11, "numeric-structs"]], "Object sizes between different configuration options": [[18, "id4"]], "Offset": [[46, "offset"]], "Operators": [[45, null], [46, "operators"]], "Option Objects": [[38, null]], "Options": [[18, null]], "Options by type": [[18, "options-by-type"]], "Other base classes": [[6, "other-base-classes"]], "Packing and Unpacking": [[41, null]], "Packing data": [[48, "packing-data"]], "Padding": [[47, "padding"]], "Padding Atoms": [[32, null]], "Pass": [[47, "pass"]], "Pointers": [[46, "pointers"]], "Pre-Defined Integer Types (global)": [[9, "pre-defined-integer-types-global"]], "Prefixed": [[42, "prefixed"], [47, "prefixed"]], "Programmers Note": [[42, null]], "Programmers Note:": [[42, null]], "Pros & Cons": [[44, "pros-cons"]], "Python": [[49, null]], "Python API": [[3, "python-api"], [16, null]], "Python Reference": [[43, null]], "Reference": [[43, null]], "Roadmap": [[3, null]], "Running Tests": [[1, "running-tests"]], "Runtime Performance": [[27, "runtime-performance"], [28, "runtime-performance"], [29, "runtime-performance"], [32, "runtime-performance"]], "Runtime exceptions": [[10, "runtime-exceptions"]], "Runtime length of objects": [[47, "runtime-length-of-objects"]], "Sequence": [[42, "sequence"]], "Sequence options": [[18, "sequence-options"]], "Sequence specific operators": [[45, "sequence-specific-operators"]], "Signed Integer Types:": [[9, "signed-integer-types"]], "Special Attributes": [[8, "special-attributes"]], "Special Structs": [[11, "special-structs"]], "Special method names": [[42, "special-method-names"]], "Special paths": [[8, "special-paths"]], "Specials": [[47, "specials"]], "Standard Structs": [[47, "standard-structs"]], "Standard Types": [[42, "standard-types"], [47, "standard-types"]], "Standard functions": [[17, "standard-functions"]], "Standard interface": [[6, "standard-interface"], [13, "standard-interface"]], "State Objects": [[39, null]], "String": [[47, "string"]], "String Types": [[47, "string-types"]], "Struct": [[6, "struct"], [42, "struct"]], "Struct Model": [[17, null]], "Struct Objects": [[40, null]], "Struct Objects:": [[3, "struct-objects"]], "Struct containers": [[42, "struct-containers"]], "Struct operators": [[45, "struct-operators"]], "Struct options": [[18, "struct-options"]], "Structs, Sequences and Fields": [[42, "structs-sequences-and-fields"]], "Submit a new Feature": [[1, "submit-a-new-feature"]], "Submit an Issue": [[1, "submit-an-issue"]], "Supported Operations": [[9, "id1"]], "Supported compression types": [[12, "supported-compression-types"]], "Switch": [[46, "switch"]], "Template Containers": [[42, "template-containers"]], "Templates": [[17, "templates"], [42, "templates"], [46, "templates"]], "The End!": [[46, "the-end"]], "Tutorial": [[49, null]], "Unary Expressions": [[33, "unary-expressions"]], "Union": [[42, "union"]], "Unions": [[46, "unions"]], "Unpacking data": [[48, "unpacking-data"]], "Unsigned Integer Types:": [[9, "unsigned-integer-types"]], "Using the C API": [[23, null]], "Variable-sized integer": [[47, "variable-sized-integer"]], "Welcome to Caterpillar\u2019s documentation!": [[4, null]], "What exactly is a caterpillar?": [[44, null]], "What is endianess?": [[48, null]], "Where to start?": [[4, "where-to-start"]], "Whetting Your Appetite": [[4, "whetting-your-appetite"]], "Why use Caterpillar?": [[44, "why-use-caterpillar"]], "Working with structs": [[48, "working-with-structs"]]}, "docnames": ["development/changelog", "development/contribution", "development/index", "development/roadmap", "index", "installing/index", "library/abc", "library/byteorder", "library/context", "library/ctypes/int", "library/exceptions", "library/fields/common", "library/fields/compression", "library/fields/crypto", "library/fields/field_model", "library/fields/index", "library/index", "library/model", "library/options", "library/registry", "reference/capi/abstract", "reference/capi/atom", "reference/capi/context", "reference/capi/extension", "reference/capi/macros", "reference/capi/module", "reference/capi/objects/arch", "reference/capi/objects/atoms/bool", "reference/capi/objects/atoms/char", "reference/capi/objects/atoms/float", "reference/capi/objects/atoms/index", "reference/capi/objects/atoms/int", "reference/capi/objects/atoms/padding", "reference/capi/objects/contextexpr", "reference/capi/objects/contextobj", "reference/capi/objects/contextpath", "reference/capi/objects/layer", "reference/capi/objects/objimpl", "reference/capi/objects/option", "reference/capi/objects/state", "reference/capi/objects/struct", "reference/capi/parsing", "reference/datamodel", "reference/index", "reference/introduction", "reference/operators", "tutorial/advanced", "tutorial/basics", "tutorial/first_steps", "tutorial/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["development/changelog.rst", "development/contribution.rst", "development/index.rst", "development/roadmap.rst", "index.rst", "installing/index.rst", "library/abc.rst", "library/byteorder.rst", "library/context.rst", "library/ctypes/int.rst", "library/exceptions.rst", "library/fields/common.rst", "library/fields/compression.rst", "library/fields/crypto.rst", "library/fields/field_model.rst", "library/fields/index.rst", "library/index.rst", "library/model.rst", "library/options.rst", "library/registry.rst", "reference/capi/abstract.rst", "reference/capi/atom.rst", "reference/capi/context.rst", "reference/capi/extension.rst", "reference/capi/macros.rst", "reference/capi/module.rst", "reference/capi/objects/arch.rst", "reference/capi/objects/atoms/bool.rst", "reference/capi/objects/atoms/char.rst", "reference/capi/objects/atoms/float.rst", "reference/capi/objects/atoms/index.rst", "reference/capi/objects/atoms/int.rst", "reference/capi/objects/atoms/padding.rst", "reference/capi/objects/contextexpr.rst", "reference/capi/objects/contextobj.rst", "reference/capi/objects/contextpath.rst", "reference/capi/objects/layer.rst", "reference/capi/objects/objimpl.rst", "reference/capi/objects/option.rst", "reference/capi/objects/state.rst", "reference/capi/objects/struct.rst", "reference/capi/parsing.rst", "reference/datamodel.rst", "reference/index.rst", "reference/introduction.rst", "reference/operators.rst", "tutorial/advanced.rst", "tutorial/basics.rst", "tutorial/first_steps.rst", "tutorial/index.rst"], "indexentries": {"__and__() (caterpillar.py.chain method)": [[14, "caterpillar.py.Chain.__and__", false]], "__bits__ (caterpillar.py.fieldstruct attribute)": [[14, "caterpillar.py.FieldStruct.__bits__", false]], "__bits__() (object method)": [[42, "object.__bits__", false]], "__byteorder__ (caterpillar.py.fieldstruct attribute)": [[14, "caterpillar.py.FieldStruct.__byteorder__", false]], "__byteorder__ (object attribute)": [[42, "object.__byteorder__", false]], "__init__() (caterpillar.c.int method)": [[9, "caterpillar.c.Int.__init__", false]], "__init__() (caterpillar.py.chain method)": [[14, "caterpillar.py.Chain.__init__", false]], "__name__ (field attribute)": [[42, "field.__name__", false]], "__pack__() (caterpillar.py.fieldstruct method)": [[14, "caterpillar.py.FieldStruct.__pack__", false]], "__pack__() (object method)": [[42, "object.__pack__", false]], "__rand__() (caterpillar.py.chain method)": [[14, "caterpillar.py.Chain.__rand__", false]], "__repr__() (caterpillar.c.int method)": [[9, "caterpillar.c.Int.__repr__", false]], "__repr__() (caterpillar.py.fieldstruct method)": [[14, "caterpillar.py.FieldStruct.__repr__", false]], "__set_byteorder__() (object method)": [[42, "object.__set_byteorder__", false]], "__size__() (caterpillar.c.int method)": [[9, "caterpillar.c.Int.__size__", false]], "__size__() (caterpillar.py.chain method)": [[14, "caterpillar.py.Chain.__size__", false]], "__size__() (object method)": [[42, "object.__size__", false]], "__struct__ (class attribute)": [[42, "class.__struct__", false]], "__template__ (class attribute)": [[42, "class.__template__", false]], "__type__() (caterpillar.c.int method)": [[9, "caterpillar.c.Int.__type__", false]], "__type__() (caterpillar.py.chain method)": [[14, "caterpillar.py.Chain.__type__", false]], "__type__() (object method)": [[42, "object.__type__", false]], "__unpack__() (caterpillar.py.fieldstruct method)": [[14, "caterpillar.py.FieldStruct.__unpack__", false]], "__unpack__() (object method)": [[42, "object.__unpack__", false]], "_containsstruct (class in caterpillar.abc)": [[6, "caterpillar.abc._ContainsStruct", false]], "_contextlambda (class in caterpillar.abc)": [[6, "caterpillar.abc._ContextLambda", false]], "_contextlike (class in caterpillar.abc)": [[6, "caterpillar.abc._ContextLike", false]], "_cp_name (c macro)": [[24, "c._Cp_Name", false]], "_cppack_evallength (c function)": [[41, "c._CpPack_EvalLength", false]], "_enumlike (class in caterpillar.abc)": [[6, "caterpillar.abc._EnumLike", false]], "_modulestate (c struct)": [[25, "c._modulestate", false]], "_modulestate.any_type (c member)": [[25, "c._modulestate.Any_Type", false]], "_modulestate.bytesio_type (c member)": [[25, "c._modulestate.BytesIO_Type", false]], "_modulestate.cp_arch__host (c member)": [[25, "c._modulestate.cp_arch__host", false]], "_modulestate.cp_endian__big (c member)": [[25, "c._modulestate.cp_endian__big", false]], "_modulestate.cp_endian__little (c member)": [[25, "c._modulestate.cp_endian__little", false]], "_modulestate.cp_endian__native (c member)": [[25, "c._modulestate.cp_endian__native", false]], "_modulestate.cp_option__discard_const (c member)": [[25, "c._modulestate.cp_option__discard_const", false]], "_modulestate.cp_option__discard_unnamed (c member)": [[25, "c._modulestate.cp_option__discard_unnamed", false]], "_modulestate.cp_option__dynamic (c member)": [[25, "c._modulestate.cp_option__dynamic", false]], "_modulestate.cp_option__eval (c member)": [[25, "c._modulestate.cp_option__eval", false]], "_modulestate.cp_option__global_field_options (c member)": [[25, "c._modulestate.cp_option__global_field_options", false]], "_modulestate.cp_option__global_struct_options (c member)": [[25, "c._modulestate.cp_option__global_struct_options", false]], "_modulestate.cp_option__keep_position (c member)": [[25, "c._modulestate.cp_option__keep_position", false]], "_modulestate.cp_option__replace_types (c member)": [[25, "c._modulestate.cp_option__replace_types", false]], "_modulestate.cp_option__sequential (c member)": [[25, "c._modulestate.cp_option__sequential", false]], "_modulestate.cp_option__slots (c member)": [[25, "c._modulestate.cp_option__slots", false]], "_modulestate.cp_option__union (c member)": [[25, "c._modulestate.cp_option__union", false]], "_modulestate.list_type (c member)": [[25, "c._modulestate.List_Type", false]], "_modulestate.str___annotations__ (c member)": [[25, "c._modulestate.str___annotations__", false]], "_modulestate.str___dict__ (c member)": [[25, "c._modulestate.str___dict__", false]], "_modulestate.str___match_args__ (c member)": [[25, "c._modulestate.str___match_args__", false]], "_modulestate.str___mro__ (c member)": [[25, "c._modulestate.str___mro__", false]], "_modulestate.str___pack__ (c member)": [[25, "c._modulestate.str___pack__", false]], "_modulestate.str___pack_many__ (c member)": [[25, "c._modulestate.str___pack_many__", false]], "_modulestate.str___qualname__ (c member)": [[25, "c._modulestate.str___qualname__", false]], "_modulestate.str___size__ (c member)": [[25, "c._modulestate.str___size__", false]], "_modulestate.str___slots__ (c member)": [[25, "c._modulestate.str___slots__", false]], "_modulestate.str___struct__ (c member)": [[25, "c._modulestate.str___struct__", false]], "_modulestate.str___type__ (c member)": [[25, "c._modulestate.str___type__", false]], "_modulestate.str___unpack__ (c member)": [[25, "c._modulestate.str___unpack__", false]], "_modulestate.str___unpack_many__ (c member)": [[25, "c._modulestate.str___unpack_many__", false]], "_modulestate.str___weakref__ (c member)": [[25, "c._modulestate.str___weakref__", false]], "_modulestate.str_builder_process (c member)": [[25, "c._modulestate.str_builder_process", false]], "_modulestate.str_bytesio_getvalue (c member)": [[25, "c._modulestate.str_bytesio_getvalue", false]], "_modulestate.str_close (c member)": [[25, "c._modulestate.str_close", false]], "_modulestate.str_ctx__getattr (c member)": [[25, "c._modulestate.str_ctx__getattr", false]], "_modulestate.str_ctx__root (c member)": [[25, "c._modulestate.str_ctx__root", false]], "_modulestate.str_path_delim (c member)": [[25, "c._modulestate.str_path_delim", false]], "_modulestate.str_pattern_match (c member)": [[25, "c._modulestate.str_pattern_match", false]], "_modulestate.str_read (c member)": [[25, "c._modulestate.str_read", false]], "_modulestate.str_seek (c member)": [[25, "c._modulestate.str_seek", false]], "_modulestate.str_start (c member)": [[25, "c._modulestate.str_start", false]], "_modulestate.str_strict (c member)": [[25, "c._modulestate.str_strict", false]], "_modulestate.str_tell (c member)": [[25, "c._modulestate.str_tell", false]], "_modulestate.str_write (c member)": [[25, "c._modulestate.str_write", false]], "_modulestate.union_type (c member)": [[25, "c._modulestate.Union_Type", false]], "_structlike (class in caterpillar.abc)": [[6, "caterpillar.abc._StructLike", false]], "_supportspack (class in caterpillar.abc)": [[6, "caterpillar.abc._SupportsPack", false]], "_supportssize (class in caterpillar.abc)": [[6, "caterpillar.abc._SupportsSize", false]], "_supportsunpack (class in caterpillar.abc)": [[6, "caterpillar.abc._SupportsUnpack", false]], "_switch (class in caterpillar.abc)": [[6, "caterpillar.abc._Switch", false]], "add_field() (caterpillar.model.sequence method)": [[17, "caterpillar.model.Sequence.add_field", false]], "algorithm() (caterpillar.fields.encrypted method)": [[13, "caterpillar.fields.Encrypted.algorithm", false]], "amount (caterpillar.py.field attribute)": [[14, "caterpillar.py.Field.amount", false]], "apply() (caterpillar.byteorder.byteorder method)": [[7, "caterpillar.byteorder.ByteOrder.apply", false]], "arch (caterpillar.model.sequence attribute)": [[17, "caterpillar.model.Sequence.arch", false]], "arch (caterpillar.py.field attribute)": [[14, "caterpillar.py.Field.arch", false]], "arch (class in caterpillar.byteorder)": [[7, "caterpillar.byteorder.Arch", false]], "bigendian (caterpillar.byteorder attribute)": [[7, "caterpillar.byteorder.BigEndian", false]], "binaryexpression (class in caterpillar.context)": [[8, "caterpillar.context.BinaryExpression", false]], "bitfield (class in caterpillar.model)": [[17, "caterpillar.model.BitField", false]], "bitfield() (in module caterpillar.model)": [[17, "caterpillar.model.bitfield", false]], "bitfieldgroup (class in caterpillar.model)": [[17, "caterpillar.model.BitFieldGroup", false]], "bits (caterpillar.py.field attribute)": [[14, "caterpillar.py.Field.bits", false]], "boolean (caterpillar.py attribute)": [[11, "caterpillar.py.boolean", false]], "built-in function": [[42, "object.__call__", false], [45, "field.__ior__", false], [45, "field.__ixor__", false], [45, "field.__or__", false], [45, "field.__xor__", false], [45, "path.__call__", false], [45, "path.__getitem__", false], [45, "sequence.__add__", false], [45, "sequence.__iadd__", false], [45, "sequence.__isub__", false], [45, "sequence.__sub__", false], [45, "struct.__and__", false], [45, "struct.__floordiv__", false], [45, "struct.__getitem__", false], [45, "struct.__matmul__", false], [45, "struct.__rshift__", false], [45, "struct.__rsub__", false]], "byteorder (class in caterpillar.byteorder)": [[7, "caterpillar.byteorder.ByteOrder", false]], "byteorder() (in module caterpillar.byteorder)": [[7, "caterpillar.byteorder.byteorder", false]], "byteorder.alignment (class in caterpillar.byteorder)": [[7, "caterpillar.byteorder.ByteOrder.Alignment", false]], "byteorder.size (class in caterpillar.byteorder)": [[7, "caterpillar.byteorder.ByteOrder.Size", false]], "byteorder_field (caterpillar.byteorder attribute)": [[7, "caterpillar.byteorder.BYTEORDER_FIELD", false]], "bytes (class in caterpillar.py)": [[11, "caterpillar.py.Bytes", false]], "bz2compressed() (in module caterpillar.py)": [[12, "caterpillar.py.Bz2Compressed", false]], "caterpillar.c.i128 (built-in variable)": [[9, "caterpillar.c.i128", false]], "caterpillar.c.i16 (built-in variable)": [[9, "caterpillar.c.i16", false]], "caterpillar.c.i24 (built-in variable)": [[9, "caterpillar.c.i24", false]], "caterpillar.c.i32 (built-in variable)": [[9, "caterpillar.c.i32", false]], "caterpillar.c.i64 (built-in variable)": [[9, "caterpillar.c.i64", false]], "caterpillar.c.i8 (built-in variable)": [[9, "caterpillar.c.i8", false]], "caterpillar.c.int (built-in class)": [[9, "caterpillar.c.Int", false]], "caterpillar.c.u128 (built-in variable)": [[9, "caterpillar.c.u128", false]], "caterpillar.c.u16 (built-in variable)": [[9, "caterpillar.c.u16", false]], "caterpillar.c.u24 (built-in variable)": [[9, "caterpillar.c.u24", false]], "caterpillar.c.u32 (built-in variable)": [[9, "caterpillar.c.u32", false]], "caterpillar.c.u64 (built-in variable)": [[9, "caterpillar.c.u64", false]], "caterpillar.c.u8 (built-in variable)": [[9, "caterpillar.c.u8", false]], "caterpillar.options.o_array_factory (built-in variable)": [[18, "caterpillar.options.O_ARRAY_FACTORY", false]], "caterpillar.options.s_discard_const (built-in variable)": [[18, "caterpillar.options.S_DISCARD_CONST", false]], "caterpillar.options.s_discard_unnamed (built-in variable)": [[18, "caterpillar.options.S_DISCARD_UNNAMED", false]], "caterpillar.options.s_eval_annotations (built-in variable)": [[18, "caterpillar.options.S_EVAL_ANNOTATIONS", false]], "caterpillar.options.s_replace_types (built-in variable)": [[18, "caterpillar.options.S_REPLACE_TYPES", false]], "caterpillar.options.s_slots (built-in variable)": [[18, "caterpillar.options.S_SLOTS", false]], "caterpillar.options.s_union (built-in variable)": [[18, "caterpillar.options.S_UNION", false]], "caterpillar.registry": [[19, "module-caterpillar.registry", false]], "chain (class in caterpillar.py)": [[14, "caterpillar.py.Chain", false]], "char (caterpillar.py attribute)": [[11, "caterpillar.py.char", false]], "compressed (class in caterpillar.py)": [[12, "caterpillar.py.Compressed", false]], "computed (class in caterpillar.py)": [[11, "caterpillar.py.Computed", false]], "condition (caterpillar.py.field attribute)": [[14, "caterpillar.py.Field.condition", false]], "conditioncontext (class in caterpillar.context)": [[8, "caterpillar.context.ConditionContext", false]], "configure() (in module caterpillar.options)": [[18, "caterpillar.options.configure", false]], "const (class in caterpillar.py)": [[11, "caterpillar.py.Const", false]], "constbytes (class in caterpillar.py)": [[11, "caterpillar.py.ConstBytes", false]], "conststring (class in caterpillar.py)": [[11, "caterpillar.py.ConstString", false]], "context (class in caterpillar.context)": [[8, "caterpillar.context.Context", false]], "contextlength (class in caterpillar.context)": [[8, "caterpillar.context.ContextLength", false]], "contextpath (class in caterpillar.context)": [[8, "caterpillar.context.ContextPath", false]], "convert() (caterpillar.registry.typeconverter method)": [[19, "caterpillar.registry.TypeConverter.convert", false]], "cparch_check (c function)": [[26, "c.CpArch_Check", false]], "cparch_checkexact (c function)": [[26, "c.CpArch_CheckExact", false]], "cparch_type (c var)": [[26, "c.CpArch_Type", false]], "cparchobject (c type)": [[26, "c.CpArchObject", false]], "cpatom_callpack (c function)": [[21, "c.CpAtom_CallPack", false]], "cpatom_callsize (c function)": [[21, "c.CpAtom_CallSize", false]], "cpatom_canpack (c function)": [[21, "c.CpAtom_CanPack", false]], "cpatom_canunpack (c function)": [[21, "c.CpAtom_CanUnpack", false]], "cpatom_fastcanpack (c function)": [[21, "c.CpAtom_FastCanPack", false]], "cpatom_fastcanunpack (c function)": [[21, "c.CpAtom_FastCanUnpack", false]], "cpatom_fasthassize (c function)": [[21, "c.CpAtom_FastHasSize", false]], "cpatom_fasthastype (c function)": [[21, "c.CpAtom_FastHasType", false]], "cpatom_hassize (c function)": [[21, "c.CpAtom_HasSize", false]], "cpatom_hastype (c function)": [[21, "c.CpAtom_HasType", false]], "cpatom_type (c var)": [[21, "c.CpAtom_Type", false]], "cpatomobject (c type)": [[21, "c.CpAtomObject", false]], "cpbinaryexpr_new (c function)": [[33, "c.CpBinaryExpr_New", false]], "cpbinaryexpr_new.cpbinaryexpr_op_eq (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_Op_EQ", false]], "cpbinaryexpr_new.cpbinaryexpr_op_ge (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_Op_GE", false]], "cpbinaryexpr_new.cpbinaryexpr_op_gt (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_Op_GT", false]], "cpbinaryexpr_new.cpbinaryexpr_op_le (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_Op_LE", false]], "cpbinaryexpr_new.cpbinaryexpr_op_lt (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_Op_LT", false]], "cpbinaryexpr_new.cpbinaryexpr_op_ne (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_Op_NE", false]], "cpbinaryexpr_new.cpbinaryexpr_opadd (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpAdd", false]], "cpbinaryexpr_new.cpbinaryexpr_opand (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpAnd", false]], "cpbinaryexpr_new.cpbinaryexpr_opbitand (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpBitAnd", false]], "cpbinaryexpr_new.cpbinaryexpr_opbitor (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpBitOr", false]], "cpbinaryexpr_new.cpbinaryexpr_opbitxor (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpBitXor", false]], "cpbinaryexpr_new.cpbinaryexpr_opfloordiv (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpFloorDiv", false]], "cpbinaryexpr_new.cpbinaryexpr_oplshift (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpLShift", false]], "cpbinaryexpr_new.cpbinaryexpr_opmatmul (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpMatMul", false]], "cpbinaryexpr_new.cpbinaryexpr_opmod (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpMod", false]], "cpbinaryexpr_new.cpbinaryexpr_opmul (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpMul", false]], "cpbinaryexpr_new.cpbinaryexpr_opor (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpOr", false]], "cpbinaryexpr_new.cpbinaryexpr_oppow (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpPow", false]], "cpbinaryexpr_new.cpbinaryexpr_oprshift (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpRShift", false]], "cpbinaryexpr_new.cpbinaryexpr_opsub (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpSub", false]], "cpbinaryexpr_new.cpbinaryexpr_optruediv (c var)": [[33, "c.CpBinaryExpr_New.CpBinaryExpr_OpTrueDiv", false]], "cpbinaryexpr_type (c var)": [[33, "c.CpBinaryExpr_Type", false]], "cpbinaryexprobject (c type)": [[33, "c.CpBinaryExprObject", false]], "cpboolatom_pack (c function)": [[27, "c.CpBoolAtom_Pack", false]], "cpboolatom_type (c var)": [[27, "c.CpBoolAtom_Type", false]], "cpboolatom_unpack (c function)": [[27, "c.CpBoolAtom_Unpack", false]], "cpboolatomobject (c type)": [[27, "c.CpBoolAtomObject", false]], "cpcharatom_pack (c function)": [[28, "c.CpCharAtom_Pack", false]], "cpcharatom_type (c var)": [[28, "c.CpCharAtom_Type", false]], "cpcharatom_unpack (c function)": [[28, "c.CpCharAtom_Unpack", false]], "cpcharatomobject (c type)": [[28, "c.CpCharAtomObject", false]], "cpcontext_check (c function)": [[34, "c.CpContext_Check", false]], "cpcontext_checkexact (c function)": [[34, "c.CpContext_CheckExact", false]], "cpcontext_new (c function)": [[34, "c.CpContext_New", false]], "cpcontext_type (c var)": [[34, "c.CpContext_Type", false]], "cpcontextobject (c type)": [[34, "c.CpContextObject", false]], "cpcontextpath_check (c function)": [[35, "c.CpContextPath_Check", false]], "cpcontextpath_checkexact (c function)": [[35, "c.CpContextPath_CheckExact", false]], "cpcontextpath_fromstring (c function)": [[35, "c.CpContextPath_FromString", false]], "cpcontextpath_new (c function)": [[35, "c.CpContextPath_New", false]], "cpcontextpath_type (c var)": [[35, "c.CpContextPath_Type", false]], "cpcontextpathobject (c type)": [[35, "c.CpContextPathObject", false]], "cpendian_check (c function)": [[26, "c.CpEndian_Check", false]], "cpendian_checkexact (c function)": [[26, "c.CpEndian_CheckExact", false]], "cpendian_islittleendian (c function)": [[26, "c.CpEndian_IsLittleEndian", false]], "cpendian_type (c var)": [[26, "c.CpEndian_Type", false]], "cpendianobject (c type)": [[26, "c.CpEndianObject", false]], "cpfloatatom_check (c function)": [[29, "c.CpFloatAtom_Check", false]], "cpfloatatom_checkexact (c function)": [[29, "c.CpFloatAtom_CheckExact", false]], "cpfloatatom_pack (c function)": [[29, "c.CpFloatAtom_Pack", false]], "cpfloatatom_type (c var)": [[29, "c.CpFloatAtom_Type", false]], "cpfloatatom_unpack (c function)": [[29, "c.CpFloatAtom_Unpack", false]], "cpfloatatomobject (c type)": [[29, "c.CpFloatAtomObject", false]], "cpintatom_check (c function)": [[31, "c.CpIntAtom_Check", false]], "cpintatom_checkexact (c function)": [[31, "c.CpIntAtom_CheckExact", false]], "cpintatom_pack (c function)": [[31, "c.CpIntAtom_Pack", false]], "cpintatom_type (c var)": [[31, "c.CpIntAtom_Type", false]], "cpintatom_unpack (c function)": [[31, "c.CpIntAtom_Unpack", false]], "cpintatomobject (c type)": [[31, "c.CpIntAtomObject", false]], "cpintatomobject._m_little_endian (c var)": [[31, "c.CpIntAtomObject._m_little_endian", false]], "cpintatomobject._m_signed (c var)": [[31, "c.CpIntAtomObject._m_signed", false]], "cpintatomobject.m_byte_count (c var)": [[31, "c.CpIntAtomObject.m_byte_count", false]], "cplayer_appendpath (c function)": [[36, "c.CpLayer_AppendPath", false]], "cplayer_check (c function)": [[36, "c.CpLayer_Check", false]], "cplayer_checkexact (c function)": [[36, "c.CpLayer_CheckExact", false]], "cplayer_invalidate (c function)": [[36, "c.CpLayer_Invalidate", false]], "cplayer_new (c function)": [[36, "c.CpLayer_New", false]], "cplayer_setsequence (c function)": [[36, "c.CpLayer_SetSequence", false]], "cplayer_type (c var)": [[36, "c.CpLayer_Type", false]], "cplayerobject (c type)": [[36, "c.CpLayerObject", false]], "cpmodule (c var)": [[25, "c.CpModule", false]], "cpmodule_setuptype (c macro)": [[25, "c.CpModule_SetupType", false]], "cpobject_create (c function)": [[24, "c.CpObject_Create", false]], "cpobject_createnoargs (c function)": [[24, "c.CpObject_CreateNoArgs", false]], "cpobject_createoneargs (c function)": [[24, "c.CpObject_CreateOneArgs", false]], "cpoption_check (c function)": [[38, "c.CpOption_Check", false]], "cpoption_checkexact (c function)": [[38, "c.CpOption_CheckExact", false]], "cpoption_type (c var)": [[38, "c.CpOption_Type", false]], "cpoptionobject (c type)": [[38, "c.CpOptionObject", false]], "cppack (c function)": [[41, "c.CpPack", false]], "cppaddingatom_pack (c function)": [[32, "c.CpPaddingAtom_Pack", false]], "cppaddingatom_packmany (c function)": [[32, "c.CpPaddingAtom_PackMany", false]], "cppaddingatom_type (c var)": [[32, "c.CpPaddingAtom_Type", false]], "cppaddingatom_unpack (c function)": [[32, "c.CpPaddingAtom_Unpack", false]], "cppaddingatom_unpackmany (c function)": [[32, "c.CpPaddingAtom_UnpackMany", false]], "cppaddingatomobject (c type)": [[32, "c.CpPaddingAtomObject", false]], "cpsizeof (c function)": [[41, "c.CpSizeOf", false]], "cpstate_check (c function)": [[39, "c.CpState_Check", false]], "cpstate_checkexact (c function)": [[39, "c.CpState_CheckExact", false]], "cpstate_new (c function)": [[39, "c.CpState_New", false]], "cpstate_read (c function)": [[39, "c.CpState_Read", false]], "cpstate_readfully (c function)": [[39, "c.CpState_ReadFully", false]], "cpstate_seek (c function)": [[39, "c.CpState_Seek", false]], "cpstate_setglobals (c function)": [[39, "c.CpState_SetGlobals", false]], "cpstate_tell (c function)": [[39, "c.CpState_Tell", false]], "cpstate_type (c var)": [[39, "c.CpState_Type", false]], "cpstate_write (c function)": [[39, "c.CpState_Write", false]], "cpstateobject (c type)": [[39, "c.CpStateObject", false]], "cpstruct_addfield (c function)": [[40, "c.CpStruct_AddField", false]], "cpstruct_addfieldinfo (c function)": [[40, "c.CpStruct_AddFieldInfo", false]], "cpstruct_check (c function)": [[40, "c.CpStruct_Check", false]], "cpstruct_checkexact (c function)": [[40, "c.CpStruct_CheckExact", false]], "cpstruct_getannotations (c function)": [[40, "c.CpStruct_GetAnnotations", false]], "cpstruct_hasoption (c function)": [[40, "c.CpStruct_HasOption", false]], "cpstruct_new (c function)": [[40, "c.CpStruct_New", false]], "cpstruct_replacetype (c function)": [[40, "c.CpStruct_ReplaceType", false]], "cpstruct_type (c var)": [[40, "c.CpStruct_Type", false]], "cpstructfieldinfo_check (c function)": [[40, "c.CpStructFieldInfo_Check", false]], "cpstructfieldinfo_checkexact (c function)": [[40, "c.CpStructFieldInfo_CheckExact", false]], "cpstructfieldinfo_new (c function)": [[40, "c.CpStructFieldInfo_New", false]], "cpstructfieldinfo_type (c var)": [[40, "c.CpStructFieldInfo_Type", false]], "cpstructfieldinfoobject (c type)": [[40, "c.CpStructFieldInfoObject", false]], "cpstructmodel_check (c function)": [[40, "c.CpStructModel_Check", false]], "cpstructmodel_getstruct (c function)": [[40, "c.CpStructModel_GetStruct", false]], "cpstructobject (c type)": [[40, "c.CpStructObject", false]], "cptypeof (c function)": [[41, "c.CpTypeOf", false]], "cptypeof_common (c function)": [[41, "c.CpTypeOf_Common", false]], "cptypeof_field (c function)": [[41, "c.CpTypeOf_Field", false]], "cpunaryexpr_new (c function)": [[33, "c.CpUnaryExpr_New", false]], "cpunaryexpr_new.cpunaryexpr_opneg (c var)": [[33, "c.CpUnaryExpr_New.CpUnaryExpr_OpNeg", false]], "cpunaryexpr_new.cpunaryexpr_opnot (c var)": [[33, "c.CpUnaryExpr_New.CpUnaryExpr_OpNot", false]], "cpunaryexpr_new.cpunaryexpr_oppos (c var)": [[33, "c.CpUnaryExpr_New.CpUnaryExpr_OpPos", false]], "cpunaryexpr_type (c var)": [[33, "c.CpUnaryExpr_Type", false]], "cpunaryexprobject (c type)": [[33, "c.CpUnaryExprObject", false]], "cpunpack (c function)": [[41, "c.CpUnpack", false]], "cstring (class in caterpillar.py)": [[11, "caterpillar.py.CString", false]], "ctx": [[42, "ctx", false]], "ctx (caterpillar.context attribute)": [[8, "caterpillar.context.ctx", false]], "ctx_field": [[42, "CTX_FIELD", false]], "ctx_field (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_FIELD", false]], "ctx_index": [[42, "CTX_INDEX", false]], "ctx_index (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_INDEX", false]], "ctx_object": [[42, "CTX_OBJECT", false]], "ctx_object (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_OBJECT", false]], "ctx_offsets": [[42, "CTX_OFFSETS", false]], "ctx_offsets (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_OFFSETS", false]], "ctx_parent": [[42, "CTX_PARENT", false]], "ctx_parent (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_PARENT", false]], "ctx_path": [[42, "CTX_PATH", false]], "ctx_path (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_PATH", false]], "ctx_pos": [[42, "CTX_POS", false]], "ctx_pos (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_POS", false]], "ctx_seq (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_SEQ", false]], "ctx_stream": [[42, "CTX_STREAM", false]], "ctx_stream (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_STREAM", false]], "ctx_value": [[42, "CTX_VALUE", false]], "ctx_value (caterpillar.context attribute)": [[8, "caterpillar.context.CTX_VALUE", false]], "decode() (caterpillar.py.compressed method)": [[12, "caterpillar.py.Compressed.decode", false]], "decode() (caterpillar.py.const method)": [[11, "caterpillar.py.Const.decode", false]], "decode() (caterpillar.py.enum method)": [[11, "caterpillar.py.Enum.decode", false]], "decode() (caterpillar.py.transformer method)": [[11, "caterpillar.py.Transformer.decode", false]], "default (caterpillar.py.field attribute)": [[14, "caterpillar.py.Field.default", false]], "del_field() (caterpillar.model.sequence method)": [[17, "caterpillar.model.Sequence.del_field", false]], "delegationerror (class in caterpillar.exception)": [[10, "caterpillar.exception.DelegationError", false]], "derive() (in module caterpillar.model)": [[17, "caterpillar.model.derive", false]], "dynamicsizeerror (class in caterpillar.exception)": [[10, "caterpillar.exception.DynamicSizeError", false]], "elseif (class in caterpillar.py)": [[14, "caterpillar.py.ElseIf", false]], "encode() (caterpillar.py.compressed method)": [[12, "caterpillar.py.Compressed.encode", false]], "encode() (caterpillar.py.const method)": [[11, "caterpillar.py.Const.encode", false]], "encode() (caterpillar.py.enum method)": [[11, "caterpillar.py.Enum.encode", false]], "encode() (caterpillar.py.transformer method)": [[11, "caterpillar.py.Transformer.encode", false]], "encrypted (class in caterpillar.fields)": [[13, "caterpillar.fields.Encrypted", false]], "enum (class in caterpillar.py)": [[11, "caterpillar.py.Enum", false]], "exprmixin (class in caterpillar.context)": [[8, "caterpillar.context.ExprMixin", false]], "f_dynamic (caterpillar.options attribute)": [[18, "caterpillar.options.F_DYNAMIC", false]], "f_keep_position (caterpillar.options attribute)": [[18, "caterpillar.options.F_KEEP_POSITION", false]], "f_offset_override (caterpillar.options attribute)": [[18, "caterpillar.options.F_OFFSET_OVERRIDE", false]], "f_sequential (caterpillar.options attribute)": [[18, "caterpillar.options.F_SEQUENTIAL", false]], "field (class in caterpillar.py)": [[14, "caterpillar.py.Field", false]], "field.__ior__()": [[45, "field.__ior__", false]], "field.__ixor__()": [[45, "field.__ixor__", false]], "field.__or__()": [[45, "field.__or__", false]], "field.__xor__()": [[45, "field.__xor__", false]], "field_kwds (caterpillar.model.templatetypevar attribute)": [[17, "caterpillar.model.TemplateTypeVar.field_kwds", false]], "field_options (caterpillar.model.sequence attribute)": [[17, "caterpillar.model.Sequence.field_options", false]], "fieldmixin (class in caterpillar.py)": [[14, "caterpillar.py.FieldMixin", false]], "fields (caterpillar.model.sequence attribute)": [[17, "caterpillar.model.Sequence.fields", false]], "fieldstruct (class in caterpillar.py)": [[14, "caterpillar.py.FieldStruct", false]], "flag (class in caterpillar.options)": [[18, "caterpillar.options.Flag", false]], "flags (caterpillar.py.field attribute)": [[14, "caterpillar.py.Field.flags", false]], "float16 (caterpillar.py attribute)": [[11, "caterpillar.py.float16", false]], "float32 (caterpillar.py attribute)": [[11, "caterpillar.py.float32", false]], "float64 (caterpillar.py attribute)": [[11, "caterpillar.py.float64", false]], "formatfield (class in caterpillar.py)": [[11, "caterpillar.py.FormatField", false]], "get_flag() (in module caterpillar.options)": [[18, "caterpillar.options.get_flag", false]], "get_flags() (in module caterpillar.options)": [[18, "caterpillar.options.get_flags", false]], "get_global_module_state (c function)": [[25, "c.get_global_module_state", false]], "get_instance() (caterpillar.fields.encrypted method)": [[13, "caterpillar.fields.Encrypted.get_instance", false]], "get_module_state (c function)": [[25, "c.get_module_state", false]], "get_offset() (caterpillar.py.field method)": [[14, "caterpillar.py.Field.get_offset", false]], "get_struct() (caterpillar.py.field method)": [[14, "caterpillar.py.Field.get_struct", false]], "get_type() (caterpillar.py.field method)": [[14, "caterpillar.py.Field.get_type", false]], "getstruct() (in module caterpillar.abc)": [[6, "caterpillar.abc.getstruct", false]], "has_condition() (caterpillar.py.field method)": [[14, "caterpillar.py.Field.has_condition", false]], "has_flag() (caterpillar.py.field method)": [[14, "caterpillar.py.Field.has_flag", false]], "has_flag() (in module caterpillar.options)": [[18, "caterpillar.options.has_flag", false]], "has_option() (caterpillar.model.sequence method)": [[17, "caterpillar.model.Sequence.has_option", false]], "hasstruct() (in module caterpillar.abc)": [[6, "caterpillar.abc.hasstruct", false]], "head (caterpillar.py.chain property)": [[14, "caterpillar.py.Chain.head", false]], "if (class in caterpillar.py)": [[14, "caterpillar.py.If", false]], "int (class in caterpillar.py)": [[11, "caterpillar.py.Int", false]], "int16 (caterpillar.py attribute)": [[11, "caterpillar.py.int16", false]], "int32 (caterpillar.py attribute)": [[11, "caterpillar.py.int32", false]], "int64 (caterpillar.py attribute)": [[11, "caterpillar.py.int64", false]], "int8 (caterpillar.py attribute)": [[11, "caterpillar.py.int8", false]], "invalidvalueerror (class in caterpillar.exception)": [[10, "caterpillar.exception.InvalidValueError", false]], "is_enabled() (caterpillar.py.field method)": [[14, "caterpillar.py.Field.is_enabled", false]], "is_padding() (caterpillar.py.formatfield method)": [[11, "caterpillar.py.FormatField.is_padding", false]], "is_seq() (caterpillar.py.field method)": [[14, "caterpillar.py.Field.is_seq", false]], "istemplate() (in module caterpillar.model)": [[17, "caterpillar.model.istemplate", false]], "length() (caterpillar.py.field method)": [[14, "caterpillar.py.Field.length", false]], "little_endian (caterpillar.c.int attribute)": [[9, "caterpillar.c.Int.little_endian", false]], "littleendian (caterpillar.byteorder attribute)": [[7, "caterpillar.byteorder.LittleEndian", false]], "lzmacompressed() (in module caterpillar.py)": [[12, "caterpillar.py.LZMACompressed", false]], "lzocompressed() (in module caterpillar.py)": [[12, "caterpillar.py.LZOCompressed", false]], "magic (examples.formats.nibarchive.object.nibheader.nibheader attribute)": [[42, "examples.formats.nibarchive.object.NIBHeader.NIBHeader.magic", false]], "matches() (caterpillar.registry.typeconverter method)": [[19, "caterpillar.registry.TypeConverter.matches", false]], "max_size (caterpillar.model.unionhook attribute)": [[17, "caterpillar.model.UnionHook.max_size", false]], "memory (class in caterpillar.py)": [[11, "caterpillar.py.Memory", false]], "mode() (caterpillar.fields.encrypted method)": [[13, "caterpillar.fields.Encrypted.mode", false]], "model (caterpillar.model.sequence attribute)": [[17, "caterpillar.model.Sequence.model", false]], "module": [[19, "module-caterpillar.registry", false]], "name (caterpillar.model.templatetypevar attribute)": [[17, "caterpillar.model.TemplateTypeVar.name", false]], "name (caterpillar.options.flag attribute)": [[18, "caterpillar.options.Flag.name", false]], "native (caterpillar.byteorder attribute)": [[7, "caterpillar.byteorder.Native", false]], "nbits (caterpillar.c.int attribute)": [[9, "caterpillar.c.Int.nbits", false]], "nbytes (caterpillar.c.int attribute)": [[9, "caterpillar.c.Int.nbytes", false]], "netendian (caterpillar.byteorder attribute)": [[7, "caterpillar.byteorder.NetEndian", false]], "object.__call__()": [[42, "object.__call__", false]], "object.nibheader (class in examples.formats.nibarchive)": [[42, "examples.formats.nibarchive.object.NIBHeader", false]], "offset (caterpillar.py.field attribute)": [[14, "caterpillar.py.Field.offset", false]], "optionerror (class in caterpillar.exception)": [[10, "caterpillar.exception.OptionError", false]], "options (caterpillar.model.sequence attribute)": [[17, "caterpillar.model.Sequence.options", false]], "options (caterpillar.py.field attribute)": [[14, "caterpillar.py.Field.options", false]], "order (caterpillar.model.sequence attribute)": [[17, "caterpillar.model.Sequence.order", false]], "order (caterpillar.py.field attribute)": [[14, "caterpillar.py.Field.order", false]], "pack() (in module caterpillar.model)": [[17, "caterpillar.model.pack", false]], "pack_file() (in module caterpillar.model)": [[17, "caterpillar.model.pack_file", false]], "pack_into() (in module caterpillar.model)": [[17, "caterpillar.model.pack_into", false]], "pack_seq() (caterpillar.py.fieldstruct method)": [[14, "caterpillar.py.FieldStruct.pack_seq", false]], "pack_seq() (caterpillar.py.formatfield method)": [[11, "caterpillar.py.FormatField.pack_seq", false]], "pack_single() (caterpillar.fields.encrypted method)": [[13, "caterpillar.fields.Encrypted.pack_single", false]], "pack_single() (caterpillar.py.chain method)": [[14, "caterpillar.py.Chain.pack_single", false]], "pack_single() (caterpillar.py.computed method)": [[11, "caterpillar.py.Computed.pack_single", false]], "pack_single() (caterpillar.py.cstring method)": [[11, "caterpillar.py.CString.pack_single", false]], "pack_single() (caterpillar.py.fieldstruct method)": [[14, "caterpillar.py.FieldStruct.pack_single", false]], "pack_single() (caterpillar.py.formatfield method)": [[11, "caterpillar.py.FormatField.pack_single", false]], "pack_single() (caterpillar.py.int method)": [[11, "caterpillar.py.Int.pack_single", false]], "pack_single() (caterpillar.py.memory method)": [[11, "caterpillar.py.Memory.pack_single", false]], "pack_single() (caterpillar.py.prefixed method)": [[11, "caterpillar.py.Prefixed.pack_single", false]], "pack_single() (caterpillar.py.transformer method)": [[11, "caterpillar.py.Transformer.pack_single", false]], "pack_single() (caterpillar.py.varint method)": [[11, "caterpillar.py.VarInt.pack_single", false]], "padding (caterpillar.py attribute)": [[11, "caterpillar.py.padding", false]], "padding() (caterpillar.fields.encrypted method)": [[13, "caterpillar.fields.Encrypted.padding", false]], "parent": [[42, "parent", false]], "parent (caterpillar.context attribute)": [[8, "caterpillar.context.parent", false]], "pass (caterpillar.py attribute)": [[11, "caterpillar.py.Pass", false]], "path.__call__()": [[45, "path.__call__", false]], "path.__getitem__()": [[45, "path.__getitem__", false]], "prefixed (class in caterpillar.py)": [[11, "caterpillar.py.Prefixed", false]], "sequence (class in caterpillar.model)": [[17, "caterpillar.model.Sequence", false]], "sequence.__add__()": [[45, "sequence.__add__", false]], "sequence.__iadd__()": [[45, "sequence.__iadd__", false]], "sequence.__isub__()": [[45, "sequence.__isub__", false]], "sequence.__sub__()": [[45, "sequence.__sub__", false]], "set_field_flags() (in module caterpillar.options)": [[18, "caterpillar.options.set_field_flags", false]], "set_struct_flags() (in module caterpillar.options)": [[18, "caterpillar.options.set_struct_flags", false]], "set_union_flags() (in module caterpillar.options)": [[18, "caterpillar.options.set_union_flags", false]], "signed (caterpillar.c.int attribute)": [[9, "caterpillar.c.Int.signed", false]], "size_t (caterpillar.py attribute)": [[11, "caterpillar.py.size_t", false]], "ssize_t (caterpillar.py attribute)": [[11, "caterpillar.py.ssize_t", false]], "stop (class in caterpillar.exception)": [[10, "caterpillar.exception.Stop", false]], "streamerror (class in caterpillar.exception)": [[10, "caterpillar.exception.StreamError", false]], "string (class in caterpillar.py)": [[11, "caterpillar.py.String", false]], "struct (caterpillar.model.unionhook attribute)": [[17, "caterpillar.model.UnionHook.struct", false]], "struct (caterpillar.py.field attribute)": [[14, "caterpillar.py.Field.struct", false]], "struct (class in caterpillar.model)": [[17, "caterpillar.model.Struct", false]], "struct() (in module caterpillar.model)": [[17, "caterpillar.model.struct", false]], "struct.__and__()": [[45, "struct.__and__", false]], "struct.__floordiv__()": [[45, "struct.__floordiv__", false]], "struct.__getitem__()": [[45, "struct.__getitem__", false]], "struct.__matmul__()": [[45, "struct.__matmul__", false]], "struct.__rshift__()": [[45, "struct.__rshift__", false]], "struct.__rsub__()": [[45, "struct.__rsub__", false]], "struct_field (caterpillar.abc attribute)": [[6, "caterpillar.abc.STRUCT_FIELD", false]], "structexception (class in caterpillar.exception)": [[10, "caterpillar.exception.StructException", false]], "sysnative (caterpillar.byteorder attribute)": [[7, "caterpillar.byteorder.SysNative", false]], "system_arch (caterpillar.byteorder attribute)": [[7, "caterpillar.byteorder.system_arch", false]], "tail (caterpillar.py.chain property)": [[14, "caterpillar.py.Chain.tail", false]], "template() (in module caterpillar.model)": [[17, "caterpillar.model.template", false]], "templatetypevar (class in caterpillar.model)": [[17, "caterpillar.model.TemplateTypeVar", false]], "text (caterpillar.py.formatfield attribute)": [[11, "caterpillar.py.FormatField.text", false]], "this": [[42, "this", false]], "this (caterpillar.context attribute)": [[8, "caterpillar.context.this", false]], "to_struct() (in module caterpillar.registry)": [[19, "caterpillar.registry.to_struct", false]], "transformer (class in caterpillar.py)": [[11, "caterpillar.py.Transformer", false]], "ty (caterpillar.py.formatfield attribute)": [[11, "caterpillar.py.FormatField.ty", false]], "typeconverter (class in caterpillar.registry)": [[19, "caterpillar.registry.TypeConverter", false]], "typeof() (in module caterpillar.abc)": [[6, "caterpillar.abc.typeof", false]], "uint (class in caterpillar.py)": [[11, "caterpillar.py.UInt", false]], "uint16 (caterpillar.py attribute)": [[11, "caterpillar.py.uint16", false]], "uint32 (caterpillar.py attribute)": [[11, "caterpillar.py.uint32", false]], "uint64 (caterpillar.py attribute)": [[11, "caterpillar.py.uint64", false]], "uint8 (caterpillar.py attribute)": [[11, "caterpillar.py.uint8", false]], "unaryexpression (class in caterpillar.context)": [[8, "caterpillar.context.UnaryExpression", false]], "union() (in module caterpillar.model)": [[17, "caterpillar.model.union", false]], "unionhook (class in caterpillar.model)": [[17, "caterpillar.model.UnionHook", false]], "unpack() (in module caterpillar.model)": [[17, "caterpillar.model.unpack", false]], "unpack_file() (in module caterpillar.model)": [[17, "caterpillar.model.unpack_file", false]], "unpack_seq() (caterpillar.py.fieldstruct method)": [[14, "caterpillar.py.FieldStruct.unpack_seq", false]], "unpack_seq() (caterpillar.py.formatfield method)": [[11, "caterpillar.py.FormatField.unpack_seq", false]], "unpack_single() (caterpillar.fields.encrypted method)": [[13, "caterpillar.fields.Encrypted.unpack_single", false]], "unpack_single() (caterpillar.py.bytes method)": [[11, "caterpillar.py.Bytes.unpack_single", false]], "unpack_single() (caterpillar.py.chain method)": [[14, "caterpillar.py.Chain.unpack_single", false]], "unpack_single() (caterpillar.py.computed method)": [[11, "caterpillar.py.Computed.unpack_single", false]], "unpack_single() (caterpillar.py.cstring method)": [[11, "caterpillar.py.CString.unpack_single", false]], "unpack_single() (caterpillar.py.fieldstruct method)": [[14, "caterpillar.py.FieldStruct.unpack_single", false]], "unpack_single() (caterpillar.py.formatfield method)": [[11, "caterpillar.py.FormatField.unpack_single", false]], "unpack_single() (caterpillar.py.int method)": [[11, "caterpillar.py.Int.unpack_single", false]], "unpack_single() (caterpillar.py.memory method)": [[11, "caterpillar.py.Memory.unpack_single", false]], "unpack_single() (caterpillar.py.prefixed method)": [[11, "caterpillar.py.Prefixed.unpack_single", false]], "unpack_single() (caterpillar.py.string method)": [[11, "caterpillar.py.String.unpack_single", false]], "unpack_single() (caterpillar.py.transformer method)": [[11, "caterpillar.py.Transformer.unpack_single", false]], "unpack_single() (caterpillar.py.varint method)": [[11, "caterpillar.py.VarInt.unpack_single", false]], "unsupportedoperation (class in caterpillar.exception)": [[10, "caterpillar.exception.UnsupportedOperation", false]], "validationerror (class in caterpillar.exception)": [[10, "caterpillar.exception.ValidationError", false]], "value (caterpillar.options.flag attribute)": [[18, "caterpillar.options.Flag.value", false]], "varint (class in caterpillar.py)": [[11, "caterpillar.py.VarInt", false]], "vint (caterpillar.py attribute)": [[11, "caterpillar.py.vint", false]], "void_ptr (caterpillar.py attribute)": [[11, "caterpillar.py.void_ptr", false]], "zlibcompressed() (in module caterpillar.py)": [[12, "caterpillar.py.ZLibCompressed", false]]}, "objects": {"": [[26, 0, 1, "c.CpArchObject", "CpArchObject"], [26, 1, 1, "c.CpArch_Check", "CpArch_Check"], [26, 1, 1, "c.CpArch_CheckExact", "CpArch_CheckExact"], [26, 3, 1, "c.CpArch_Type", "CpArch_Type"], [21, 0, 1, "c.CpAtomObject", "CpAtomObject"], [21, 1, 1, "c.CpAtom_CallPack", "CpAtom_CallPack"], [21, 1, 1, "c.CpAtom_CallSize", "CpAtom_CallSize"], [21, 1, 1, "c.CpAtom_CanPack", "CpAtom_CanPack"], [21, 1, 1, "c.CpAtom_CanUnpack", "CpAtom_CanUnpack"], [21, 1, 1, "c.CpAtom_FastCanPack", "CpAtom_FastCanPack"], [21, 1, 1, "c.CpAtom_FastCanUnpack", "CpAtom_FastCanUnpack"], [21, 1, 1, "c.CpAtom_FastHasSize", "CpAtom_FastHasSize"], [21, 1, 1, "c.CpAtom_FastHasType", "CpAtom_FastHasType"], [21, 1, 1, "c.CpAtom_HasSize", "CpAtom_HasSize"], [21, 1, 1, "c.CpAtom_HasType", "CpAtom_HasType"], [21, 3, 1, "c.CpAtom_Type", "CpAtom_Type"], [33, 0, 1, "c.CpBinaryExprObject", "CpBinaryExprObject"], [33, 1, 1, "c.CpBinaryExpr_New", "CpBinaryExpr_New"], [33, 3, 1, "c.CpBinaryExpr_Type", "CpBinaryExpr_Type"], [27, 0, 1, "c.CpBoolAtomObject", "CpBoolAtomObject"], [27, 1, 1, "c.CpBoolAtom_Pack", "CpBoolAtom_Pack"], [27, 3, 1, "c.CpBoolAtom_Type", "CpBoolAtom_Type"], [27, 1, 1, "c.CpBoolAtom_Unpack", "CpBoolAtom_Unpack"], [28, 0, 1, "c.CpCharAtomObject", "CpCharAtomObject"], [28, 1, 1, "c.CpCharAtom_Pack", "CpCharAtom_Pack"], [28, 3, 1, "c.CpCharAtom_Type", "CpCharAtom_Type"], [28, 1, 1, "c.CpCharAtom_Unpack", "CpCharAtom_Unpack"], [34, 0, 1, "c.CpContextObject", "CpContextObject"], [35, 0, 1, "c.CpContextPathObject", "CpContextPathObject"], [35, 1, 1, "c.CpContextPath_Check", "CpContextPath_Check"], [35, 1, 1, "c.CpContextPath_CheckExact", "CpContextPath_CheckExact"], [35, 1, 1, "c.CpContextPath_FromString", "CpContextPath_FromString"], [35, 1, 1, "c.CpContextPath_New", "CpContextPath_New"], [35, 3, 1, "c.CpContextPath_Type", "CpContextPath_Type"], [34, 1, 1, "c.CpContext_Check", "CpContext_Check"], [34, 1, 1, "c.CpContext_CheckExact", "CpContext_CheckExact"], [34, 1, 1, "c.CpContext_New", "CpContext_New"], [34, 3, 1, "c.CpContext_Type", "CpContext_Type"], [26, 0, 1, "c.CpEndianObject", "CpEndianObject"], [26, 1, 1, "c.CpEndian_Check", "CpEndian_Check"], [26, 1, 1, "c.CpEndian_CheckExact", "CpEndian_CheckExact"], [26, 1, 1, "c.CpEndian_IsLittleEndian", "CpEndian_IsLittleEndian"], [26, 3, 1, "c.CpEndian_Type", "CpEndian_Type"], [29, 0, 1, "c.CpFloatAtomObject", "CpFloatAtomObject"], [29, 1, 1, "c.CpFloatAtom_Check", "CpFloatAtom_Check"], [29, 1, 1, "c.CpFloatAtom_CheckExact", "CpFloatAtom_CheckExact"], [29, 1, 1, "c.CpFloatAtom_Pack", "CpFloatAtom_Pack"], [29, 3, 1, "c.CpFloatAtom_Type", "CpFloatAtom_Type"], [29, 1, 1, "c.CpFloatAtom_Unpack", "CpFloatAtom_Unpack"], [31, 0, 1, "c.CpIntAtomObject", "CpIntAtomObject"], [31, 1, 1, "c.CpIntAtom_Check", "CpIntAtom_Check"], [31, 1, 1, "c.CpIntAtom_CheckExact", "CpIntAtom_CheckExact"], [31, 1, 1, "c.CpIntAtom_Pack", "CpIntAtom_Pack"], [31, 3, 1, "c.CpIntAtom_Type", "CpIntAtom_Type"], [31, 1, 1, "c.CpIntAtom_Unpack", "CpIntAtom_Unpack"], [36, 0, 1, "c.CpLayerObject", "CpLayerObject"], [36, 1, 1, "c.CpLayer_AppendPath", "CpLayer_AppendPath"], [36, 1, 1, "c.CpLayer_Check", "CpLayer_Check"], [36, 1, 1, "c.CpLayer_CheckExact", "CpLayer_CheckExact"], [36, 1, 1, "c.CpLayer_Invalidate", "CpLayer_Invalidate"], [36, 1, 1, "c.CpLayer_New", "CpLayer_New"], [36, 1, 1, "c.CpLayer_SetSequence", "CpLayer_SetSequence"], [36, 3, 1, "c.CpLayer_Type", "CpLayer_Type"], [25, 3, 1, "c.CpModule", "CpModule"], [25, 4, 1, "c.CpModule_SetupType", "CpModule_SetupType"], [24, 1, 1, "c.CpObject_Create", "CpObject_Create"], [24, 1, 1, "c.CpObject_CreateNoArgs", "CpObject_CreateNoArgs"], [24, 1, 1, "c.CpObject_CreateOneArgs", "CpObject_CreateOneArgs"], [38, 0, 1, "c.CpOptionObject", "CpOptionObject"], [38, 1, 1, "c.CpOption_Check", "CpOption_Check"], [38, 1, 1, "c.CpOption_CheckExact", "CpOption_CheckExact"], [38, 3, 1, "c.CpOption_Type", "CpOption_Type"], [41, 1, 1, "c.CpPack", "CpPack"], [32, 0, 1, "c.CpPaddingAtomObject", "CpPaddingAtomObject"], [32, 1, 1, "c.CpPaddingAtom_Pack", "CpPaddingAtom_Pack"], [32, 1, 1, "c.CpPaddingAtom_PackMany", "CpPaddingAtom_PackMany"], [32, 3, 1, "c.CpPaddingAtom_Type", "CpPaddingAtom_Type"], [32, 1, 1, "c.CpPaddingAtom_Unpack", "CpPaddingAtom_Unpack"], [32, 1, 1, "c.CpPaddingAtom_UnpackMany", "CpPaddingAtom_UnpackMany"], [41, 1, 1, "c.CpSizeOf", "CpSizeOf"], [39, 0, 1, "c.CpStateObject", "CpStateObject"], [39, 1, 1, "c.CpState_Check", "CpState_Check"], [39, 1, 1, "c.CpState_CheckExact", "CpState_CheckExact"], [39, 1, 1, "c.CpState_New", "CpState_New"], [39, 1, 1, "c.CpState_Read", "CpState_Read"], [39, 1, 1, "c.CpState_ReadFully", "CpState_ReadFully"], [39, 1, 1, "c.CpState_Seek", "CpState_Seek"], [39, 1, 1, "c.CpState_SetGlobals", "CpState_SetGlobals"], [39, 1, 1, "c.CpState_Tell", "CpState_Tell"], [39, 3, 1, "c.CpState_Type", "CpState_Type"], [39, 1, 1, "c.CpState_Write", "CpState_Write"], [40, 0, 1, "c.CpStructFieldInfoObject", "CpStructFieldInfoObject"], [40, 1, 1, "c.CpStructFieldInfo_Check", "CpStructFieldInfo_Check"], [40, 1, 1, "c.CpStructFieldInfo_CheckExact", "CpStructFieldInfo_CheckExact"], [40, 1, 1, "c.CpStructFieldInfo_New", "CpStructFieldInfo_New"], [40, 3, 1, "c.CpStructFieldInfo_Type", "CpStructFieldInfo_Type"], [40, 1, 1, "c.CpStructModel_Check", "CpStructModel_Check"], [40, 1, 1, "c.CpStructModel_GetStruct", "CpStructModel_GetStruct"], [40, 0, 1, "c.CpStructObject", "CpStructObject"], [40, 1, 1, "c.CpStruct_AddField", "CpStruct_AddField"], [40, 1, 1, "c.CpStruct_AddFieldInfo", "CpStruct_AddFieldInfo"], [40, 1, 1, "c.CpStruct_Check", "CpStruct_Check"], [40, 1, 1, "c.CpStruct_CheckExact", "CpStruct_CheckExact"], [40, 1, 1, "c.CpStruct_GetAnnotations", "CpStruct_GetAnnotations"], [40, 1, 1, "c.CpStruct_HasOption", "CpStruct_HasOption"], [40, 1, 1, "c.CpStruct_New", "CpStruct_New"], [40, 1, 1, "c.CpStruct_ReplaceType", "CpStruct_ReplaceType"], [40, 3, 1, "c.CpStruct_Type", "CpStruct_Type"], [41, 1, 1, "c.CpTypeOf", "CpTypeOf"], [41, 1, 1, "c.CpTypeOf_Common", "CpTypeOf_Common"], [41, 1, 1, "c.CpTypeOf_Field", "CpTypeOf_Field"], [33, 0, 1, "c.CpUnaryExprObject", "CpUnaryExprObject"], [33, 1, 1, "c.CpUnaryExpr_New", "CpUnaryExpr_New"], [33, 3, 1, "c.CpUnaryExpr_Type", "CpUnaryExpr_Type"], [41, 1, 1, "c.CpUnpack", "CpUnpack"], [41, 1, 1, "c._CpPack_EvalLength", "_CpPack_EvalLength"], [24, 4, 1, "c._Cp_Name", "_Cp_Name"], [25, 5, 1, "c._modulestate", "_modulestate"], [25, 1, 1, "c.get_global_module_state", "get_global_module_state"], [25, 1, 1, "c.get_module_state", "get_module_state"], [42, 6, 1, "", "CTX_FIELD"], [42, 6, 1, "", "CTX_INDEX"], [42, 6, 1, "", "CTX_OBJECT"], [42, 6, 1, "", "CTX_OFFSETS"], [42, 6, 1, "", "CTX_PARENT"], [42, 6, 1, "", "CTX_PATH"], [42, 6, 1, "", "CTX_POS"], [42, 6, 1, "", "CTX_STREAM"], [42, 6, 1, "", "CTX_VALUE"], [42, 6, 1, "", "ctx"], [42, 6, 1, "", "parent"], [42, 6, 1, "", "this"]], "CpArch_Check": [[26, 2, 1, "c.CpArch_Check", "op"]], "CpArch_CheckExact": [[26, 2, 1, "c.CpArch_CheckExact", "op"]], "CpAtom_CallPack": [[21, 2, 1, "c.CpAtom_CallPack", "ctx"], [21, 2, 1, "c.CpAtom_CallPack", "name"], [21, 2, 1, "c.CpAtom_CallPack", "o"], [21, 2, 1, "c.CpAtom_CallPack", "self"]], "CpAtom_CallSize": [[21, 2, 1, "c.CpAtom_CallSize", "ctx"], [21, 2, 1, "c.CpAtom_CallSize", "name"], [21, 2, 1, "c.CpAtom_CallSize", "self"]], "CpAtom_CanPack": [[21, 2, 1, "c.CpAtom_CanPack", "o"]], "CpAtom_CanUnpack": [[21, 2, 1, "c.CpAtom_CanUnpack", "o"]], "CpAtom_FastCanPack": [[21, 2, 1, "c.CpAtom_FastCanPack", "o"], [21, 2, 1, "c.CpAtom_FastCanPack", "state"]], "CpAtom_FastCanUnpack": [[21, 2, 1, "c.CpAtom_FastCanUnpack", "o"], [21, 2, 1, "c.CpAtom_FastCanUnpack", "state"]], "CpAtom_FastHasSize": [[21, 2, 1, "c.CpAtom_FastHasSize", "o"], [21, 2, 1, "c.CpAtom_FastHasSize", "state"]], "CpAtom_FastHasType": [[21, 2, 1, "c.CpAtom_FastHasType", "o"], [21, 2, 1, "c.CpAtom_FastHasType", "state"]], "CpAtom_HasSize": [[21, 2, 1, "c.CpAtom_HasSize", "o"]], "CpAtom_HasType": [[21, 2, 1, "c.CpAtom_HasType", "o"]], "CpBinaryExpr_New": [[33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpAdd", "CpBinaryExpr_OpAdd"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpAnd", "CpBinaryExpr_OpAnd"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpBitAnd", "CpBinaryExpr_OpBitAnd"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpBitOr", "CpBinaryExpr_OpBitOr"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpBitXor", "CpBinaryExpr_OpBitXor"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpFloorDiv", "CpBinaryExpr_OpFloorDiv"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpLShift", "CpBinaryExpr_OpLShift"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpMatMul", "CpBinaryExpr_OpMatMul"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpMod", "CpBinaryExpr_OpMod"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpMul", "CpBinaryExpr_OpMul"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpOr", "CpBinaryExpr_OpOr"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpPow", "CpBinaryExpr_OpPow"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpRShift", "CpBinaryExpr_OpRShift"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpSub", "CpBinaryExpr_OpSub"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpTrueDiv", "CpBinaryExpr_OpTrueDiv"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_Op_EQ", "CpBinaryExpr_Op_EQ"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_Op_GE", "CpBinaryExpr_Op_GE"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_Op_GT", "CpBinaryExpr_Op_GT"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_Op_LE", "CpBinaryExpr_Op_LE"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_Op_LT", "CpBinaryExpr_Op_LT"], [33, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_Op_NE", "CpBinaryExpr_Op_NE"], [33, 2, 1, "c.CpBinaryExpr_New", "left"], [33, 2, 1, "c.CpBinaryExpr_New", "op"], [33, 2, 1, "c.CpBinaryExpr_New", "right"]], "CpBoolAtom_Pack": [[27, 2, 1, "c.CpBoolAtom_Pack", "layer"], [27, 2, 1, "c.CpBoolAtom_Pack", "self"], [27, 2, 1, "c.CpBoolAtom_Pack", "value"]], "CpBoolAtom_Unpack": [[27, 2, 1, "c.CpBoolAtom_Unpack", "layer"], [27, 2, 1, "c.CpBoolAtom_Unpack", "self"]], "CpCharAtom_Pack": [[28, 2, 1, "c.CpCharAtom_Pack", "layer"], [28, 2, 1, "c.CpCharAtom_Pack", "self"], [28, 2, 1, "c.CpCharAtom_Pack", "value"]], "CpCharAtom_Unpack": [[28, 2, 1, "c.CpCharAtom_Unpack", "layer"], [28, 2, 1, "c.CpCharAtom_Unpack", "self"]], "CpContextPath_Check": [[35, 2, 1, "c.CpContextPath_Check", "op"]], "CpContextPath_CheckExact": [[35, 2, 1, "c.CpContextPath_CheckExact", "op"]], "CpContextPath_FromString": [[35, 2, 1, "c.CpContextPath_FromString", "path"]], "CpContextPath_New": [[35, 2, 1, "c.CpContextPath_New", "path"]], "CpContext_Check": [[34, 2, 1, "c.CpContext_Check", "op"]], "CpContext_CheckExact": [[34, 2, 1, "c.CpContext_CheckExact", "op"]], "CpEndian_Check": [[26, 2, 1, "c.CpEndian_Check", "op"]], "CpEndian_CheckExact": [[26, 2, 1, "c.CpEndian_CheckExact", "op"]], "CpEndian_IsLittleEndian": [[26, 2, 1, "c.CpEndian_IsLittleEndian", "endian"], [26, 2, 1, "c.CpEndian_IsLittleEndian", "mod"]], "CpFloatAtom_Check": [[29, 2, 1, "c.CpFloatAtom_Check", "op"]], "CpFloatAtom_CheckExact": [[29, 2, 1, "c.CpFloatAtom_CheckExact", "op"]], "CpFloatAtom_Pack": [[29, 2, 1, "c.CpFloatAtom_Pack", "layer"], [29, 2, 1, "c.CpFloatAtom_Pack", "self"], [29, 2, 1, "c.CpFloatAtom_Pack", "value"]], "CpFloatAtom_Unpack": [[29, 2, 1, "c.CpFloatAtom_Unpack", "layer"], [29, 2, 1, "c.CpFloatAtom_Unpack", "self"]], "CpIntAtomObject": [[31, 3, 1, "c.CpIntAtomObject._m_little_endian", "_m_little_endian"], [31, 3, 1, "c.CpIntAtomObject._m_signed", "_m_signed"], [31, 3, 1, "c.CpIntAtomObject.m_byte_count", "m_byte_count"]], "CpIntAtom_Check": [[31, 2, 1, "c.CpIntAtom_Check", "op"]], "CpIntAtom_CheckExact": [[31, 2, 1, "c.CpIntAtom_CheckExact", "op"]], "CpIntAtom_Pack": [[31, 2, 1, "c.CpIntAtom_Pack", "layer"], [31, 2, 1, "c.CpIntAtom_Pack", "self"], [31, 2, 1, "c.CpIntAtom_Pack", "value"]], "CpIntAtom_Unpack": [[31, 2, 1, "c.CpIntAtom_Unpack", "layer"], [31, 2, 1, "c.CpIntAtom_Unpack", "self"]], "CpLayer_AppendPath": [[36, 2, 1, "c.CpLayer_AppendPath", "layer"], [36, 2, 1, "c.CpLayer_AppendPath", "path"]], "CpLayer_Check": [[36, 2, 1, "c.CpLayer_Check", "op"]], "CpLayer_CheckExact": [[36, 2, 1, "c.CpLayer_CheckExact", "op"]], "CpLayer_Invalidate": [[36, 2, 1, "c.CpLayer_Invalidate", "layer"]], "CpLayer_New": [[36, 2, 1, "c.CpLayer_New", "parent"], [36, 2, 1, "c.CpLayer_New", "state"]], "CpLayer_SetSequence": [[36, 2, 1, "c.CpLayer_SetSequence", "greedy"], [36, 2, 1, "c.CpLayer_SetSequence", "layer"], [36, 2, 1, "c.CpLayer_SetSequence", "length"], [36, 2, 1, "c.CpLayer_SetSequence", "sequence"]], "CpObject_Create": [[24, 2, 1, "c.CpObject_Create", "format"], [24, 2, 1, "c.CpObject_Create", "type"]], "CpObject_CreateNoArgs": [[24, 2, 1, "c.CpObject_CreateNoArgs", "type"]], "CpObject_CreateOneArgs": [[24, 2, 1, "c.CpObject_CreateOneArgs", "arg"], [24, 2, 1, "c.CpObject_CreateOneArgs", "type"]], "CpOption_Check": [[38, 2, 1, "c.CpOption_Check", "op"]], "CpOption_CheckExact": [[38, 2, 1, "c.CpOption_CheckExact", "op"]], "CpPack": [[41, 2, 1, "c.CpPack", "atom"], [41, 2, 1, "c.CpPack", "globals"], [41, 2, 1, "c.CpPack", "io"], [41, 2, 1, "c.CpPack", "op"]], "CpPaddingAtom_Pack": [[32, 2, 1, "c.CpPaddingAtom_Pack", "layer"], [32, 2, 1, "c.CpPaddingAtom_Pack", "self"], [32, 2, 1, "c.CpPaddingAtom_Pack", "value"]], "CpPaddingAtom_PackMany": [[32, 2, 1, "c.CpPaddingAtom_PackMany", "layer"], [32, 2, 1, "c.CpPaddingAtom_PackMany", "self"], [32, 2, 1, "c.CpPaddingAtom_PackMany", "value"]], "CpPaddingAtom_Unpack": [[32, 2, 1, "c.CpPaddingAtom_Unpack", "layer"], [32, 2, 1, "c.CpPaddingAtom_Unpack", "self"]], "CpPaddingAtom_UnpackMany": [[32, 2, 1, "c.CpPaddingAtom_UnpackMany", "layer"], [32, 2, 1, "c.CpPaddingAtom_UnpackMany", "self"]], "CpSizeOf": [[41, 2, 1, "c.CpSizeOf", "atom"], [41, 2, 1, "c.CpSizeOf", "globals"]], "CpState_Check": [[39, 2, 1, "c.CpState_Check", "op"]], "CpState_CheckExact": [[39, 2, 1, "c.CpState_CheckExact", "op"]], "CpState_New": [[39, 2, 1, "c.CpState_New", "io"]], "CpState_Read": [[39, 2, 1, "c.CpState_Read", "size"], [39, 2, 1, "c.CpState_Read", "state"]], "CpState_ReadFully": [[39, 2, 1, "c.CpState_ReadFully", "state"]], "CpState_Seek": [[39, 2, 1, "c.CpState_Seek", "pos"], [39, 2, 1, "c.CpState_Seek", "state"], [39, 2, 1, "c.CpState_Seek", "whence"]], "CpState_SetGlobals": [[39, 2, 1, "c.CpState_SetGlobals", "globals"], [39, 2, 1, "c.CpState_SetGlobals", "state"]], "CpState_Tell": [[39, 2, 1, "c.CpState_Tell", "state"]], "CpState_Write": [[39, 2, 1, "c.CpState_Write", "bytes"], [39, 2, 1, "c.CpState_Write", "state"]], "CpStructFieldInfo_Check": [[40, 2, 1, "c.CpStructFieldInfo_Check", "op"]], "CpStructFieldInfo_CheckExact": [[40, 2, 1, "c.CpStructFieldInfo_CheckExact", "op"]], "CpStructFieldInfo_New": [[40, 2, 1, "c.CpStructFieldInfo_New", "field"]], "CpStructModel_Check": [[40, 2, 1, "c.CpStructModel_Check", "m"], [40, 2, 1, "c.CpStructModel_Check", "s"]], "CpStructModel_GetStruct": [[40, 2, 1, "c.CpStructModel_GetStruct", "m"], [40, 2, 1, "c.CpStructModel_GetStruct", "s"]], "CpStruct_AddField": [[40, 2, 1, "c.CpStruct_AddField", "exclude"], [40, 2, 1, "c.CpStruct_AddField", "field"], [40, 2, 1, "c.CpStruct_AddField", "o"]], "CpStruct_AddFieldInfo": [[40, 2, 1, "c.CpStruct_AddFieldInfo", "info"], [40, 2, 1, "c.CpStruct_AddFieldInfo", "o"]], "CpStruct_Check": [[40, 2, 1, "c.CpStruct_Check", "op"]], "CpStruct_CheckExact": [[40, 2, 1, "c.CpStruct_CheckExact", "op"]], "CpStruct_GetAnnotations": [[40, 2, 1, "c.CpStruct_GetAnnotations", "eval"], [40, 2, 1, "c.CpStruct_GetAnnotations", "self"]], "CpStruct_HasOption": [[40, 2, 1, "c.CpStruct_HasOption", "option"], [40, 2, 1, "c.CpStruct_HasOption", "struct_"]], "CpStruct_New": [[40, 2, 1, "c.CpStruct_New", "model"]], "CpStruct_ReplaceType": [[40, 2, 1, "c.CpStruct_ReplaceType", "name"], [40, 2, 1, "c.CpStruct_ReplaceType", "struct_"], [40, 2, 1, "c.CpStruct_ReplaceType", "type"]], "CpTypeOf": [[41, 2, 1, "c.CpTypeOf", "value"]], "CpTypeOf_Common": [[41, 2, 1, "c.CpTypeOf_Common", "op"]], "CpTypeOf_Field": [[41, 2, 1, "c.CpTypeOf_Field", "field"]], "CpUnaryExpr_New": [[33, 3, 1, "c.CpUnaryExpr_New.CpUnaryExpr_OpNeg", "CpUnaryExpr_OpNeg"], [33, 3, 1, "c.CpUnaryExpr_New.CpUnaryExpr_OpNot", "CpUnaryExpr_OpNot"], [33, 3, 1, "c.CpUnaryExpr_New.CpUnaryExpr_OpPos", "CpUnaryExpr_OpPos"], [33, 2, 1, "c.CpUnaryExpr_New", "op"], [33, 2, 1, "c.CpUnaryExpr_New", "value"]], "CpUnpack": [[41, 2, 1, "c.CpUnpack", "atom"], [41, 2, 1, "c.CpUnpack", "globals"], [41, 2, 1, "c.CpUnpack", "io"]], "_CpPack_EvalLength": [[41, 2, 1, "c._CpPack_EvalLength", "layer"], [41, 2, 1, "c._CpPack_EvalLength", "length"], [41, 2, 1, "c._CpPack_EvalLength", "seq_greedy"], [41, 2, 1, "c._CpPack_EvalLength", "seq_length"], [41, 2, 1, "c._CpPack_EvalLength", "size"]], "_modulestate": [[25, 3, 1, "c._modulestate.Any_Type", "Any_Type"], [25, 3, 1, "c._modulestate.BytesIO_Type", "BytesIO_Type"], [25, 3, 1, "c._modulestate.List_Type", "List_Type"], [25, 3, 1, "c._modulestate.Union_Type", "Union_Type"], [25, 3, 1, "c._modulestate.cp_arch__host", "cp_arch__host"], [25, 3, 1, "c._modulestate.cp_endian__big", "cp_endian__big"], [25, 3, 1, "c._modulestate.cp_endian__little", "cp_endian__little"], [25, 3, 1, "c._modulestate.cp_endian__native", "cp_endian__native"], [25, 3, 1, "c._modulestate.cp_option__discard_const", "cp_option__discard_const"], [25, 3, 1, "c._modulestate.cp_option__discard_unnamed", "cp_option__discard_unnamed"], [25, 3, 1, "c._modulestate.cp_option__dynamic", "cp_option__dynamic"], [25, 3, 1, "c._modulestate.cp_option__eval", "cp_option__eval"], [25, 3, 1, "c._modulestate.cp_option__global_field_options", "cp_option__global_field_options"], [25, 3, 1, "c._modulestate.cp_option__global_struct_options", "cp_option__global_struct_options"], [25, 3, 1, "c._modulestate.cp_option__keep_position", "cp_option__keep_position"], [25, 3, 1, "c._modulestate.cp_option__replace_types", "cp_option__replace_types"], [25, 3, 1, "c._modulestate.cp_option__sequential", "cp_option__sequential"], [25, 3, 1, "c._modulestate.cp_option__slots", "cp_option__slots"], [25, 3, 1, "c._modulestate.cp_option__union", "cp_option__union"], [25, 3, 1, "c._modulestate.str___annotations__", "str___annotations__"], [25, 3, 1, "c._modulestate.str___dict__", "str___dict__"], [25, 3, 1, "c._modulestate.str___match_args__", "str___match_args__"], [25, 3, 1, "c._modulestate.str___mro__", "str___mro__"], [25, 3, 1, "c._modulestate.str___pack__", "str___pack__"], [25, 3, 1, "c._modulestate.str___pack_many__", "str___pack_many__"], [25, 3, 1, "c._modulestate.str___qualname__", "str___qualname__"], [25, 3, 1, "c._modulestate.str___size__", "str___size__"], [25, 3, 1, "c._modulestate.str___slots__", "str___slots__"], [25, 3, 1, "c._modulestate.str___struct__", "str___struct__"], [25, 3, 1, "c._modulestate.str___type__", "str___type__"], [25, 3, 1, "c._modulestate.str___unpack__", "str___unpack__"], [25, 3, 1, "c._modulestate.str___unpack_many__", "str___unpack_many__"], [25, 3, 1, "c._modulestate.str___weakref__", "str___weakref__"], [25, 3, 1, "c._modulestate.str_builder_process", "str_builder_process"], [25, 3, 1, "c._modulestate.str_bytesio_getvalue", "str_bytesio_getvalue"], [25, 3, 1, "c._modulestate.str_close", "str_close"], [25, 3, 1, "c._modulestate.str_ctx__getattr", "str_ctx__getattr"], [25, 3, 1, "c._modulestate.str_ctx__root", "str_ctx__root"], [25, 3, 1, "c._modulestate.str_path_delim", "str_path_delim"], [25, 3, 1, "c._modulestate.str_pattern_match", "str_pattern_match"], [25, 3, 1, "c._modulestate.str_read", "str_read"], [25, 3, 1, "c._modulestate.str_seek", "str_seek"], [25, 3, 1, "c._modulestate.str_start", "str_start"], [25, 3, 1, "c._modulestate.str_strict", "str_strict"], [25, 3, 1, "c._modulestate.str_tell", "str_tell"], [25, 3, 1, "c._modulestate.str_write", "str_write"]], "caterpillar": [[19, 12, 0, "-", "registry"]], "caterpillar.abc": [[6, 6, 1, "", "STRUCT_FIELD"], [6, 7, 1, "", "_ContainsStruct"], [6, 7, 1, "", "_ContextLambda"], [6, 7, 1, "", "_ContextLike"], [6, 7, 1, "", "_EnumLike"], [6, 7, 1, "", "_StructLike"], [6, 7, 1, "", "_SupportsPack"], [6, 7, 1, "", "_SupportsSize"], [6, 7, 1, "", "_SupportsUnpack"], [6, 7, 1, "", "_Switch"], [6, 8, 1, "", "getstruct"], [6, 8, 1, "", "hasstruct"], [6, 8, 1, "", "typeof"]], "caterpillar.byteorder": [[7, 7, 1, "", "Arch"], [7, 6, 1, "", "BYTEORDER_FIELD"], [7, 6, 1, "", "BigEndian"], [7, 7, 1, "", "ByteOrder"], [7, 6, 1, "", "LittleEndian"], [7, 6, 1, "", "Native"], [7, 6, 1, "", "NetEndian"], [7, 6, 1, "", "SysNative"], [7, 8, 1, "", "byteorder"], [7, 6, 1, "", "system_arch"]], "caterpillar.byteorder.ByteOrder": [[7, 7, 1, "", "Alignment"], [7, 7, 1, "", "Size"], [7, 9, 1, "", "apply"]], "caterpillar.c": [[9, 7, 1, "", "Int"], [9, 10, 1, "", "i128"], [9, 10, 1, "", "i16"], [9, 10, 1, "", "i24"], [9, 10, 1, "", "i32"], [9, 10, 1, "", "i64"], [9, 10, 1, "", "i8"], [9, 10, 1, "", "u128"], [9, 10, 1, "", "u16"], [9, 10, 1, "", "u24"], [9, 10, 1, "", "u32"], [9, 10, 1, "", "u64"], [9, 10, 1, "", "u8"]], "caterpillar.c.Int": [[9, 9, 1, "", "__init__"], [9, 9, 1, "", "__repr__"], [9, 9, 1, "", "__size__"], [9, 9, 1, "", "__type__"], [9, 6, 1, "", "little_endian"], [9, 6, 1, "", "nbits"], [9, 6, 1, "", "nbytes"], [9, 6, 1, "", "signed"]], "caterpillar.context": [[8, 7, 1, "", "BinaryExpression"], [8, 6, 1, "", "CTX_FIELD"], [8, 6, 1, "", "CTX_INDEX"], [8, 6, 1, "", "CTX_OBJECT"], [8, 6, 1, "", "CTX_OFFSETS"], [8, 6, 1, "", "CTX_PARENT"], [8, 6, 1, "", "CTX_PATH"], [8, 6, 1, "", "CTX_POS"], [8, 6, 1, "", "CTX_SEQ"], [8, 6, 1, "", "CTX_STREAM"], [8, 6, 1, "", "CTX_VALUE"], [8, 7, 1, "", "ConditionContext"], [8, 7, 1, "", "Context"], [8, 7, 1, "", "ContextLength"], [8, 7, 1, "", "ContextPath"], [8, 7, 1, "", "ExprMixin"], [8, 7, 1, "", "UnaryExpression"], [8, 6, 1, "", "ctx"], [8, 6, 1, "", "parent"], [8, 6, 1, "", "this"]], "caterpillar.exception": [[10, 7, 1, "", "DelegationError"], [10, 7, 1, "", "DynamicSizeError"], [10, 7, 1, "", "InvalidValueError"], [10, 7, 1, "", "OptionError"], [10, 7, 1, "", "Stop"], [10, 7, 1, "", "StreamError"], [10, 7, 1, "", "StructException"], [10, 7, 1, "", "UnsupportedOperation"], [10, 7, 1, "", "ValidationError"]], "caterpillar.fields": [[13, 7, 1, "", "Encrypted"]], "caterpillar.fields.Encrypted": [[13, 9, 1, "", "algorithm"], [13, 9, 1, "", "get_instance"], [13, 9, 1, "", "mode"], [13, 9, 1, "", "pack_single"], [13, 9, 1, "", "padding"], [13, 9, 1, "", "unpack_single"]], "caterpillar.model": [[17, 7, 1, "", "BitField"], [17, 7, 1, "", "BitFieldGroup"], [17, 7, 1, "", "Sequence"], [17, 7, 1, "", "Struct"], [17, 7, 1, "", "TemplateTypeVar"], [17, 7, 1, "", "UnionHook"], [17, 8, 1, "", "bitfield"], [17, 8, 1, "", "derive"], [17, 8, 1, "", "istemplate"], [17, 8, 1, "", "pack"], [17, 8, 1, "", "pack_file"], [17, 8, 1, "", "pack_into"], [17, 8, 1, "", "struct"], [17, 8, 1, "", "template"], [17, 8, 1, "", "union"], [17, 8, 1, "", "unpack"], [17, 8, 1, "", "unpack_file"]], "caterpillar.model.Sequence": [[17, 9, 1, "", "add_field"], [17, 6, 1, "", "arch"], [17, 9, 1, "", "del_field"], [17, 6, 1, "", "field_options"], [17, 6, 1, "", "fields"], [17, 9, 1, "", "has_option"], [17, 6, 1, "", "model"], [17, 6, 1, "", "options"], [17, 6, 1, "", "order"]], "caterpillar.model.TemplateTypeVar": [[17, 6, 1, "", "field_kwds"], [17, 6, 1, "", "name"]], "caterpillar.model.UnionHook": [[17, 6, 1, "", "max_size"], [17, 6, 1, "", "struct"]], "caterpillar.options": [[18, 6, 1, "", "F_DYNAMIC"], [18, 6, 1, "", "F_KEEP_POSITION"], [18, 6, 1, "", "F_OFFSET_OVERRIDE"], [18, 6, 1, "", "F_SEQUENTIAL"], [18, 7, 1, "", "Flag"], [18, 10, 1, "", "O_ARRAY_FACTORY"], [18, 10, 1, "", "S_DISCARD_CONST"], [18, 10, 1, "", "S_DISCARD_UNNAMED"], [18, 10, 1, "", "S_EVAL_ANNOTATIONS"], [18, 10, 1, "", "S_REPLACE_TYPES"], [18, 10, 1, "", "S_SLOTS"], [18, 10, 1, "", "S_UNION"], [18, 8, 1, "", "configure"], [18, 8, 1, "", "get_flag"], [18, 8, 1, "", "get_flags"], [18, 8, 1, "", "has_flag"], [18, 8, 1, "", "set_field_flags"], [18, 8, 1, "", "set_struct_flags"], [18, 8, 1, "", "set_union_flags"]], "caterpillar.options.Flag": [[18, 6, 1, "", "name"], [18, 6, 1, "", "value"]], "caterpillar.py": [[11, 7, 1, "", "Bytes"], [12, 8, 1, "", "Bz2Compressed"], [11, 7, 1, "", "CString"], [14, 7, 1, "", "Chain"], [12, 7, 1, "", "Compressed"], [11, 7, 1, "", "Computed"], [11, 7, 1, "", "Const"], [11, 7, 1, "", "ConstBytes"], [11, 7, 1, "", "ConstString"], [14, 7, 1, "", "ElseIf"], [11, 7, 1, "", "Enum"], [14, 7, 1, "", "Field"], [14, 7, 1, "", "FieldMixin"], [14, 7, 1, "", "FieldStruct"], [11, 7, 1, "", "FormatField"], [14, 7, 1, "", "If"], [11, 7, 1, "", "Int"], [12, 8, 1, "", "LZMACompressed"], [12, 8, 1, "", "LZOCompressed"], [11, 7, 1, "", "Memory"], [11, 6, 1, "", "Pass"], [11, 7, 1, "", "Prefixed"], [11, 7, 1, "", "String"], [11, 7, 1, "", "Transformer"], [11, 7, 1, "", "UInt"], [11, 7, 1, "", "VarInt"], [12, 8, 1, "", "ZLibCompressed"], [11, 6, 1, "", "boolean"], [11, 6, 1, "", "char"], [11, 6, 1, "", "float16"], [11, 6, 1, "", "float32"], [11, 6, 1, "", "float64"], [11, 6, 1, "", "int16"], [11, 6, 1, "", "int32"], [11, 6, 1, "", "int64"], [11, 6, 1, "", "int8"], [11, 6, 1, "", "padding"], [11, 6, 1, "", "size_t"], [11, 6, 1, "", "ssize_t"], [11, 6, 1, "", "uint16"], [11, 6, 1, "", "uint32"], [11, 6, 1, "", "uint64"], [11, 6, 1, "", "uint8"], [11, 6, 1, "", "vint"], [11, 6, 1, "", "void_ptr"]], "caterpillar.py.Bytes": [[11, 9, 1, "", "unpack_single"]], "caterpillar.py.CString": [[11, 9, 1, "", "pack_single"], [11, 9, 1, "", "unpack_single"]], "caterpillar.py.Chain": [[14, 9, 1, "", "__and__"], [14, 9, 1, "", "__init__"], [14, 9, 1, "", "__rand__"], [14, 9, 1, "", "__size__"], [14, 9, 1, "", "__type__"], [14, 11, 1, "", "head"], [14, 9, 1, "", "pack_single"], [14, 11, 1, "", "tail"], [14, 9, 1, "", "unpack_single"]], "caterpillar.py.Compressed": [[12, 9, 1, "", "decode"], [12, 9, 1, "", "encode"]], "caterpillar.py.Computed": [[11, 9, 1, "", "pack_single"], [11, 9, 1, "", "unpack_single"]], "caterpillar.py.Const": [[11, 9, 1, "", "decode"], [11, 9, 1, "", "encode"]], "caterpillar.py.Enum": [[11, 9, 1, "", "decode"], [11, 9, 1, "", "encode"]], "caterpillar.py.Field": [[14, 6, 1, "", "amount"], [14, 6, 1, "", "arch"], [14, 6, 1, "", "bits"], [14, 6, 1, "", "condition"], [14, 6, 1, "", "default"], [14, 6, 1, "", "flags"], [14, 9, 1, "", "get_offset"], [14, 9, 1, "", "get_struct"], [14, 9, 1, "", "get_type"], [14, 9, 1, "", "has_condition"], [14, 9, 1, "", "has_flag"], [14, 9, 1, "", "is_enabled"], [14, 9, 1, "", "is_seq"], [14, 9, 1, "", "length"], [14, 6, 1, "", "offset"], [14, 6, 1, "", "options"], [14, 6, 1, "", "order"], [14, 6, 1, "", "struct"]], "caterpillar.py.FieldStruct": [[14, 6, 1, "", "__bits__"], [14, 6, 1, "", "__byteorder__"], [14, 9, 1, "", "__pack__"], [14, 9, 1, "", "__repr__"], [14, 9, 1, "", "__unpack__"], [14, 9, 1, "", "pack_seq"], [14, 9, 1, "", "pack_single"], [14, 9, 1, "", "unpack_seq"], [14, 9, 1, "", "unpack_single"]], "caterpillar.py.FormatField": [[11, 9, 1, "", "is_padding"], [11, 9, 1, "", "pack_seq"], [11, 9, 1, "", "pack_single"], [11, 6, 1, "", "text"], [11, 6, 1, "", "ty"], [11, 9, 1, "", "unpack_seq"], [11, 9, 1, "", "unpack_single"]], "caterpillar.py.Int": [[11, 9, 1, "", "pack_single"], [11, 9, 1, "", "unpack_single"]], "caterpillar.py.Memory": [[11, 9, 1, "", "pack_single"], [11, 9, 1, "", "unpack_single"]], "caterpillar.py.Prefixed": [[11, 9, 1, "", "pack_single"], [11, 9, 1, "", "unpack_single"]], "caterpillar.py.String": [[11, 9, 1, "", "unpack_single"]], "caterpillar.py.Transformer": [[11, 9, 1, "", "decode"], [11, 9, 1, "", "encode"], [11, 9, 1, "", "pack_single"], [11, 9, 1, "", "unpack_single"]], "caterpillar.py.VarInt": [[11, 9, 1, "", "pack_single"], [11, 9, 1, "", "unpack_single"]], "caterpillar.registry": [[19, 7, 1, "", "TypeConverter"], [19, 8, 1, "", "to_struct"]], "caterpillar.registry.TypeConverter": [[19, 9, 1, "", "convert"], [19, 9, 1, "", "matches"]], "class": [[42, 6, 1, "", "__struct__"], [42, 6, 1, "", "__template__"]], "examples.formats.nibarchive.object": [[42, 7, 1, "", "NIBHeader"]], "examples.formats.nibarchive.object.NIBHeader.NIBHeader": [[42, 6, 1, "", "magic"]], "field": [[45, 8, 1, "", "__ior__"], [45, 8, 1, "", "__ixor__"], [42, 6, 1, "", "__name__"], [45, 8, 1, "", "__or__"], [45, 8, 1, "", "__xor__"]], "get_module_state": [[25, 2, 1, "c.get_module_state", "module"]], "object": [[42, 9, 1, "", "__bits__"], [42, 6, 1, "", "__byteorder__"], [42, 8, 1, "", "__call__"], [42, 9, 1, "", "__pack__"], [42, 9, 1, "", "__set_byteorder__"], [42, 9, 1, "", "__size__"], [42, 9, 1, "", "__type__"], [42, 9, 1, "", "__unpack__"]], "path": [[45, 8, 1, "", "__call__"], [45, 8, 1, "", "__getitem__"]], "sequence": [[45, 8, 1, "", "__add__"], [45, 8, 1, "", "__iadd__"], [45, 8, 1, "", "__isub__"], [45, 8, 1, "", "__sub__"]], "struct": [[45, 8, 1, "", "__and__"], [45, 8, 1, "", "__floordiv__"], [45, 8, 1, "", "__getitem__"], [45, 8, 1, "", "__matmul__"], [45, 8, 1, "", "__rshift__"], [45, 8, 1, "", "__rsub__"]]}, "objnames": {"0": ["c", "type", "C type"], "1": ["c", "function", "C function"], "2": ["c", "functionParam", "C function parameter"], "3": ["c", "member", "C member"], "4": ["c", "macro", "C macro"], "5": ["c", "struct", "C struct"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "class", "Python class"], "8": ["py", "function", "Python function"], "9": ["py", "method", "Python method"], "10": ["py", "data", "Python data"], "11": ["py", "property", "Python property"], "12": ["py", "module", "Python module"]}, "objtypes": {"0": "c:type", "1": "c:function", "2": "c:functionParam", "3": "c:member", "4": "c:macro", "5": "c:struct", "6": "py:attribute", "7": "py:class", "8": "py:function", "9": "py:method", "10": "py:data", "11": "py:property", "12": "py:module"}, "terms": {"": [5, 14, 18, 21, 23, 40, 44, 46, 47, 48, 49], "0": [7, 9, 18, 21, 25, 26, 27, 28, 29, 31, 32, 33, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48], "0008136422": 44, "00100000": 46, "002179": 31, "0021923946": 44, "0031346225": 44, "0033772090": 44, "0034705456": 44, "0037924385": 44, "0044497086": 44, "0051257158": 44, "0063716554": 44, "0078892448": 44, "0085910592": 44, "0097203362": 44, "0098681578": 44, "0110391153": 44, "0125181926": 44, "0126670091": 44, "0145166325": 44, "015825": 29, "0260070809": 44, "036922": 27, "04": 44, "05": 44, "0555872261": 44, "058688": 29, "0898006975": 44, "0b01110000": 44, "0b10000000": 44, "0x": 4, "0x00": 11, "0x0000": 44, "0x00000204fdfa4411": 47, "0x0004": 44, "0x0005": 44, "0x0008": 44, "0x1233": 45, "0x1234": [45, 46], "0x4": 46, "0xbeef": 47, "0xff": 18, "0xff00ff00": 42, "1": [7, 9, 11, 18, 21, 26, 27, 28, 29, 31, 32, 33, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48], "10": [4, 18, 33, 44, 45, 47], "100": [45, 47], "100000": 47, "100239": 32, "1024": 11, "10608": 18, "109347": 27, "11": 33, "1157": 18, "12": [5, 33, 44], "120": 18, "1232": 18, "128": [3, 9], "128918": 29, "13": [33, 44, 46], "137714": 28, "14": [33, 44], "14240": 18, "15": [23, 33, 42, 44], "16": [9, 11, 33, 42, 44, 46], "166108": 32, "17": 33, "1704": 18, "18": 33, "19": [33, 45], "1929": 44, "1937": 44, "2": [8, 9, 14, 18, 27, 28, 29, 31, 32, 33, 42, 44, 46, 47, 48], "20": [33, 44], "211655": 29, "2305ca5": 44, "234711": 29, "235666": 32, "24": [9, 44, 47], "241862": 29, "255": 18, "258163462": 46, "26": 23, "26520": 18, "267463": 32, "3": [5, 23, 28, 29, 31, 32, 33, 42, 44, 45, 46, 47, 48], "311959": 29, "32": [8, 9, 11, 14], "33": [14, 44], "34": 14, "36": 44, "384": 18, "3848": 18, "4": [4, 31, 32, 33, 44, 46, 47], "40": 47, "4278255360": 42, "48": 47, "5": [33, 46, 47], "526": 40, "5433": 18, "581962": 31, "587046": 31, "6": 33, "614697": 32, "6152": 18, "64": [7, 9, 11, 44], "652622": 32, "65280": 42, "7": [18, 33, 44], "707753": 31, "712": 18, "716998": 27, "721222": 28, "738574": 29, "7520": 18, "76543210": 46, "782663": 31, "8": [9, 11, 33, 42, 44, 45, 47], "813911": 28, "815762": 27, "815902": 31, "845472": 32, "866999": 31, "883599": 27, "8859": 47, "9": [18, 33], "926041": 31, "936": 18, "948262": 28, "960612": 28, "963965": 28, "968687": 32, "97": 44, "999292": 27, "A": [6, 7, 8, 9, 11, 12, 14, 17, 18, 19, 31, 33, 39, 40, 42, 45, 46, 47], "And": 48, "As": [5, 21, 40, 42, 46], "By": [9, 18, 22, 42, 44, 46, 48], "For": [9, 18, 19, 21, 22, 24, 39, 40, 42, 45, 46, 47, 49], "If": [1, 3, 4, 5, 11, 14, 15, 18, 19, 40, 42, 43, 45, 46, 47, 48], "In": [14, 18, 40, 42, 44, 45, 46, 47, 48], "It": [4, 5, 6, 11, 17, 18, 21, 22, 25, 39, 40, 41, 42, 44, 45, 46, 47, 48], "Its": [42, 45, 46, 47], "No": [4, 42], "Not": 47, "OR": [14, 45], "One": 42, "That": [42, 47, 48], "Thats": 46, "The": [6, 7, 8, 9, 11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49], "Their": 42, "There": [4, 5, 21, 23, 40, 42, 44, 46], "These": [9, 17, 42, 47], "To": [9, 17, 18, 23, 40, 42, 43, 45, 46, 47, 48], "Will": 42, "With": [18, 42, 44, 45, 47, 48], "_": [4, 14, 18, 19, 42, 44, 46, 47], "_1": 46, "_123": 42, "_2": 46, "_3": 46, "_4": 46, "_5": 46, "_6": 46, "__4be4f2562b65393cformattempl": 42, "___": 46, "__add__": [42, 45], "__and__": [14, 45], "__annotations__": [17, 18, 25, 40], "__bits__": [14, 42], "__byteorder__": [7, 14, 42], "__call__": [42, 45], "__class_getitem__": 47, "__context_getattr__": [22, 25], "__default": 6, "__dict__": 25, "__eq__": 40, "__floordiv__": 45, "__future__": [18, 42], "__getitem__": 45, "__hash__": 40, "__iadd__": 45, "__init__": [9, 14, 17], "__ior__": 45, "__isub__": 45, "__ixor__": 45, "__main__": 42, "__match_args__": 25, "__matmul__": 45, "__model_init__": 17, "__model_setattr__": 17, "__mro__": 25, "__name__": 42, "__or__": 45, "__pack__": [14, 21, 25, 42], "__pack_many__": 25, "__qualname__": 25, "__rand__": 14, "__repr__": [9, 14, 40], "__rshift__": 45, "__rsub__": 45, "__set_byteorder__": 42, "__setattr__": 17, "__size__": [9, 14, 21, 25, 42], "__slots__": [18, 25], "__struct__": [6, 25, 40, 42, 47], "__sub__": 45, "__template__": 42, "__type__": [9, 14, 21, 25, 42], "__unpack__": [14, 21, 25, 42, 46], "__unpack_many__": 25, "__weakref__": 25, "__xor__": 45, "_arch": 46, "_argtyp": 13, "_c": [24, 31], "_codemodulest": 21, "_compressor": 12, "_containsstruct": [6, 12, 17], "_contextlambda": [6, 8, 11, 12, 13, 14, 42, 45], "_contextlik": [6, 11, 12, 13, 14], "_coremodulest": [21, 40], "_cp_name": 24, "_cppack_evallength": 41, "_enumlik": [6, 11], "_exampl": 23, "_field": [8, 42], "_greedytyp": [13, 14, 45], "_index": [8, 42], "_infix_": 46, "_io": [8, 42], "_is_seq": 8, "_m_little_endian": 31, "_m_sign": 31, "_member_map_": 11, "_modulest": [25, 26], "_obj": [8, 42, 45], "_offset": [8, 42], "_parent": [8, 42], "_path": [8, 42], "_po": [8, 42], "_prefixedtyp": 45, "_richcmp": 33, "_strucklik": 19, "_structlik": [6, 11, 12, 13, 14, 17, 19, 42], "_supportspack": 6, "_supportss": 6, "_supportsunpack": [6, 17], "_switch": [6, 14], "_valu": [8, 42, 45], "_value2member_map_": 11, "abc": [6, 11], "abcd": 42, "abil": 48, "abl": [13, 44, 45, 49], "about": [4, 15, 25, 42, 46, 48], "abov": [21, 41, 42, 48], "absenc": 42, "absolut": 42, "abstract": [11, 14, 16, 21, 43], "accept": 45, "access": [6, 8, 22, 31, 34, 39, 42, 45, 47, 48], "accordingli": 42, "accumul": [27, 28, 29, 31, 32], "achiev": [18, 42], "acknowledg": 44, "acquir": 46, "act": [11, 42, 45], "action": [9, 47], "activ": 42, "actual": [14, 42, 44, 47], "ad": [0, 9, 14, 18, 42, 45, 46, 47], "adapt": [17, 42, 48], "add": [1, 5, 17, 18, 40, 42, 44, 46, 47, 48], "add_field": 17, "addit": [5, 11, 13, 14, 17, 18, 19, 40, 42, 46, 47, 48], "addition": [4, 42, 44, 47], "address": 44, "adjust": 4, "advanc": [47, 48, 49], "advantag": 44, "advis": [42, 44], "affect": [45, 46, 47], "after": [14, 44, 45, 48], "afterward": [42, 45], "again": [5, 42, 47], "against": [19, 47], "agnost": 42, "aim": [42, 44], "algo_arg": 13, "algorithm": [12, 13], "align": 7, "all": [4, 5, 10, 15, 17, 18, 21, 22, 25, 40, 42, 44, 45, 46, 47, 48], "allow": [6, 10, 14, 42, 46, 47], "almost": [9, 45], "alon": 46, "along": 42, "alreadi": [19, 40, 42, 45, 46], "also": [1, 4, 9, 17, 18, 34, 42, 44, 45, 46, 47, 48], "alter": [14, 18, 40, 42, 45, 46], "altern": [4, 21, 45], "although": [9, 40, 41, 42, 46], "alwai": [19, 39, 40, 42, 47], "amazingfeatur": 1, "amd64": 44, "amount": [7, 14, 18, 39, 45], "an": [2, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 19, 21, 23, 24, 26, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49], "analyz": 18, "ancillari": 46, "ani": [1, 6, 8, 11, 12, 13, 14, 17, 18, 19, 39, 42, 45, 46, 47], "annot": [4, 14, 16, 18, 40, 42, 44, 45, 47, 48, 49], "anonym": 42, "anoth": [7, 14, 42, 45, 47, 48], "answer": 4, "any_typ": 25, "anywher": 42, "api": [2, 4, 9, 42, 46, 47, 49], "append": [24, 36], "appli": [4, 7, 8, 17, 18, 23, 42, 45, 46, 47, 48], "applic": [42, 45, 47, 48, 49], "approach": [40, 42, 47, 49], "appropri": 42, "approv": 5, "approxim": 44, "ar": [4, 5, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 31, 40, 42, 43, 44, 45, 46, 47, 48], "arch": [7, 14, 17, 25, 37, 42, 43, 48], "architectur": [14, 16, 17, 42, 46, 48], "arg": [6, 13, 17, 24], "argument": [6, 13, 17, 19, 24, 33, 40, 42, 45, 46, 48], "arm": 49, "around": [40, 44], "arrai": [4, 18, 42, 44, 45, 46, 48, 49], "ascii": 47, "asizeof": 18, "ask": 1, "aspect": [42, 44], "assert": [9, 44], "assign": [14, 42, 44, 46], "associ": [14, 18, 42, 47, 48], "assum": [23, 42, 48], "atoffset": 9, "atom": [20, 37, 41, 43, 47, 48], "attach": [18, 42], "attempt": [10, 42], "attr": 18, "attribut": [6, 11, 14, 16, 17, 18, 31, 34, 40, 42, 45, 46, 48], "audio": 18, "auto": 47, "autoclass": 42, "autodoc": 42, "autodoc_member_ord": 48, "automat": [4, 8, 14, 42, 44, 46, 47, 48], "avail": [4, 9, 42, 44, 48], "avoid": 48, "awar": [18, 47], "b": [1, 4, 8, 9, 11, 14, 18, 31, 42, 44, 45, 46, 47, 48], "b1": 44, "b3": 44, "b4": 44, "back": [45, 46], "bahaviour": 46, "bar": [4, 17, 22, 42, 45, 46], "base": [4, 8, 9, 10, 14, 16, 18, 21, 31, 35, 40, 42, 44, 46, 47], "baseformat": 42, "basic": [15, 42, 46, 48, 49], "baz": [4, 17, 42, 45, 46], "be_varint": 47, "becaus": [17, 18, 40, 42, 45, 46, 47], "becom": 48, "been": [4, 14, 31, 42, 44, 45, 47], "befor": [17, 18, 21, 23, 41, 42, 46, 47], "begin": [14, 42], "behav": [42, 46], "behavior": [14, 42, 45, 46], "behaviour": [11, 18, 45, 47], "being": [42, 44, 47], "below": [9, 31, 33, 42, 44, 45, 46], "benchmark": [31, 44], "benefici": 44, "besid": 47, "beta": 42, "better": 1, "between": [40, 42, 44], "beyond": 47, "bi": 46, "big": [4, 7, 9, 11, 31, 48], "big_endian": [4, 9, 47, 48], "bigendian": [7, 42, 44, 46, 47, 48], "biggest": 44, "binari": [4, 6, 8, 9, 11, 37, 44, 45, 46, 47, 48, 49], "binaryexpress": 8, "bit": [7, 9, 11, 14, 42, 44, 45, 46, 47], "bitfield": [3, 17, 44, 45, 49], "bitfieldgroup": [17, 42], "bits8": 44, "bitsinteg": 44, "bitstruct": 44, "blob": [44, 46], "block": [13, 44, 48], "blockfield": 44, "blueprint": 42, "bodi": 46, "bool": [4, 6, 8, 9, 11, 14, 17, 18, 19, 30, 37, 41], "bool1": 44, "bool_t": 3, "boolatom": 27, "boolean": [3, 8, 11, 14, 42, 45, 47], "both": 4, "bound": [17, 46, 47], "boundari": 7, "box": 5, "brace": 47, "branch": [1, 47], "break": 47, "breakdown": 46, "breathtak": 47, "bring": [44, 46], "buffer": 17, "build": [14, 23, 42, 44, 47], "builder": [4, 46], "built": [42, 44, 47], "burn": 44, "butterfli": 44, "bysourc": 48, "byte": [3, 7, 9, 12, 14, 15, 17, 18, 31, 39, 42, 44, 45, 46, 48, 49], "byteord": [9, 14, 16, 17, 47], "byteorder_field": 7, "bytesio_typ": 25, "bz2": [12, 47], "bz2compress": 12, "c": [2, 4, 5, 9, 11, 18, 24, 25, 27, 28, 29, 31, 32, 34, 39, 40, 42, 46, 47, 48], "c_extens": 23, "cach": [17, 21], "caf": [18, 44], "cafaudioformat": 44, "cafchunk": 44, "cafchunkhead": 44, "cafdata": 44, "cafpackett": 44, "cafstringschunk": 44, "calcul": [9, 14, 21, 42, 47], "call": [10, 17, 18, 21, 27, 28, 29, 31, 32, 33, 40, 42, 44, 45, 46, 47], "callabl": [8, 12, 17, 19, 42, 45], "can": [1, 4, 5, 6, 9, 10, 11, 14, 17, 18, 21, 31, 40, 41, 42, 44, 45, 46, 47, 48], "candid": 5, "capabl": [21, 42], "capi": [4, 43], "captur": 42, "case": [9, 40, 42, 44, 45, 46, 47], "categori": 42, "caterpillar": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 42, 43, 45, 46, 47, 48, 49], "catom": 23, "caus": 46, "caution": [18, 42, 44], "ccaterpillar": 5, "certain": [45, 47], "ch": [7, 11], "chain": [14, 15, 42, 45, 49], "challeng": [42, 46], "chang": [1, 21, 42, 43, 45, 46, 47, 48], "changelog": [2, 4], "chapter": 47, "char": [3, 11, 24, 30, 35, 37, 47], "char_t": 3, "charact": [7, 47], "charatom": 28, "check": [6, 11, 14, 17, 18, 19, 21, 26, 31, 34, 35, 36, 38, 39, 40, 41], "checklist": 1, "checkout": 1, "chnk": 46, "choic": [10, 46], "choos": 45, "chunk": [18, 46, 47, 48], "chunk_head": 44, "chunk_siz": 44, "chunk_typ": 44, "chunknam": 46, "chunkopt": 46, "chunkt": 47, "cipheralgorithm": 13, "cl": 17, "class": [3, 4, 7, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49], "clean": 49, "clone": 5, "close": [25, 46], "cmake": 23, "cmake_minimum_requir": 23, "cmakelist": 23, "code": [4, 18, 31, 41, 42, 44, 47, 48, 49], "codebas": 48, "coffe": 47, "collect": [17, 40, 42, 46], "com": 5, "combin": [14, 42, 46], "come": [4, 5, 18, 46, 47], "command": [5, 23], "comment": 42, "commit": 1, "common": [9, 15, 16, 46, 47, 48], "comp_kwarg": 12, "compact": [4, 47, 49], "compar": [31, 44, 46], "comparison": [42, 43], "comparison_1_caterpillar": 44, "comparison_1_construct": 44, "comparison_1_hachoir": 44, "comparison_1_kaitai": 44, "comparison_1_mrcrowbar": 44, "compat": [15, 42], "compil": 44, "complet": [42, 43, 46, 49], "complex": [4, 44, 47], "compon": 23, "compress": [5, 15, 16, 49], "compression_flag": 47, "compression_method": 47, "compressor": 12, "comput": [3, 11, 49], "con": 43, "concaten": [14, 42], "concept": 49, "concern": [42, 48], "concret": 43, "concurr": 42, "condit": [3, 8, 9, 14, 42, 45, 47, 49], "conditioncontext": 8, "configur": [4, 10, 11, 14, 17, 23, 40, 42, 46, 47, 49], "conflict": 44, "conform": [34, 39, 40], "congratul": 47, "consequ": 42, "consid": [18, 21, 22, 43, 44, 49], "consider": [18, 42, 44], "const": [3, 11, 19, 24, 35, 49], "const_t": 3, "constant": [4, 8, 11, 14, 18, 25, 33, 45, 48, 49], "constbyt": [11, 49], "construct": [27, 28, 29, 31, 32, 42, 44], "constructor": [17, 42, 46, 47], "conststr": 11, "contain": [6, 18, 23, 40, 44, 47, 48], "content": [10, 23, 47], "context": [4, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 37, 39, 43, 46, 48, 49], "contextlength": 8, "contextpath": [8, 45, 47], "continu": 45, "contrast": [40, 42], "contribut": [2, 4, 5, 49], "control": 18, "contructor": 17, "conveni": 9, "convent": [18, 42, 46], "convers": 19, "convert": [17, 19, 47], "copi": [39, 40, 42, 45], "core": [15, 25, 40, 42, 44], "correct": [42, 48], "correctli": [46, 48], "correspond": [5, 9, 11, 27, 28, 29, 31, 32, 42, 46, 47], "could": [46, 48], "count": [36, 42, 44, 46, 47], "counterpart": [9, 31], "cover": [14, 23, 40, 44], "cp_arch__host": 25, "cp_enable_n": 5, "cp_enable_tool": 5, "cp_endian__big": 25, "cp_endian__littl": 25, "cp_endian__n": 25, "cp_include_dir": 23, "cp_option__discard_const": 25, "cp_option__discard_unnam": 25, "cp_option__dynam": 25, "cp_option__ev": 25, "cp_option__global_field_opt": 25, "cp_option__global_struct_opt": 25, "cp_option__keep_posit": 25, "cp_option__replace_typ": 25, "cp_option__sequenti": 25, "cp_option__slot": 25, "cp_option__union": 25, "cparch_check": 26, "cparch_checkexact": 26, "cparch_typ": 26, "cparchobject": 26, "cpatom": 21, "cpatom_callpack": 21, "cpatom_calls": 21, "cpatom_canpack": 21, "cpatom_canunpack": 21, "cpatom_fastcanpack": 21, "cpatom_fastcanunpack": 21, "cpatom_fasthass": 21, "cpatom_fasthastyp": 21, "cpatom_hass": 21, "cpatom_hastyp": 21, "cpatom_typ": 21, "cpatomobject": 21, "cpbinaryexpr": 33, "cpbinaryexpr_new": 33, "cpbinaryexpr_op_eq": 33, "cpbinaryexpr_op_g": 33, "cpbinaryexpr_op_gt": 33, "cpbinaryexpr_op_l": 33, "cpbinaryexpr_op_lt": 33, "cpbinaryexpr_op_n": 33, "cpbinaryexpr_opadd": 33, "cpbinaryexpr_opand": 33, "cpbinaryexpr_opbitand": 33, "cpbinaryexpr_opbitor": 33, "cpbinaryexpr_opbitxor": 33, "cpbinaryexpr_opfloordiv": 33, "cpbinaryexpr_oplshift": 33, "cpbinaryexpr_opmatmul": 33, "cpbinaryexpr_opmod": 33, "cpbinaryexpr_opmul": 33, "cpbinaryexpr_opor": 33, "cpbinaryexpr_oppow": 33, "cpbinaryexpr_oprshift": 33, "cpbinaryexpr_opsub": 33, "cpbinaryexpr_optruediv": 33, "cpbinaryexpr_typ": 33, "cpbinaryexprobject": 33, "cpboolatom_pack": 27, "cpboolatom_typ": 27, "cpboolatom_unpack": 27, "cpboolatomobject": [3, 27], "cpbytesatomobject": 3, "cpcharatom_pack": 28, "cpcharatom_typ": 28, "cpcharatom_unpack": 28, "cpcharatomobject": [3, 28], "cpcomputedatomobject": 3, "cpconstatomobject": 3, "cpcontext_check": 34, "cpcontext_checkexact": 34, "cpcontext_new": 34, "cpcontext_typ": 34, "cpcontextobject": 34, "cpcontextpath_check": 35, "cpcontextpath_checkexact": 35, "cpcontextpath_fromstr": 35, "cpcontextpath_new": 35, "cpcontextpath_typ": 35, "cpcontextpathobject": 35, "cpcstringatomobject": 3, "cpendian_check": 26, "cpendian_checkexact": 26, "cpendian_islittleendian": 26, "cpendian_typ": 26, "cpendianobject": 26, "cpenumatomobject": 3, "cpfield": 40, "cpfieldobject": [40, 41], "cpfloatatom_check": 29, "cpfloatatom_checkexact": 29, "cpfloatatom_pack": 29, "cpfloatatom_typ": 29, "cpfloatatom_unpack": 29, "cpfloatatomobject": [3, 29], "cpintatom_check": 31, "cpintatom_checkexact": 31, "cpintatom_pack": 31, "cpintatom_typ": 31, "cpintatom_unpack": 31, "cpintatomobject": [3, 9, 31], "cplayer_appendpath": 36, "cplayer_check": 36, "cplayer_checkexact": 36, "cplayer_invalid": 36, "cplayer_new": 36, "cplayer_setsequ": 36, "cplayer_typ": 36, "cplayerobject": [27, 28, 29, 31, 32, 36, 41], "cpmodul": 25, "cpmodule_setuptyp": 25, "cpobject_cr": 24, "cpobject_createnoarg": 24, "cpobject_createonearg": 24, "cpoption_check": 38, "cpoption_checkexact": 38, "cpoption_typ": 38, "cpoptionobject": 38, "cppack": 41, "cppaddingatom_pack": 32, "cppaddingatom_packmani": 32, "cppaddingatom_typ": 32, "cppaddingatom_unpack": 32, "cppaddingatom_unpackmani": 32, "cppaddingatomobject": [3, 32], "cppstringatomobject": 3, "cpsizeof": 41, "cpstate": 21, "cpstate_check": 39, "cpstate_checkexact": 39, "cpstate_new": 39, "cpstate_read": 39, "cpstate_readfulli": 39, "cpstate_seek": 39, "cpstate_setglob": 39, "cpstate_tel": 39, "cpstate_typ": 39, "cpstate_writ": 39, "cpstateobject": [36, 39], "cpstringatomobject": 3, "cpstruct_addfield": 40, "cpstruct_addfieldinfo": 40, "cpstruct_check": 40, "cpstruct_checkexact": 40, "cpstruct_getannot": 40, "cpstruct_hasopt": 40, "cpstruct_new": 40, "cpstruct_replacetyp": 40, "cpstruct_typ": 40, "cpstructfieldinfo": 40, "cpstructfieldinfo_check": 40, "cpstructfieldinfo_checkexact": 40, "cpstructfieldinfo_new": 40, "cpstructfieldinfo_typ": 40, "cpstructfieldinfoobject": 40, "cpstructmodel_check": 40, "cpstructmodel_getstruct": 40, "cpstructobject": [3, 40], "cptypeof": 41, "cptypeof_common": 41, "cptypeof_field": 41, "cpunaryexpr": 33, "cpunaryexpr_new": 33, "cpunaryexpr_opneg": 33, "cpunaryexpr_opnot": 33, "cpunaryexpr_oppo": 33, "cpunaryexpr_typ": 33, "cpunaryexprobject": 33, "cpunpack": 41, "cpvarintatomobject": 3, "crc": 46, "creat": [1, 4, 8, 12, 14, 17, 18, 21, 23, 24, 33, 34, 35, 36, 39, 40, 42, 44, 45, 46, 48, 49], "createfield": 44, "creation": [42, 46], "crucial": [42, 44, 47], "crypt": 5, "cryptograph": [15, 16], "cstring": [3, 4, 11, 42, 44, 45, 46, 49], "cstringn": 44, "ctx": [8, 9, 21, 42, 45], "ctx_field": [8, 42], "ctx_index": [8, 42], "ctx_object": [8, 42], "ctx_offset": [8, 42], "ctx_parent": [8, 42], "ctx_path": [8, 42], "ctx_po": [8, 42], "ctx_seq": 8, "ctx_stream": [8, 42], "ctx_valu": [8, 42], "current": [4, 10, 11, 13, 14, 17, 26, 39, 41, 42, 43, 45, 46, 47], "custom": [4, 9, 23, 40, 45, 49], "customiz": [9, 18], "d": [11, 18, 44], "d_compil": 44, "dai": 48, "data": [4, 6, 9, 11, 12, 13, 14, 17, 18, 21, 22, 33, 40, 43, 44, 45, 46, 47, 49], "dataclass": [40, 42], "deactiv": 14, "deal": 47, "decid": [14, 18, 42], "decis": 42, "declar": [4, 14, 17, 42, 48], "decod": [11, 12, 48], "decomp_kwarg": 12, "decompress": [12, 46], "decor": [17, 45, 46, 48], "decreas": 36, "decrypt": [5, 13], "dedic": 42, "deeper": [44, 49], "def": [19, 44], "default": [5, 7, 9, 11, 13, 14, 17, 18, 19, 22, 25, 42, 44, 45, 46, 47, 48], "default_opt": [44, 45, 46], "default_valu": 44, "defin": [4, 16, 17, 18, 19, 21, 23, 33, 39, 42, 43, 44, 45, 46, 47, 49], "definit": [4, 8, 14, 17, 40, 42, 44, 45, 46, 47, 48, 49], "degre": 44, "del_field": 17, "deleg": 19, "delegationerror": 10, "deliber": 42, "deliv": 44, "delv": 43, "demonstr": [23, 42, 44, 47], "depend": [5, 22, 42, 44, 46, 48], "depent": 42, "depth": [8, 14], "deriv": [17, 42, 46], "desc": 44, "describ": [1, 21, 40, 42, 43, 44, 45], "descript": [16, 46], "deseri": [17, 42], "desersi": 42, "design": [4, 5, 18, 21, 22, 42, 44, 45, 46, 47, 48], "desir": [5, 13, 42, 44], "despit": 42, "destin": [23, 41, 46], "detail": [1, 4, 9, 31, 47, 48], "determin": [6, 10, 21, 40, 42], "develop": [1, 4, 5, 23, 43], "dict": [10, 12, 14, 17, 19, 42], "dictat": 42, "dictclass": 18, "dictionari": [6, 17, 40, 42, 45], "differ": [40, 42, 44, 45, 46, 47], "dig": 49, "dir": 23, "direct": [5, 6, 9, 31, 42, 46, 47], "directli": [5, 9, 17, 19, 23, 40, 42, 44, 45, 47, 48], "directori": 23, "disabl": [18, 41], "disadvantag": 42, "discard": 18, "discov": 40, "discuss": [1, 4, 15, 42, 44, 47], "displai": [14, 42, 48], "distinct": 42, "distinguish": 42, "dive": 44, "divers": 49, "divid": 47, "do": [21, 42, 46, 47, 49], "doc": [3, 42, 44, 46, 48], "document": [9, 18, 23, 42, 43, 44, 46, 47, 49], "doe": [4, 5, 11, 14, 21, 40, 42, 45, 46, 47], "doesn": [44, 45, 47], "don": [4, 5, 45, 46, 47], "done": [5, 15, 47, 48], "dot": 22, "doubl": 3, "down": 46, "draft": 1, "due": 48, "duplic": 42, "dure": [11, 14, 40, 42, 46], "dynam": [4, 10, 14, 42, 45, 47], "dynamicsizeerror": [10, 14, 42], "e": [5, 9, 11, 14, 18, 42, 46, 47], "each": [14, 17, 18, 21, 42, 48], "earlier": [42, 47], "eas": [42, 44, 47], "easi": [4, 42, 48, 49], "easier": 4, "effect": [45, 46], "effici": [4, 9, 31], "effort": 33, "eight": 42, "either": [1, 17, 18, 23, 42, 45, 46], "element": [10, 11, 13, 14, 22, 40, 42, 45, 47], "elimin": [44, 47], "ellipsi": [11, 13, 14, 17, 42], "els": [3, 6, 17, 42, 45, 46], "elseif": [3, 14, 15, 46], "elsewher": 42, "emploi": 42, "emul": 46, "en": 44, "enabl": [4, 5, 14, 18, 22, 42, 45, 48, 49], "encapsul": [47, 48], "encod": [4, 11, 12, 44, 47, 48], "encount": 47, "encourag": 48, "encout": 1, "encrypt": [5, 13], "end": [11, 14, 42, 45, 47, 49], "endia": [46, 47], "endian": [4, 7, 9, 11, 25, 31, 37, 43, 44, 47, 48], "enforc": 11, "engin": [4, 44], "enhanc": [1, 42, 44, 45, 46], "enough": 46, "ensur": [11, 23], "entail": 42, "entir": 39, "entri": [0, 4, 44, 48], "enum": [3, 6, 11, 17, 33, 42, 47, 48], "enumer": [3, 7, 11, 49], "environ": 5, "eof": 45, "equip": [46, 49], "equival": [9, 34, 48], "error": [10, 17, 21, 24, 31, 33, 34, 35, 36, 39, 40, 41, 42, 45, 47], "especi": 5, "essenc": 42, "essenti": [42, 47], "etc": [9, 47], "eval": 40, "evalu": [14, 33, 41, 42], "even": [4, 42, 45, 46, 47, 48], "everi": [9, 39, 42, 47, 48], "everyon": 5, "everyth": [15, 45, 48], "evid": 42, "evolv": 43, "exampl": [3, 4, 9, 17, 18, 22, 23, 24, 42, 44, 46, 47, 48], "except": [1, 16, 40, 42, 45, 46], "exclud": [40, 42], "exclus": 42, "execut": [1, 14, 18, 42, 45], "execute_process": 23, "exercis": 42, "exist": [8, 42], "expand": 25, "expect": [46, 48], "experi": 44, "experiment": [42, 45], "explain": [42, 49], "explan": [4, 47], "explicit": [42, 47], "explicitli": [7, 14, 42, 48], "explor": [47, 48, 49], "expr": 44, "express": [16, 37, 42, 43, 47], "exprmixin": 8, "extend": [5, 23, 40, 42, 45, 46, 47], "extens": [4, 5, 23, 42, 44], "extern": 44, "extra": [5, 14, 40, 42, 45, 46, 47, 48], "f": [11, 18, 45, 46, 47], "f0": 46, "f1": 46, "f16": 47, "f2": 46, "f3": 46, "f32": 47, "f64": 47, "f_dynam": 18, "f_keep_posit": [18, 45], "f_offset_overrid": 18, "f_sequenti": 18, "facil": 45, "facilit": 44, "factori": 18, "fail": 10, "fall": 42, "fallback": [44, 47], "fals": [6, 9, 11, 17, 18, 19, 42, 46, 47], "faster": [21, 44, 48], "fastest": 44, "fdat": [46, 47], "fdatchunk": [46, 47], "featur": [2, 18, 42, 44, 45, 48, 49], "feel": [1, 47], "few": [39, 40], "field": [4, 8, 11, 13, 16, 17, 27, 28, 29, 31, 32, 40, 41, 43, 44, 47, 48, 49], "field_kwd": 17, "field_opt": 17, "fieldmixin": [14, 15, 42, 45], "fieldset": 44, "fieldstruct": [11, 14, 15], "figur": 44, "file": [4, 17, 18, 23, 44, 45, 46, 47, 48], "filenam": 17, "files": 18, "fill": 42, "final": [17, 18, 42, 43, 45, 46], "find": 48, "find_packag": 23, "finish": 46, "finit": [40, 42], "first": [14, 22, 33, 42, 45, 46, 49], "firstli": 45, "five": 47, "fix": [4, 5, 9, 31, 42, 45, 46], "fixedarrai": 44, "fixedarray1": 44, "flag": [11, 14, 17, 18, 40, 44, 45], "float": [3, 11, 30, 37, 45, 47], "float16": [11, 47], "float32": [11, 47], "float32n": 29, "float64": [11, 47], "float_t": 3, "focu": [42, 48], "focus": [9, 31, 44], "follow": [1, 4, 5, 9, 11, 18, 21, 22, 23, 31, 42, 44, 45, 46, 47, 48], "foo": [4, 8, 17, 22, 24, 42, 45, 46, 47], "foobar": 47, "foohello": 4, "forget": 5, "fork": 1, "form": [4, 14, 42, 44], "formal": 16, "format": [4, 7, 8, 9, 11, 14, 18, 24, 42, 44, 45, 46, 47, 48, 49], "format16": 46, "format2": 18, "format32": [42, 46], "format8": 46, "formatfield": [9, 11, 18, 31, 42], "formatsubtempl": 46, "formattempl": [42, 46], "forward": 48, "found": [14, 18, 19, 40, 42], "foundat": [15, 42, 44], "four": [21, 48], "frame": [8, 47], "frame_data": 47, "framework": [4, 42, 43, 44, 49], "free": [1, 44], "friendli": [4, 43, 45, 46, 49], "from": [4, 6, 7, 8, 9, 11, 14, 17, 18, 21, 22, 31, 33, 35, 39, 40, 42, 44, 45, 46, 47, 48, 49], "from_byt": [9, 31], "fun": 44, "function": [3, 6, 8, 13, 14, 16, 19, 21, 22, 27, 28, 29, 31, 32, 35, 36, 39, 40, 42, 44, 45, 47, 48, 49], "fundament": [31, 48], "funtion": 41, "further": [31, 42, 46], "furthermor": [21, 42], "futur": [0, 45, 46], "g": [9, 11, 18, 27, 28, 29, 31, 32, 42, 46, 47, 48], "gain": [47, 49], "gama": [46, 47], "gamachunk": [46, 47], "gamma": 47, "gamma_valu": 47, "gener": [2, 4, 6, 40, 42, 44, 46], "get": [4, 6, 7, 13, 14, 17, 18, 43, 46, 48], "get_annot": 40, "get_flag": 18, "get_global_core_st": 40, "get_global_module_st": 25, "get_inst": 13, "get_memb": 42, "get_module_st": 25, "get_offset": 14, "get_struct": 14, "get_typ": 14, "getattr": [21, 42, 45], "getitem": 45, "getsizeof": 18, "getstruct": 6, "getvalu": 25, "git": [1, 5], "github": [1, 4, 5, 42, 46], "given": [4, 6, 7, 9, 14, 15, 17, 19, 24, 25, 26, 31, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48], "global": [3, 11, 16, 17, 21, 25, 27, 28, 29, 31, 32, 39, 41, 45, 46, 48], "global_const": 14, "go": [42, 46], "goal": 44, "goe": 46, "greatest": 42, "greedi": [36, 45, 46, 47], "greedili": 41, "group": 42, "guid": 23, "guidelin": [2, 5], "h": [11, 23], "ha": [5, 6, 8, 11, 14, 17, 18, 31, 40, 42, 45, 47], "hachoir": 44, "handi": 47, "handl": [10, 11, 31, 42, 49], "handler": 19, "happend": 1, "has_condit": 14, "has_flag": [14, 18], "has_opt": 17, "hasstruct": 6, "hastili": 49, "have": [2, 4, 5, 6, 14, 17, 18, 23, 44, 45, 46, 47, 48], "haven": 47, "he": 19, "head": [14, 46], "header": 23, "hello": [4, 46, 47], "help": [45, 46, 48], "helper": 33, "henc": 42, "here": [3, 8, 9, 23, 42, 44, 46, 47, 48, 49], "heve": 47, "hierarchi": 42, "high": [40, 49], "highlight": 42, "hook": [17, 42], "hook_cl": 46, "hour": 48, "how": [4, 23, 42, 46], "howev": 47, "html": 4, "http": [5, 44], "i": [4, 5, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 24, 26, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49], "i128": [9, 47], "i16": [9, 47], "i24": [9, 47], "i32": [9, 31, 47], "i32_g": 31, "i48": 47, "i64": [9, 47], "i8": [9, 47], "id": 44, "ident": 40, "identifi": 11, "iend": 46, "ignor": [11, 42], "ihdr": 46, "ihdrchunk": 46, "illustr": 42, "imag": 46, "impact": [14, 42], "implement": [3, 8, 9, 11, 14, 15, 17, 19, 21, 22, 23, 27, 28, 29, 31, 32, 34, 40, 44, 45, 46, 47, 48], "implicitli": 47, "import": [4, 9, 18, 23, 31, 42, 44, 45, 46, 47, 48, 49], "import_caterpillar": 23, "imposs": 48, "improv": 45, "includ": [5, 7, 17, 18, 23, 42, 44, 45, 47], "inclus": 48, "incorpor": [18, 21, 42, 44], "independ": [42, 48], "index": [4, 42], "indic": [6, 7, 9, 14, 21, 31, 42], "individu": 42, "infer": [14, 17, 42, 46], "info": [40, 44], "inform": [4, 7, 12, 15, 25, 42, 46, 48], "ingor": 18, "inherit": [21, 42, 45], "initi": [9, 14, 17, 40, 44, 45], "inlin": [8, 17, 25], "inner": 42, "input": [11, 12, 41, 42, 47, 48], "insert": 42, "insid": 42, "insight": [42, 49], "inspect": [40, 42], "instal": [23, 42, 47], "instanc": [3, 9, 13, 14, 17, 18, 19, 21, 26, 27, 28, 29, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 47, 48], "instanti": [9, 42, 48], "instead": [39, 42, 43, 44, 46, 47], "int": [7, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 45, 46, 47], "int16": [11, 47], "int24": 47, "int24ul": 44, "int32": [11, 31, 47], "int32sn": 31, "int32ul": 44, "int64": [11, 47], "int8": [3, 11, 47], "int8_t": 36, "int8ul": 44, "int_convert": 19, "int_t": 3, "integ": [3, 11, 16, 30, 37, 45, 46, 48, 49], "integr": [23, 42, 44, 47, 48], "intend": [42, 47], "intenum": 47, "interact": 9, "intercept": 17, "interfac": [15, 16, 21, 40, 43, 45], "intern": [4, 14, 15, 17, 18, 25, 40, 42, 43, 45, 46, 47, 49], "interpret": [23, 44, 47, 48], "intric": 42, "introduc": [21, 40, 42, 46, 47, 48, 49], "introduct": [4, 43, 48], "introspect": 21, "invalid": [10, 36], "invalidvalueerror": 10, "invert": 46, "invok": [21, 42, 45], "involv": [4, 42, 44, 48], "io": [39, 41], "iobas": 17, "is_en": 14, "is_pad": 11, "is_seq": 14, "isn": 47, "iso": 47, "issu": [2, 3, 4, 10, 42], "istempl": 17, "item": [44, 47], "iter": [13, 14, 17, 42, 44], "its": [9, 11, 14, 18, 21, 23, 31, 40, 42, 44, 45, 46, 48], "itxt": [46, 47], "itxtchunk": [46, 47], "journi": 46, "jump": 45, "just": [1, 4, 18, 39, 42, 44, 46, 47, 48], "k": [44, 46], "kaitai": 44, "keep": 47, "keep_posit": 14, "kei": [42, 45, 46], "keword": 47, "keyword": [17, 42, 45, 46, 47, 48], "kind": 45, "know": 46, "knowledg": 47, "known": [42, 45], "kwarg": [6, 17, 19, 45], "kwd": 17, "l": 44, "lack": 44, "lambda": [6, 8, 14, 19, 35, 45, 46, 47], "languag": 23, "language_tag": 47, "larva": 44, "last": [11, 14, 42, 45, 46, 47], "later": [42, 47, 48], "latest": 44, "layer": [27, 28, 29, 31, 32, 39, 41, 42, 43], "layout": 46, "lazi": [3, 33, 42, 45], "le": [4, 9, 11, 44, 48], "le_varint": 47, "learn": 49, "least": 40, "leav": 46, "left": [8, 33, 46], "len": 47, "len_name2": 44, "length": [4, 8, 9, 11, 12, 13, 14, 36, 41, 42, 45, 46, 49], "length_field": 44, "lenof": [45, 47], "less": [18, 48], "let": [4, 46, 47, 48], "level": [9, 40, 42, 47, 49], "leverag": 42, "librari": [4, 5, 15, 23, 40, 42, 43, 44, 46, 47, 48, 49], "like": [6, 9, 19, 42, 44, 45, 46, 47, 48], "limit": [45, 46], "line": [18, 23, 44, 46], "link": [3, 5, 14, 42, 44, 45], "list": [11, 14, 17, 33, 42, 45, 48, 49], "list_typ": 25, "littl": [4, 7, 9, 11, 26, 31, 44, 48], "little_endian": [9, 44, 47], "littleendian": [7, 44], "ll": [47, 49], "local": [27, 28, 29, 31, 32], "logic": [14, 43, 45], "look": [4, 19, 46, 47, 48], "lookup": 14, "lose": 45, "lot": 47, "low": [9, 40], "lower": [18, 46], "lzallright": 47, "lzma": [12, 47], "lzmacompress": 12, "lzo": [5, 12, 47], "lzocompress": 12, "m": [1, 23, 40, 46, 47], "m_byte_count": 31, "macro": [36, 43], "magic": [4, 8, 42, 46, 47], "mai": [14, 18, 21, 39, 41, 42, 43, 45, 47], "main": [46, 47], "maintain": 42, "make": [1, 5, 9, 42, 44, 46, 47], "manag": [14, 19, 31, 40], "mandatori": [41, 42], "mani": 42, "manner": 4, "manual": [21, 23], "map": [4, 6, 17, 42, 45], "mark": [1, 41, 45], "master": 47, "match": [11, 19, 25], "matrixeditor": 5, "max_siz": 17, "maximum": 17, "mean": [17, 31, 42, 45], "meaningless": 48, "meant": 39, "measur": [14, 21, 27, 28, 29, 31, 32, 42, 44], "mechan": 31, "member": [18, 21, 42, 48], "memori": [4, 11, 13, 14, 18, 46, 48, 49], "memoryview": [11, 13, 14, 47], "mention": [41, 42, 47], "mere": 47, "messag": 10, "meta": 44, "metamorphosi": 44, "method": [8, 9, 11, 14, 17, 18, 21, 40, 43, 45, 47], "metr": 47, "mgk": 8, "might": [19, 41, 46, 47, 48], "million": [27, 28, 29, 31, 32], "mimic": 42, "minim": [33, 42, 44, 48], "minu": 14, "minut": 48, "miss": [3, 42], "mix": 14, "mixin": [8, 14], "mod": 26, "mode": [5, 13], "mode_arg": 13, "model": [4, 11, 15, 16, 18, 31, 40, 43, 44, 45, 46, 48, 49], "modif": 6, "modifi": [14, 17, 48], "modul": [7, 9, 21, 23, 24, 40, 42, 43, 46, 48], "modular": 42, "month": 48, "more": [4, 9, 15, 18, 40, 42, 44, 45, 46, 47, 48, 49], "moreov": 49, "most": [9, 17, 42, 46, 48], "moth": 44, "move": [42, 48], "mozilla": 48, "mrcrowbar": 44, "msc": 44, "much": [42, 46, 48], "multipl": [8, 9, 14, 22, 42, 47], "multipli": 46, "must": [9, 11, 14, 18, 21, 42, 45, 46, 47, 48], "n": [4, 11, 46], "name": [4, 5, 6, 7, 8, 17, 18, 21, 23, 24, 38, 40, 43, 44, 46], "name1": 44, "name2": 44, "namespac": 39, "nativ": [5, 7, 17, 21, 40, 46], "navig": [4, 49], "nbit": 9, "nbyte": [9, 31], "ndarrai": 18, "necessari": [17, 25, 40, 42, 46, 48], "need": [1, 4, 5, 17, 18, 40, 42, 44, 45, 46, 47, 48, 49], "nest": [22, 42], "netendian": 7, "network": 7, "never": [4, 14], "new": [2, 9, 17, 18, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46], "next": [1, 14, 21, 42, 47, 49], "nibarch": [18, 42], "nibhead": 42, "none": [6, 7, 8, 10, 11, 12, 13, 14, 17, 18, 19, 42, 46, 47], "nor": 42, "normal": [4, 18, 42, 45], "notabl": 46, "note": [8, 14, 17, 21, 33, 43, 44, 47, 48], "noth": [43, 47], "notic": 18, "notimpl": 21, "notimplementederror": [11, 14, 19], "now": [40, 42, 43, 44, 46, 47, 48], "null": [9, 14, 21, 24, 25, 31, 33, 34, 35, 36, 39, 40, 41, 47], "num1": 44, "num2": 44, "num2_hi": 44, "num2_lo": 44, "num4": 44, "number": [9, 14, 31, 39, 42, 48, 49], "numer": 15, "numpi": 18, "o": [21, 40, 46], "o1": 18, "o2": 18, "o_array_factori": 18, "obj": [4, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 42, 46, 47, 48], "object": [4, 6, 7, 8, 9, 11, 17, 19, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 41, 43, 44, 45, 46, 48, 49], "obvious": 23, "occupi": [4, 18, 42, 47], "occur": [21, 24, 31, 33, 34, 35, 36, 39, 40, 41, 45], "octetstr": [3, 47], "off": 44, "offer": [9, 42, 49], "offici": 42, "offset": [9, 14, 42, 45, 49], "often": [4, 47], "ok": 46, "okai": [46, 47], "older": 42, "onc": [11, 40, 42, 47], "one": [7, 14, 18, 21, 23, 27, 28, 29, 31, 32, 33, 40, 42, 44, 46, 47, 48], "ones": 42, "onli": [4, 8, 14, 18, 23, 42, 44, 45, 46, 47, 48], "op": [25, 26, 29, 31, 33, 34, 35, 36, 38, 39, 40, 41], "open": 1, "oper": [4, 8, 10, 11, 13, 14, 17, 31, 33, 42, 43, 47, 49], "operand": [8, 42, 46], "opt": [18, 48], "optim": [4, 9, 31, 42, 48], "option": [4, 5, 9, 10, 13, 14, 16, 17, 19, 25, 37, 40, 42, 43, 44, 45, 46, 48, 49], "optionerror": 10, "order": [7, 9, 14, 17, 42, 44, 46, 47, 48], "org": 44, "organ": 48, "organiz": 42, "origin": [1, 11, 14, 18, 40, 46], "other": [7, 8, 14, 16, 21, 42, 44, 45, 46, 47, 48], "otherwis": [11, 18, 19, 21, 26, 40], "our": [14, 18, 42, 46, 47, 48], "out": [5, 47], "outcom": 42, "outer": 17, "output": [11, 18, 42], "output_strip_trailing_whitespac": 23, "output_vari": 23, "over": [43, 46], "overal": [18, 46], "overhead": [31, 42], "overload": 49, "overrid": 46, "overview": [42, 44, 45], "own": [21, 40, 46, 47], "p": 11, "pack": [3, 4, 6, 9, 11, 13, 14, 17, 18, 21, 22, 27, 28, 29, 31, 32, 39, 42, 43, 44, 45, 46, 47, 49], "pack_fil": [17, 46], "pack_into": 17, "pack_seq": [11, 14], "pack_singl": [11, 13, 14], "packag": [5, 22, 23], "pad": [3, 11, 13, 18, 30, 37, 42, 44, 46, 49], "padding_arg": 13, "padding_t": 3, "paddingatom": 32, "paddingbit": 44, "page": 4, "pakt": 44, "paramet": [6, 7, 8, 9, 11, 12, 13, 14, 17, 18, 19, 41, 42, 46], "paramount": 42, "parent": [8, 23, 36, 42, 47], "parenthes": 42, "pars": [3, 10, 11, 12, 14, 31, 33, 39, 41, 42, 44, 45, 46, 47], "parser": [4, 44, 46], "part": [5, 45], "partial": [17, 42, 46], "particularli": [9, 42], "pascal": 47, "pascalstr": 44, "pascalstring8": 44, "pass": [11, 17, 19, 39, 40, 42, 45, 46, 49], "path": [16, 22, 36, 37, 43, 46, 47], "pep": 40, "per": [11, 18, 42], "perfect": 44, "perform": [9, 31, 44], "perftest": 3, "persist": 14, "phy": [46, 47, 48], "physchunk": [46, 47, 48], "physunit": 47, "pip": [5, 23, 47], "pipelin": 46, "pixels_per_unit_i": [47, 48], "pixels_per_unit_x": [47, 48], "place": [18, 19, 42, 45, 46], "placehold": 42, "placement": 42, "plai": [44, 47], "pleas": [1, 23, 42, 43], "plte": [46, 47, 48], "pltechunk": [46, 47], "png": [46, 47, 48], "pngchunk": [46, 48], "po": [17, 39, 42], "point": [42, 44, 47, 48, 49], "pointer": [7, 41, 49], "pose": 42, "posit": [14, 17, 39, 42, 45, 46], "possess": 42, "possibl": [4, 11, 17, 18, 40, 42, 45, 46, 47, 48], "post": 13, "potenti": 42, "power": [4, 42, 49], "pre": [16, 39, 42, 46], "predefin": [9, 42], "prefix": [3, 4, 11, 44, 45, 46, 49], "prefixed_arrai": 45, "prepar": 17, "presenc": 21, "present": [18, 21, 40, 44, 48], "prevent": 42, "previou": 46, "previous": [42, 45, 46, 47], "primari": 44, "primit": [42, 47], "print": [4, 11, 47], "prior": 5, "privat": [23, 46], "pro": 43, "problem": [4, 39, 42, 44, 46], "proceed": 23, "process": [3, 10, 13, 14, 25, 39, 42, 44, 46, 47], "procotol": 22, "produc": 42, "program": 40, "progress": [23, 46], "project": [1, 5, 23, 46], "prompt": [47, 48], "proper": 21, "properti": [14, 47], "propos": [5, 45], "proprietari": [4, 47], "protocol": [20, 34, 39, 40, 43, 47], "provid": [1, 4, 5, 8, 9, 14, 17, 21, 22, 23, 31, 42, 43, 44, 45, 46, 47, 48, 49], "pstring": [3, 47], "ptr_size": 7, "pull": 1, "purpos": [4, 18, 42], "push": 1, "put": [23, 44], "py": [3, 11, 12, 14, 44, 47, 48], "py_ssize_t": [36, 39, 41], "pyinit__exampl": 23, "pymodinit_func": 23, "pymoduledef": 25, "pympler": 18, "pyobject": [21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41], "pypi": 44, "pyproject": 23, "pytest": 1, "python": [2, 4, 5, 9, 11, 17, 18, 19, 21, 23, 31, 33, 34, 39, 40, 42, 44, 46, 47, 48], "python3": 44, "python_add_librari": 23, "python_execut": 23, "pytype_readi": 25, "pytypeobject": [21, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40], "q": 11, "qualifi": 46, "qualnam": 7, "question": [2, 4, 44, 47], "quick": 44, "r": [44, 46, 48], "rais": [10, 11, 14, 19, 42], "rang": [44, 47], "rapidli": 44, "rare": 47, "rather": [42, 47], "raw": [45, 47], "re": [4, 45, 48], "reach": 45, "read": [10, 17, 25, 39, 44, 46, 47], "readabl": [4, 44], "reader": 45, "readi": [43, 47, 48, 49], "real": 47, "realli": [46, 47], "reason": 44, "receiv": 42, "recent": 46, "recommend": [4, 9, 31, 40, 41, 42, 43, 46, 47], "recreat": 48, "recurs": 45, "reduc": [18, 31], "ref": 44, "refer": [4, 5, 14, 15, 17, 21, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 46, 47, 49], "referenc": 47, "reflect": 44, "refresh": 42, "regard": [42, 44], "regist": 19, "registri": 16, "regular": 42, "rel": [17, 42], "relat": [10, 14, 18, 22, 42, 44], "relax": 48, "releas": 21, "relev": [42, 47], "reli": 42, "remomv": 17, "remov": [17, 18, 42, 43, 45, 48], "repeat": [9, 44], "replac": [8, 18, 39, 40, 42, 45], "repo": 1, "repositori": [5, 44], "repr": 9, "repres": [7, 8, 11, 12, 14, 17, 21, 27, 28, 29, 31, 32, 34, 35, 42, 47, 49], "represent": [9, 14, 42, 45], "reproduc": 48, "request": [1, 42, 45], "requir": [9, 17, 18, 23, 42, 44, 47, 48], "reserv": 46, "reset": 14, "resolut": 42, "resolv": [22, 42, 45], "resourc": [46, 48, 49], "result": [9, 17, 18, 21, 22, 41, 42, 44, 45, 46], "retain": 47, "retriev": [7, 8, 14, 18, 22, 35, 42, 45, 47], "return": [6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 47], "revers": [4, 44], "revisit": 47, "rgb": [47, 48], "rhello": 47, "right": [8, 33, 42, 46], "risk": 42, "roadmap": 2, "robust": 49, "role": [47, 48], "root": [25, 42], "rp": 44, "run": [2, 5], "runtim": [16, 17, 31, 44, 49], "s_discard_const": 18, "s_discard_unnam": [18, 42, 46], "s_eval_annot": [18, 42], "s_replace_typ": [18, 42, 48], "s_slot": [18, 48], "s_union": 18, "safe_to_copi": 46, "same": [33, 42, 45, 46, 47, 48], "sampl": [46, 47], "save": 48, "scenario": [42, 44, 47], "schema": 18, "scheme": 13, "scikit": 23, "scope": 18, "score": 44, "search": [4, 21, 40], "sec": 44, "second": [27, 28, 29, 31, 32, 48], "section": [15, 42, 43, 45, 46, 47, 48], "secur": 42, "see": [9, 41, 46], "seek": [25, 39], "seen": 47, "select": 42, "self": [9, 21, 22, 27, 28, 29, 31, 32, 40, 42, 44, 45], "sep": 47, "seq": [11, 14, 18, 44, 45], "seq_greedi": 41, "seq_length": 41, "sequenc": [9, 11, 14, 17, 36, 41, 43, 49], "sequence_numb": 47, "sequent": 14, "sequenti": [14, 41, 47], "serial": [17, 42, 48], "serv": [15, 42, 44, 47], "set": [7, 11, 14, 17, 18, 23, 25, 36, 39, 40, 42, 45, 47, 49], "set_field_flag": 18, "set_struct_flag": [18, 48], "set_union_flag": 18, "setattr": 17, "setup": 23, "seven": 18, "sever": [5, 42, 44, 46], "share": 46, "shareabl": 44, "shift": 46, "ship": 5, "shortcut": [42, 44, 45, 47, 48], "should": [7, 9, 14, 17, 18, 21, 22, 33, 40, 41, 42, 44, 46, 47], "show": [18, 44], "showcas": 46, "shown": 42, "shrink": 4, "side": 46, "sidenot": 46, "sign": [11, 31, 47], "signed": 9, "signifi": 31, "signific": [11, 42], "similar": [42, 44, 46, 48], "similarli": 42, "simpl": [4, 14, 18, 19, 33, 38, 42, 46, 47, 48], "simpli": [1, 5, 21, 44, 46, 47, 48], "simplic": [9, 44], "simplifi": 47, "simul": [17, 42], "sinc": [21, 42, 44, 47], "singl": [11, 13, 14, 22, 42], "singular": 42, "situat": [17, 42, 46, 47], "six": [33, 47], "size": [4, 6, 7, 9, 10, 14, 17, 21, 31, 39, 41, 42, 44, 49], "size_t": [11, 47], "sizeof": 9, "skbuild_project_nam": 23, "skim": 49, "slice": [14, 42, 45], "slotsclass": 18, "slow": 46, "slower": 44, "small": [44, 46], "snippet": [31, 48], "so": [4, 5, 21, 42, 45, 47], "sole": [9, 31, 42], "solut": [47, 48], "solv": [39, 46], "some": [1, 17, 42, 43, 44, 45, 46, 47], "someon": 46, "someth": 21, "sourc": [4, 6, 7, 8, 10, 11, 12, 13, 14, 17, 18, 19, 23, 46], "space": [4, 18, 42, 47, 48], "speak": 44, "special": [4, 15, 16, 18, 21, 22, 31, 39, 43, 45, 46, 49], "specialis": 17, "specif": [5, 9, 15, 17, 18, 21, 43, 44, 46, 47, 49], "specifi": [5, 7, 8, 11, 13, 14, 17, 35, 40, 42, 45, 46, 47, 48], "sperat": 22, "sphinx": [4, 42, 48], "split": 45, "src": [5, 23], "ssize_t": [11, 47], "stabl": 44, "stack": 8, "stackoverflow": 48, "stage": 47, "standard": [4, 7, 15, 16, 43, 46, 49], "start": [7, 25, 42, 43, 44, 46, 47, 48, 49], "state": [21, 25, 36, 37, 40, 43, 45, 46, 48], "statement": [14, 42], "static": [17, 42, 44, 45, 47], "statu": 17, "stdin": 46, "step": [23, 49], "still": [1, 4, 5, 42, 43, 47], "stop": [10, 45], "storag": 42, "store": [9, 14, 17, 18, 25, 33, 38, 39, 40, 41, 42, 45, 46, 47, 48], "str": [7, 8, 9, 10, 11, 14, 17, 18, 44, 46], "str___annotations__": 25, "str___dict__": 25, "str___match_args__": 25, "str___mro__": 25, "str___pack__": [21, 25], "str___pack_many__": 25, "str___qualname__": 25, "str___size__": 25, "str___slots__": 25, "str___struct__": 25, "str___type__": 25, "str___unpack__": 25, "str___unpack_many__": 25, "str___weakref__": 25, "str_builder_process": 25, "str_bytesio_getvalu": 25, "str_close": 25, "str_ctx__getattr": 25, "str_ctx__root": 25, "str_path_delim": 25, "str_pattern_match": 25, "str_read": 25, "str_seek": 25, "str_start": 25, "str_strict": 25, "str_tell": 25, "str_write": 25, "straightforward": [4, 42], "stream": [6, 11, 14, 17, 21, 39, 42, 44, 45, 46, 47, 48], "streamerror": 10, "strict": 25, "string": [3, 4, 7, 9, 14, 15, 18, 21, 25, 42, 46, 49], "stringifi": 18, "stringinputstream": 44, "stringiz": 42, "strip": 47, "struct": [4, 5, 7, 8, 10, 14, 15, 16, 25, 37, 38, 43, 44, 46, 49], "struct_": [17, 40], "struct_field": 6, "struct_opt": 48, "structcontain": 40, "structexcept": 10, "structur": [4, 6, 10, 13, 14, 17, 21, 23, 42, 44, 45, 46, 47, 49], "strz": 44, "style": [8, 34], "sub": [42, 46], "subclass": [11, 14, 40, 42, 45], "subdirectori": 5, "subject": [5, 21, 42, 43, 46], "submit": 2, "submodul": 45, "subsequ": 42, "success": [36, 39, 40, 41], "successfulli": 47, "suce": 40, "suggest": [1, 42], "summari": 42, "suppli": 42, "support": [4, 5, 6, 10, 14, 15, 17, 21, 22, 33, 42, 44, 45, 46, 47, 49], "sure": 5, "switch": [6, 9, 14, 42, 43, 44, 49], "sy": 18, "synchron": [42, 46], "syntact": 42, "syntax": 47, "sysn": [7, 14], "system": [7, 23, 26, 42], "system_arch": 7, "t": [4, 5, 17, 18, 21, 42, 44, 45, 46, 47, 48], "tabl": 18, "tag": [1, 44], "tail": [14, 46], "tailor": 46, "take": [4, 6, 7, 18, 19, 42, 45, 46, 47, 48], "taken": 48, "target": [17, 19, 21, 23, 42], "target_include_directori": 23, "task": [42, 44], "tbd": 14, "tc": 19, "technic": 48, "techniqu": [42, 46, 47], "tell": 25, "templat": [16, 49], "template_ti": 17, "templatetypevar": [17, 42, 46], "temporari": 45, "temporarili": [42, 45, 46], "termin": 47, "test": [2, 3, 44], "text": [11, 46, 47], "textchunk": [46, 47], "textual": 47, "th": 46, "than": [9, 18, 40, 42, 45, 46, 48], "thank": 48, "thats": 48, "thei": [9, 17, 18, 40, 42, 46, 48], "them": [9, 39, 42, 45, 47, 48], "themselv": [42, 44], "therefor": [5, 11, 17, 18, 40, 42, 45, 46], "thi": [1, 4, 5, 8, 9, 10, 11, 14, 15, 17, 18, 19, 21, 22, 23, 25, 31, 33, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49], "think": 42, "third": 42, "those": [44, 45, 49], "though": [44, 45, 48], "thousand": 44, "three": [42, 45, 47, 48], "through": [4, 9, 14, 42, 49], "throw": [17, 46], "thrown": 45, "time": [1, 4, 42, 43, 44, 46, 47, 48], "timechunk": [46, 48], "timeit": 44, "to_byt": [9, 31], "to_struct": [16, 17, 19], "todo": [2, 8, 13, 17, 18, 19, 26, 27, 28, 29, 32, 36, 41, 42, 44, 45, 46], "togeth": 21, "toml": 23, "too": 47, "tool": [5, 23], "top": [42, 45], "topic": [47, 48], "total": 18, "touch": 4, "tox": 1, "traceback": [1, 46], "track": 47, "trade": 44, "tradit": 42, "trail": 47, "transform": [11, 12, 46], "translat": [14, 17, 33], "translated_keyword": 47, "travel": 14, "treat": 42, "tri": [42, 45], "tricki": [42, 45], "trigger": 47, "true": [6, 9, 11, 14, 17, 18, 19, 42, 46, 47], "try": [40, 42, 47, 48], "turn": 45, "tutori": [4, 43, 44, 46, 47, 48], "two": [17, 18, 42, 45, 46, 48], "txt": 23, "ty": 11, "type": [3, 4, 7, 11, 13, 14, 15, 17, 19, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 49], "type_": [11, 13], "typeconvert": [16, 19], "typeerror": 46, "typeof": 6, "typic": [9, 42], "tys_arg": 17, "tys_kwarg": 17, "u": [9, 46, 47], "u1": 44, "u128": [9, 47], "u16": [4, 9, 47, 48], "u2": 44, "u24": [9, 47], "u32": [4, 9, 47, 48], "u4": 44, "u40": 47, "u64": [9, 47], "u8": [9, 47, 48], "uint": [11, 44, 47], "uint16": [4, 11, 19, 42, 45, 46, 47, 48], "uint24": [44, 47], "uint24_l": 44, "uint32": [4, 8, 9, 11, 14, 19, 42, 44, 45, 46, 47, 48], "uint32_l": 44, "uint64": [11, 47], "uint8": [3, 8, 11, 14, 17, 18, 42, 44, 45, 46, 47, 48], "uintptr": 46, "unari": [8, 37], "unaryexpress": 8, "undefin": 42, "under": [27, 28, 29, 32, 42], "undergo": [42, 44], "underli": [10, 14, 40, 42, 45], "underscor": 42, "understand": [46, 47, 48], "unicod": 21, "unintend": 46, "union": [8, 12, 13, 14, 17, 18, 49], "union_typ": 25, "unionhook": [17, 46], "unit": [47, 48], "univers": 48, "unknown": [45, 47], "unless": 47, "unlik": [9, 31], "unnam": [18, 40, 42, 46], "unnecessari": 48, "unnecessarili": 46, "unpack": [3, 4, 6, 9, 11, 13, 14, 17, 18, 21, 22, 27, 28, 29, 31, 32, 39, 42, 43, 44, 45, 46, 47, 49], "unpack_fil": [17, 46], "unpack_seq": [11, 14], "unpack_singl": [11, 13, 14], "unsign": [11, 31, 47, 48], "unsupport": [10, 46], "unsupportedoper": 10, "until": [42, 45, 46], "untrust": 18, "unus": 42, "up": [1, 25, 44, 48], "upcom": 48, "updat": [14, 18], "upon": [46, 49], "upper": 46, "us": [1, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 21, 22, 24, 25, 27, 28, 29, 31, 32, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49], "usabl": 42, "usag": 46, "use_tempfil": 17, "user": [4, 18, 43, 44, 45, 46, 48, 49], "usual": [4, 21, 42, 47], "utf": [11, 44, 47], "utf8": 44, "util": [9, 19, 31, 41, 42, 44, 48], "uuid": [3, 18], "v": [23, 44], "v3": 44, "valid": [10, 21, 41, 47], "validationerror": [10, 11, 19], "valu": [4, 6, 7, 8, 10, 11, 14, 17, 18, 22, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48], "value2": 4, "variabl": [5, 9, 11, 17, 22, 39, 42, 45, 46, 49], "variant": 40, "varint": [3, 11, 47], "varint_lsb": 11, "varint_t": 3, "variou": 45, "ve": [1, 43, 46, 48], "venv": 44, "verif": 42, "verifi": 39, "version": [5, 9, 23, 42, 46, 47, 48], "via": [5, 47], "view": 14, "vint": [11, 47], "visibl": [18, 42, 48], "visit": 43, "vm": 44, "void": [23, 25, 34, 36], "void_ptr": [11, 47], "wa": [18, 40, 42, 44, 46, 47, 48], "wai": [4, 42, 47], "want": [4, 5, 43, 44, 45, 46, 47], "warm": 48, "wasn": 42, "we": [17, 18, 39, 42, 44, 45, 46, 47, 48], "well": [14, 18, 21, 42, 45, 46, 49], "were": 1, "what": [1, 4, 17, 42, 46, 47], "whatev": 46, "when": [4, 9, 10, 23, 42, 44, 45, 47, 48], "whenc": 39, "where": [5, 14, 17, 42, 44, 45, 46, 47], "wherebi": [17, 18], "whether": [7, 9, 14, 17, 18, 22, 31, 41, 42], "which": [7, 11, 14, 21, 34, 42, 45, 47, 48], "while": [3, 4, 21, 22, 31, 33, 42, 44, 47, 48], "why": [42, 43], "wide": [42, 48], "width": [9, 42], "wiki": 44, "wikipedia": [44, 48], "win32": 44, "window": 44, "wip": 16, "wish": 5, "with_soabi": 23, "with_union": 18, "within": [10, 14, 17, 42, 45, 47], "without": [4, 23, 42, 45], "won": [18, 21, 42, 46, 47, 48], "work": [4, 8, 21, 22, 23, 42, 46, 47, 49], "workaround": 42, "world": [4, 46, 47], "wormlik": 44, "worri": 4, "worth": 47, "would": [1, 21, 45, 46, 47], "wow": 48, "wrap": [11, 46, 48], "wrapper": [3, 17, 40, 42], "write": [4, 10, 17, 23, 25, 39, 42, 45, 46, 47, 49], "written": [23, 42, 45, 46], "x": [11, 42, 45], "x00": [4, 9, 11, 18, 31, 42, 46, 47], "x00baz": 4, "x01": [4, 9, 47, 48], "x02": [47, 48], "x02bar": 4, "x03": [47, 48], "x04": 47, "x04hello": 46, "x08": 11, "x0a": [46, 47], "x0d": [46, 47], "x1a": [46, 47], "x80": 11, "x86": 46, "x86_64": 7, "x88": 11, "x89png": [46, 47], "xff": [9, 18, 31], "xor": 45, "ye": [42, 46], "year": 48, "yet": [42, 47, 48], "yield": 44, "you": [1, 4, 5, 9, 17, 18, 23, 40, 42, 43, 44, 45, 46, 47, 48, 49], "your": [1, 18, 23, 42, 44, 46, 47, 48, 49], "yourself": 47, "zero": [11, 14, 18, 42], "zlib": [12, 47], "zlibcompress": [12, 45, 46, 47], "ztxt": [46, 47], "ztxtchunk": [46, 47], "\u00e6": 44, "\u0259": 44, "\u026a": 44, "\u02c8": 44}, "titles": ["<span class=\"section-number\">3. </span>Changelog", "<span class=\"section-number\">2. </span>Contribution Guidelines", "Development", "<span class=\"section-number\">1. </span>Roadmap", "Welcome to Caterpillar\u2019s documentation!", "Installation", "Abstract base classes", "Byteorder and Architecture", "Context", "Integer Types", "Exceptions", "Common Structs", "Compression Structs", "Cryptographic Structs", "Field Model", "Fields", "Library", "Struct Model", "Options", "Annotation Registry", "<span class=\"section-number\">2. </span>Abstract Objects Layer", "<span class=\"section-number\">2.1. </span>Atom Protocol", "<span class=\"section-number\">2.2. </span>Context Protocol", "<span class=\"section-number\">1. </span>Using the C API", "<span class=\"section-number\">5. </span>Defined Macros", "<span class=\"section-number\">6. </span>Module API", "<span class=\"section-number\">3.1. </span>Arch &amp; Endian Objects", "<span class=\"section-number\">3.9.4. </span>Bool Atoms", "<span class=\"section-number\">3.9.2. </span>Char Atoms", "<span class=\"section-number\">3.9.3. </span>Float Atoms", "<span class=\"section-number\">3.9. </span>Atom Objects", "<span class=\"section-number\">3.9.1. </span>Integer Atoms", "<span class=\"section-number\">3.9.5. </span>Padding Atoms", "<span class=\"section-number\">3.4. </span>Context Expressions", "<span class=\"section-number\">3.3. </span>Context Objects", "<span class=\"section-number\">3.5. </span>Context Path Objects", "<span class=\"section-number\">3.7. </span>Layer Objects", "<span class=\"section-number\">3. </span>Concrete Objects Layer", "<span class=\"section-number\">3.2. </span>Option Objects", "<span class=\"section-number\">3.6. </span>State Objects", "<span class=\"section-number\">3.8. </span>Struct Objects", "<span class=\"section-number\">4. </span>Packing and Unpacking", "Data Model", "Reference", "Introduction", "Operators", "<span class=\"section-number\">3. </span>Advanced Concepts", "<span class=\"section-number\">2. </span>Basic Concepts", "<span class=\"section-number\">1. </span>First Steps", "Tutorial"], "titleterms": {"": [4, 42, 45], "The": 46, "abstract": [6, 20], "advanc": 46, "an": 1, "annot": 19, "api": [3, 16, 23, 25, 43], "appetit": 4, "arch": 26, "architectur": 7, "arrai": 47, "atom": [3, 21, 27, 28, 29, 30, 31, 32], "attribut": 8, "base": [6, 17], "basic": [12, 47], "behaviour": 42, "between": 18, "binari": 33, "bitfield": [42, 46], "bool": 27, "byte": [11, 47], "byteord": [7, 42], "c": [3, 16, 23, 43], "caterpillar": [4, 44], "chain": 46, "challeng": [47, 48], "changelog": 0, "char": 28, "class": [6, 8, 17], "common": 11, "comparison": 44, "compress": [12, 47], "comput": 47, "con": 44, "concept": [46, 47], "concret": 37, "condit": 46, "configur": [18, 48], "const": 47, "constant": 47, "constbyt": 47, "contain": 42, "content": 15, "context": [6, 8, 22, 33, 34, 35, 42, 45, 47], "contribut": 1, "core": 13, "cryptograph": 13, "cstring": 47, "custom": [42, 46, 47], "data": [42, 48], "defin": [9, 24, 48], "detail": 42, "develop": [2, 42, 45], "differ": 18, "document": [4, 48], "doe": 44, "emul": 42, "end": 46, "endia": 48, "endian": 26, "enumer": 47, "even": 44, "exactli": 44, "except": 10, "express": [8, 33], "featur": 1, "field": [14, 15, 18, 42, 45, 46], "first": 48, "float": 29, "formal": 10, "function": 17, "gener": 1, "global": [9, 18], "greedi": 42, "guidelin": 1, "have": 1, "hold": 4, "how": 44, "i": [44, 48], "implement": 42, "indic": 4, "instal": 5, "integ": [9, 31, 47], "interfac": [6, 13, 18], "introduct": 44, "issu": 1, "lambda": 42, "layer": [20, 36, 37], "length": 47, "librari": 16, "list": 47, "macro": 24, "memori": 47, "method": 42, "minut": 4, "model": [14, 17, 42], "modifi": 42, "modul": 25, "name": 42, "new": 1, "next": 48, "note": [42, 45], "number": 47, "numer": 11, "object": [3, 18, 20, 26, 30, 34, 35, 36, 37, 38, 39, 40, 42, 47], "offset": 46, "oper": [9, 45, 46], "option": [18, 38], "other": 6, "pack": [41, 48], "pad": [32, 47], "pass": 47, "path": [8, 35, 42, 45], "perform": [27, 28, 29, 32], "pointer": 46, "pre": 9, "prefix": [42, 47], "pro": 44, "programm": 42, "protocol": [21, 22], "python": [3, 16, 43, 49], "question": 1, "refer": 43, "registri": 19, "roadmap": 3, "run": 1, "runtim": [10, 27, 28, 29, 32, 47], "sequenc": [18, 42, 45, 47], "sign": 9, "size": [18, 47], "special": [8, 11, 42, 47], "specif": [42, 45], "standard": [6, 13, 17, 42, 47], "start": 4, "state": 39, "step": 48, "string": [11, 47], "struct": [3, 6, 11, 12, 13, 17, 18, 40, 42, 45, 47, 48], "submit": 1, "support": [9, 12], "switch": 46, "tabl": 4, "templat": [17, 42, 46], "test": 1, "thi": 44, "tutori": 49, "type": [9, 12, 16, 18, 42, 47], "unari": 33, "union": [42, 46], "unpack": [41, 48], "unsign": 9, "up": 4, "us": [23, 44], "variabl": 47, "wait": 4, "welcom": 4, "what": [44, 48], "where": 4, "whet": 4, "why": 44, "work": [44, 48], "your": 4}})