Search.setIndex({"alltitles": {"Abstract Objects Layer": [[17, null]], "Abstract base classes": [[5, null]], "Advanced Concepts": [[45, null]], "Arch & Endian Objects": [[23, null]], "Arch Objects": [[23, "arch-objects"]], "Architecture": [[6, "architecture"]], "Arrays/Lists": [[46, "arrays-lists"]], "Atom Objects": [[28, null]], "Atom Protocol": [[18, null]], "Base classes": [[15, "base-classes"]], "Basic Concepts": [[46, null]], "Basic Core classes": [[14, null]], "Basic structs": [[10, "basic-structs"]], "Behaviour of structs and sequences": [[41, "id7"]], "Binary Expressions": [[31, "binary-expressions"]], "BitField": [[41, "bitfield"]], "BitField specific methods": [[41, "bitfield-specific-methods"]], "BitFields": [[45, "bitfields"]], "Bool Atoms": [[24, null]], "Byte Sequences": [[46, "byte-sequences"]], "Byteorder": [[6, "id1"]], "Byteorder and Architecture": [[6, null]], "Bytes": [[46, "bytes"]], "Bytes, Strings": [[9, "bytes-strings"]], "C API Reference": [[42, null]], "C Field Atoms": [[26, "c-field-atoms"]], "CString": [[46, "cstring"]], "Chaining": [[45, "chaining"]], "Challenge": [[46, null], [46, null], [46, null], [47, null]], "Changelog": [[0, null]], "Char Atoms": [[25, null]], "Common Structs": [[9, null]], "Comparison": [[43, "comparison"]], "Compression": [[46, "compression"]], "Compression Structs": [[10, null]], "Computed": [[46, "computed"]], "Concrete Objects Layer": [[36, null]], "Conditional fields": [[45, "conditional-fields"]], "Configuring structs": [[47, "configuring-structs"]], "Const": [[46, "const"]], "ConstBytes": [[46, "constbytes"]], "Constants": [[46, "constants"]], "Contents:": [[13, null]], "Context": [[5, "context"], [7, null], [41, "context"], [46, "context"]], "Context Expressions": [[31, null]], "Context Objects": [[32, null]], "Context Path Objects": [[33, null]], "Context Protocol": [[19, null]], "Context and Exceptions": [[14, null]], "Context classes": [[7, "context-classes"]], "Context lambda": [[41, "context-lambda"]], "Context path": [[41, "context-path"], [44, "context-path"]], "Context specific operations": [[44, "context-specific-operations"]], "Contribution Guidelines": [[1, null]], "Core structs": [[11, "core-structs"]], "Cryptographic Structs": [[11, null]], "Custom Operators": [[45, "custom-operators"]], "Custom-sized integer": [[46, "custom-sized-integer"]], "Customizing the object\u2019s byteorder": [[41, "customizing-the-object-s-byteorder"]], "Customizing the struct\u2019s type": [[41, "customizing-the-struct-s-type"]], "Data Model": [[41, null]], "Defined Macros": [[21, null]], "Defining structs": [[47, "defining-structs"]], "Developer\u2019s note": [[41, null], [44, null]], "Development": [[2, null]], "Documenting structs": [[47, "documenting-structs"]], "Emulating Struct Types": [[41, "emulating-struct-types"]], "Endian Objects": [[23, "endian-objects"]], "Enumerations": [[46, "enumerations"]], "Exceptions": [[8, null]], "Expressions": [[7, "expressions"]], "Field": [[41, "field"]], "Field Atom Objects": [[26, null]], "Field Model": [[12, null]], "Field Objects": [[34, null]], "Field options": [[16, "field-options"]], "Field specific operations": [[44, "field-specific-operations"]], "Fields": [[13, null]], "First Steps": [[47, null]], "Float Atoms": [[27, null]], "Formal exceptions": [[8, "formal-exceptions"]], "Global options": [[16, "global-options"]], "Greedy": [[41, "greedy"]], "Having a general question?": [[1, "having-a-general-question"]], "Hold up, wait a minute!": [[3, null]], "How does this even work?": [[43, "how-does-this-even-work"]], "Implementation Detail": [[41, null]], "Implementation Note": [[41, null], [41, null]], "Indices and tables": [[3, "indices-and-tables"]], "Installation": [[4, null]], "Integer Atoms": [[29, null]], "Interface": [[16, "interface"]], "Introduction": [[43, null]], "Layer Objects": [[35, null]], "Library": [[14, null]], "Memory": [[46, "memory"]], "Modifying fields": [[41, "modifying-fields"]], "Module API": [[22, null]], "Next Steps": [[47, "next-steps"]], "Numbers": [[46, "numbers"]], "Numeric Structs": [[9, "numeric-structs"]], "Object sizes between different configuration options": [[16, "id4"]], "Offset": [[45, "offset"]], "Operators": [[44, null], [45, "operators"]], "Option Objects": [[37, null]], "Options": [[16, null]], "Options by type": [[16, "options-by-type"]], "Other base classes": [[5, "other-base-classes"]], "Packing and Unpacking": [[40, null]], "Packing data": [[47, "packing-data"]], "Padding": [[46, "padding"]], "Padding Atoms": [[30, null]], "Pass": [[46, "pass"]], "Pointers": [[45, "pointers"]], "Prefixed": [[41, "prefixed"], [46, "prefixed"]], "Programmers Note": [[41, null]], "Programmers Note:": [[41, null]], "Pros & Cons": [[43, "pros-cons"]], "Python Field Atoms": [[26, "python-field-atoms"]], "Python Reference": [[42, null]], "Recommendations": [[29, "recommendations"]], "Reference": [[42, null]], "Roadmap": [[48, null]], "Running Tests": [[1, "running-tests"]], "Runtime Performance": [[24, "runtime-performance"], [25, "runtime-performance"], [27, "runtime-performance"], [30, "runtime-performance"]], "Runtime exceptions": [[8, "runtime-exceptions"]], "Runtime length of objects": [[46, "runtime-length-of-objects"]], "Sequence": [[41, "sequence"]], "Sequence options": [[16, "sequence-options"]], "Sequence specific operators": [[44, "sequence-specific-operators"]], "Special Attributes": [[7, "special-attributes"]], "Special Structs": [[9, "special-structs"]], "Special method names": [[41, "special-method-names"]], "Special paths": [[7, "special-paths"]], "Specials": [[46, "specials"]], "Standard Structs": [[46, "standard-structs"]], "Standard Types": [[41, "standard-types"], [46, "standard-types"]], "Standard functions": [[15, "standard-functions"]], "Standard interface": [[5, "standard-interface"], [11, "standard-interface"]], "State Objects": [[38, null]], "String": [[46, "string"]], "String Types": [[46, "string-types"]], "Struct": [[5, "struct"], [41, "struct"]], "Struct Model": [[15, null]], "Struct Objects": [[39, null]], "Struct containers": [[41, "struct-containers"]], "Struct model": [[14, null]], "Struct operators": [[44, "struct-operators"]], "Struct options": [[16, "struct-options"]], "Structs, Sequences and Fields": [[41, "structs-sequences-and-fields"]], "Submit a new Feature": [[1, "submit-a-new-feature"]], "Submit an Issue": [[1, "submit-an-issue"]], "Supported compression types": [[10, "supported-compression-types"]], "Switch": [[45, "switch"]], "Template Containers": [[41, "template-containers"]], "Templates": [[15, "templates"], [41, "templates"], [45, "templates"]], "The End!": [[45, "the-end"]], "Tutorial": [[48, null]], "Unary Expressions": [[31, "unary-expressions"]], "Union": [[41, "union"]], "Unions": [[45, "unions"]], "Unpacking data": [[47, "unpacking-data"]], "Using the C API": [[20, null]], "Variable-sized integer": [[46, "variable-sized-integer"]], "Welcome to Caterpillar\u2019s documentation!": [[3, null]], "What exactly is a caterpillar?": [[43, null]], "What is endianess?": [[47, null]], "Where to start?": [[3, "where-to-start"]], "Whetting Your Appetite": [[3, "whetting-your-appetite"]], "Why use Caterpillar?": [[43, "why-use-caterpillar"]], "Working with structs": [[47, "working-with-structs"]]}, "docnames": ["development/changelog", "development/contribution", "development/index", "index", "installing/index", "library/abc", "library/byteorder", "library/context", "library/exceptions", "library/fields/common", "library/fields/compression", "library/fields/crypto", "library/fields/field_model", "library/fields/index", "library/index", "library/model", "library/options", "reference/capi/abstract", "reference/capi/atom", "reference/capi/context", "reference/capi/extension", "reference/capi/macros", "reference/capi/module", "reference/capi/objects/arch", "reference/capi/objects/atoms/boolatom", "reference/capi/objects/atoms/charatom", "reference/capi/objects/atoms/fieldatom", "reference/capi/objects/atoms/floatatom", "reference/capi/objects/atoms/index", "reference/capi/objects/atoms/intatom", "reference/capi/objects/atoms/paddingatom", "reference/capi/objects/contextexpr", "reference/capi/objects/contextobj", "reference/capi/objects/contextpath", "reference/capi/objects/fieldobj", "reference/capi/objects/layer", "reference/capi/objects/objimpl", "reference/capi/objects/option", "reference/capi/objects/state", "reference/capi/objects/struct", "reference/capi/parsing", "reference/datamodel", "reference/index", "reference/introduction", "reference/operators", "tutorial/advanced", "tutorial/basics", "tutorial/first_steps", "tutorial/index"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["development/changelog.rst", "development/contribution.rst", "development/index.rst", "index.rst", "installing/index.rst", "library/abc.rst", "library/byteorder.rst", "library/context.rst", "library/exceptions.rst", "library/fields/common.rst", "library/fields/compression.rst", "library/fields/crypto.rst", "library/fields/field_model.rst", "library/fields/index.rst", "library/index.rst", "library/model.rst", "library/options.rst", "reference/capi/abstract.rst", "reference/capi/atom.rst", "reference/capi/context.rst", "reference/capi/extension.rst", "reference/capi/macros.rst", "reference/capi/module.rst", "reference/capi/objects/arch.rst", "reference/capi/objects/atoms/boolatom.rst", "reference/capi/objects/atoms/charatom.rst", "reference/capi/objects/atoms/fieldatom.rst", "reference/capi/objects/atoms/floatatom.rst", "reference/capi/objects/atoms/index.rst", "reference/capi/objects/atoms/intatom.rst", "reference/capi/objects/atoms/paddingatom.rst", "reference/capi/objects/contextexpr.rst", "reference/capi/objects/contextobj.rst", "reference/capi/objects/contextpath.rst", "reference/capi/objects/fieldobj.rst", "reference/capi/objects/layer.rst", "reference/capi/objects/objimpl.rst", "reference/capi/objects/option.rst", "reference/capi/objects/state.rst", "reference/capi/objects/struct.rst", "reference/capi/parsing.rst", "reference/datamodel.rst", "reference/index.rst", "reference/introduction.rst", "reference/operators.rst", "tutorial/advanced.rst", "tutorial/basics.rst", "tutorial/first_steps.rst", "tutorial/index.rst"], "indexentries": {"__and__() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.__and__", false]], "__bits__ (caterpillar.fields.fieldstruct attribute)": [[12, "caterpillar.fields.FieldStruct.__bits__", false]], "__bits__() (object method)": [[41, "object.__bits__", false]], "__byteorder__ (caterpillar.fields.fieldstruct attribute)": [[12, "caterpillar.fields.FieldStruct.__byteorder__", false]], "__byteorder__ (object attribute)": [[41, "object.__byteorder__", false]], "__init__() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.__init__", false]], "__name__ (field attribute)": [[41, "field.__name__", false]], "__pack__() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.__pack__", false]], "__pack__() (object method)": [[41, "object.__pack__", false]], "__rand__() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.__rand__", false]], "__repr__() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.__repr__", false]], "__set_byteorder__() (object method)": [[41, "object.__set_byteorder__", false]], "__size__() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.__size__", false]], "__size__() (object method)": [[41, "object.__size__", false]], "__struct__ (class attribute)": [[41, "class.__struct__", false]], "__template__ (class attribute)": [[41, "class.__template__", false]], "__type__() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.__type__", false]], "__type__() (object method)": [[41, "object.__type__", false]], "__unpack__() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.__unpack__", false]], "__unpack__() (object method)": [[41, "object.__unpack__", false]], "_containsstruct (class in caterpillar.abc)": [[5, "caterpillar.abc._ContainsStruct", false]], "_contextlambda (class in caterpillar.abc)": [[5, "caterpillar.abc._ContextLambda", false]], "_contextlike (class in caterpillar.abc)": [[5, "caterpillar.abc._ContextLike", false]], "_cp_name (c macro)": [[21, "c._Cp_Name", false]], "_enumlike (class in caterpillar.abc)": [[5, "caterpillar.abc._EnumLike", false]], "_modulestate (c struct)": [[22, "c._modulestate", false]], "_modulestate.any_type (c member)": [[22, "c._modulestate.Any_Type", false]], "_modulestate.bytesio_type (c member)": [[22, "c._modulestate.BytesIO_Type", false]], "_modulestate.cp_arch__host (c member)": [[22, "c._modulestate.cp_arch__host", false]], "_modulestate.cp_endian__big (c member)": [[22, "c._modulestate.cp_endian__big", false]], "_modulestate.cp_endian__little (c member)": [[22, "c._modulestate.cp_endian__little", false]], "_modulestate.cp_endian__native (c member)": [[22, "c._modulestate.cp_endian__native", false]], "_modulestate.cp_option__discard_const (c member)": [[22, "c._modulestate.cp_option__discard_const", false]], "_modulestate.cp_option__discard_unnamed (c member)": [[22, "c._modulestate.cp_option__discard_unnamed", false]], "_modulestate.cp_option__dynamic (c member)": [[22, "c._modulestate.cp_option__dynamic", false]], "_modulestate.cp_option__eval (c member)": [[22, "c._modulestate.cp_option__eval", false]], "_modulestate.cp_option__global_field_options (c member)": [[22, "c._modulestate.cp_option__global_field_options", false]], "_modulestate.cp_option__global_struct_options (c member)": [[22, "c._modulestate.cp_option__global_struct_options", false]], "_modulestate.cp_option__keep_position (c member)": [[22, "c._modulestate.cp_option__keep_position", false]], "_modulestate.cp_option__replace_types (c member)": [[22, "c._modulestate.cp_option__replace_types", false]], "_modulestate.cp_option__sequential (c member)": [[22, "c._modulestate.cp_option__sequential", false]], "_modulestate.cp_option__slots (c member)": [[22, "c._modulestate.cp_option__slots", false]], "_modulestate.cp_option__union (c member)": [[22, "c._modulestate.cp_option__union", false]], "_modulestate.list_type (c member)": [[22, "c._modulestate.List_Type", false]], "_modulestate.str___annotations__ (c member)": [[22, "c._modulestate.str___annotations__", false]], "_modulestate.str___dict__ (c member)": [[22, "c._modulestate.str___dict__", false]], "_modulestate.str___match_args__ (c member)": [[22, "c._modulestate.str___match_args__", false]], "_modulestate.str___mro__ (c member)": [[22, "c._modulestate.str___mro__", false]], "_modulestate.str___pack__ (c member)": [[22, "c._modulestate.str___pack__", false]], "_modulestate.str___pack_many__ (c member)": [[22, "c._modulestate.str___pack_many__", false]], "_modulestate.str___qualname__ (c member)": [[22, "c._modulestate.str___qualname__", false]], "_modulestate.str___size__ (c member)": [[22, "c._modulestate.str___size__", false]], "_modulestate.str___slots__ (c member)": [[22, "c._modulestate.str___slots__", false]], "_modulestate.str___struct__ (c member)": [[22, "c._modulestate.str___struct__", false]], "_modulestate.str___type__ (c member)": [[22, "c._modulestate.str___type__", false]], "_modulestate.str___unpack__ (c member)": [[22, "c._modulestate.str___unpack__", false]], "_modulestate.str___unpack_many__ (c member)": [[22, "c._modulestate.str___unpack_many__", false]], "_modulestate.str___weakref__ (c member)": [[22, "c._modulestate.str___weakref__", false]], "_modulestate.str_builder_process (c member)": [[22, "c._modulestate.str_builder_process", false]], "_modulestate.str_bytesio_getvalue (c member)": [[22, "c._modulestate.str_bytesio_getvalue", false]], "_modulestate.str_close (c member)": [[22, "c._modulestate.str_close", false]], "_modulestate.str_ctx__getattr (c member)": [[22, "c._modulestate.str_ctx__getattr", false]], "_modulestate.str_ctx__root (c member)": [[22, "c._modulestate.str_ctx__root", false]], "_modulestate.str_path_delim (c member)": [[22, "c._modulestate.str_path_delim", false]], "_modulestate.str_pattern_match (c member)": [[22, "c._modulestate.str_pattern_match", false]], "_modulestate.str_read (c member)": [[22, "c._modulestate.str_read", false]], "_modulestate.str_seek (c member)": [[22, "c._modulestate.str_seek", false]], "_modulestate.str_start (c member)": [[22, "c._modulestate.str_start", false]], "_modulestate.str_strict (c member)": [[22, "c._modulestate.str_strict", false]], "_modulestate.str_tell (c member)": [[22, "c._modulestate.str_tell", false]], "_modulestate.str_write (c member)": [[22, "c._modulestate.str_write", false]], "_modulestate.union_type (c member)": [[22, "c._modulestate.Union_Type", false]], "_structlike (class in caterpillar.abc)": [[5, "caterpillar.abc._StructLike", false]], "_supportspack (class in caterpillar.abc)": [[5, "caterpillar.abc._SupportsPack", false]], "_supportssize (class in caterpillar.abc)": [[5, "caterpillar.abc._SupportsSize", false]], "_supportsunpack (class in caterpillar.abc)": [[5, "caterpillar.abc._SupportsUnpack", false]], "_switch (class in caterpillar.abc)": [[5, "caterpillar.abc._Switch", false]], "add_field() (caterpillar.model.sequence method)": [[15, "caterpillar.model.Sequence.add_field", false]], "algorithm() (caterpillar.fields.encrypted method)": [[11, "caterpillar.fields.Encrypted.algorithm", false]], "amount (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.amount", false]], "apply() (caterpillar.byteorder.byteorder method)": [[6, "caterpillar.byteorder.ByteOrder.apply", false]], "arch (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.arch", false]], "arch (caterpillar.model.sequence attribute)": [[15, "caterpillar.model.Sequence.arch", false]], "arch (class in caterpillar.byteorder)": [[6, "caterpillar.byteorder.Arch", false]], "bigendian (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.BigEndian", false]], "binaryexpression (class in caterpillar.context)": [[7, "caterpillar.context.BinaryExpression", false]], "bitfield (class in caterpillar.model)": [[15, "caterpillar.model.BitField", false]], "bitfield() (in module caterpillar.model)": [[15, "caterpillar.model.bitfield", false]], "bitfieldgroup (class in caterpillar.model)": [[15, "caterpillar.model.BitFieldGroup", false]], "bits (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.bits", false]], "boolean (caterpillar.fields attribute)": [[9, "caterpillar.fields.boolean", false]], "built-in function": [[41, "object.__call__", false], [44, "field.__ior__", false], [44, "field.__ixor__", false], [44, "field.__or__", false], [44, "field.__xor__", false], [44, "path.__call__", false], [44, "path.__getitem__", false], [44, "sequence.__add__", false], [44, "sequence.__iadd__", false], [44, "sequence.__isub__", false], [44, "sequence.__sub__", false], [44, "struct.__and__", false], [44, "struct.__floordiv__", false], [44, "struct.__getitem__", false], [44, "struct.__matmul__", false], [44, "struct.__rshift__", false], [44, "struct.__rsub__", false]], "byteorder (class in caterpillar.byteorder)": [[6, "caterpillar.byteorder.ByteOrder", false]], "byteorder() (in module caterpillar.byteorder)": [[6, "caterpillar.byteorder.byteorder", false]], "byteorder.alignment (class in caterpillar.byteorder)": [[6, "caterpillar.byteorder.ByteOrder.Alignment", false]], "byteorder.size (class in caterpillar.byteorder)": [[6, "caterpillar.byteorder.ByteOrder.Size", false]], "byteorder_field (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.BYTEORDER_FIELD", false]], "bytes (class in caterpillar.fields)": [[9, "caterpillar.fields.Bytes", false]], "bz2compressed() (in module caterpillar.fields)": [[10, "caterpillar.fields.Bz2Compressed", false]], "caterpillar.options.o_array_factory (built-in variable)": [[16, "caterpillar.options.O_ARRAY_FACTORY", false]], "caterpillar.options.s_discard_const (built-in variable)": [[16, "caterpillar.options.S_DISCARD_CONST", false]], "caterpillar.options.s_discard_unnamed (built-in variable)": [[16, "caterpillar.options.S_DISCARD_UNNAMED", false]], "caterpillar.options.s_eval_annotations (built-in variable)": [[16, "caterpillar.options.S_EVAL_ANNOTATIONS", false]], "caterpillar.options.s_replace_types (built-in variable)": [[16, "caterpillar.options.S_REPLACE_TYPES", false]], "caterpillar.options.s_slots (built-in variable)": [[16, "caterpillar.options.S_SLOTS", false]], "caterpillar.options.s_union (built-in variable)": [[16, "caterpillar.options.S_UNION", false]], "chain (class in caterpillar.fields)": [[12, "caterpillar.fields.Chain", false]], "char (caterpillar.fields attribute)": [[9, "caterpillar.fields.char", false]], "compressed (class in caterpillar.fields)": [[10, "caterpillar.fields.Compressed", false]], "computed (class in caterpillar.fields)": [[9, "caterpillar.fields.Computed", false]], "condition (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.condition", false]], "conditioncontext (class in caterpillar.context)": [[7, "caterpillar.context.ConditionContext", false]], "configure() (in module caterpillar.options)": [[16, "caterpillar.options.configure", false]], "const (class in caterpillar.fields)": [[9, "caterpillar.fields.Const", false]], "constbytes (class in caterpillar.fields)": [[9, "caterpillar.fields.ConstBytes", false]], "conststring (class in caterpillar.fields)": [[9, "caterpillar.fields.ConstString", false]], "context (class in caterpillar.context)": [[7, "caterpillar.context.Context", false]], "contextlength (class in caterpillar.context)": [[7, "caterpillar.context.ContextLength", false]], "contextpath (class in caterpillar.context)": [[7, "caterpillar.context.ContextPath", false]], "cparch_check (c function)": [[23, "c.CpArch_Check", false]], "cparch_checkexact (c function)": [[23, "c.CpArch_CheckExact", false]], "cparch_type (c var)": [[23, "c.CpArch_Type", false]], "cparchobject (c type)": [[23, "c.CpArchObject", false]], "cpatom_callpack (c function)": [[18, "c.CpAtom_CallPack", false]], "cpatom_callsize (c function)": [[18, "c.CpAtom_CallSize", false]], "cpatom_canpack (c function)": [[18, "c.CpAtom_CanPack", false]], "cpatom_canunpack (c function)": [[18, "c.CpAtom_CanUnpack", false]], "cpatom_fastcanpack (c function)": [[18, "c.CpAtom_FastCanPack", false]], "cpatom_fastcanunpack (c function)": [[18, "c.CpAtom_FastCanUnpack", false]], "cpatom_fasthassize (c function)": [[18, "c.CpAtom_FastHasSize", false]], "cpatom_fasthastype (c function)": [[18, "c.CpAtom_FastHasType", false]], "cpatom_hassize (c function)": [[18, "c.CpAtom_HasSize", false]], "cpatom_hastype (c function)": [[18, "c.CpAtom_HasType", false]], "cpatom_type (c var)": [[18, "c.CpAtom_Type", false]], "cpatomobject (c type)": [[18, "c.CpAtomObject", false]], "cpbinaryexpr_new (c function)": [[31, "c.CpBinaryExpr_New", false]], "cpbinaryexpr_new.cpbinaryexpr_op_eq (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_Op_EQ", false]], "cpbinaryexpr_new.cpbinaryexpr_op_ge (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_Op_GE", false]], "cpbinaryexpr_new.cpbinaryexpr_op_gt (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_Op_GT", false]], "cpbinaryexpr_new.cpbinaryexpr_op_le (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_Op_LE", false]], "cpbinaryexpr_new.cpbinaryexpr_op_lt (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_Op_LT", false]], "cpbinaryexpr_new.cpbinaryexpr_op_ne (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_Op_NE", false]], "cpbinaryexpr_new.cpbinaryexpr_opadd (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpAdd", false]], "cpbinaryexpr_new.cpbinaryexpr_opand (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpAnd", false]], "cpbinaryexpr_new.cpbinaryexpr_opbitand (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpBitAnd", false]], "cpbinaryexpr_new.cpbinaryexpr_opbitor (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpBitOr", false]], "cpbinaryexpr_new.cpbinaryexpr_opbitxor (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpBitXor", false]], "cpbinaryexpr_new.cpbinaryexpr_opfloordiv (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpFloorDiv", false]], "cpbinaryexpr_new.cpbinaryexpr_oplshift (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpLShift", false]], "cpbinaryexpr_new.cpbinaryexpr_opmatmul (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpMatMul", false]], "cpbinaryexpr_new.cpbinaryexpr_opmod (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpMod", false]], "cpbinaryexpr_new.cpbinaryexpr_opmul (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpMul", false]], "cpbinaryexpr_new.cpbinaryexpr_opor (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpOr", false]], "cpbinaryexpr_new.cpbinaryexpr_oppow (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpPow", false]], "cpbinaryexpr_new.cpbinaryexpr_oprshift (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpRShift", false]], "cpbinaryexpr_new.cpbinaryexpr_opsub (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpSub", false]], "cpbinaryexpr_new.cpbinaryexpr_optruediv (c var)": [[31, "c.CpBinaryExpr_New.CpBinaryExpr_OpTrueDiv", false]], "cpbinaryexpr_type (c var)": [[31, "c.CpBinaryExpr_Type", false]], "cpbinaryexprobject (c type)": [[31, "c.CpBinaryExprObject", false]], "cpboolatom_pack (c function)": [[24, "c.CpBoolAtom_Pack", false]], "cpboolatom_type (c var)": [[24, "c.CpBoolAtom_Type", false]], "cpboolatom_unpack (c function)": [[24, "c.CpBoolAtom_Unpack", false]], "cpboolatomobject (c type)": [[24, "c.CpBoolAtomObject", false]], "cpcharatom_pack (c function)": [[25, "c.CpCharAtom_Pack", false]], "cpcharatom_type (c var)": [[25, "c.CpCharAtom_Type", false]], "cpcharatom_unpack (c function)": [[25, "c.CpCharAtom_Unpack", false]], "cpcharatomobject (c type)": [[25, "c.CpCharAtomObject", false]], "cpcontext_check (c function)": [[32, "c.CpContext_Check", false]], "cpcontext_checkexact (c function)": [[32, "c.CpContext_CheckExact", false]], "cpcontext_getattr (c function)": [[32, "c.CpContext_GetAttr", false]], "cpcontext_getattrstring (c function)": [[32, "c.CpContext_GetAttrString", false]], "cpcontext_new (c function)": [[32, "c.CpContext_New", false]], "cpcontext_type (c var)": [[32, "c.CpContext_Type", false]], "cpcontextobject (c type)": [[32, "c.CpContextObject", false]], "cpcontextpath_check (c function)": [[33, "c.CpContextPath_Check", false]], "cpcontextpath_checkexact (c function)": [[33, "c.CpContextPath_CheckExact", false]], "cpcontextpath_fromstring (c function)": [[33, "c.CpContextPath_FromString", false]], "cpcontextpath_new (c function)": [[33, "c.CpContextPath_New", false]], "cpcontextpath_type (c var)": [[33, "c.CpContextPath_Type", false]], "cpcontextpathobject (c type)": [[33, "c.CpContextPathObject", false]], "cpendian_check (c function)": [[23, "c.CpEndian_Check", false]], "cpendian_checkexact (c function)": [[23, "c.CpEndian_CheckExact", false]], "cpendian_islittleendian (c function)": [[23, "c.CpEndian_IsLittleEndian", false]], "cpendian_type (c var)": [[23, "c.CpEndian_Type", false]], "cpendianobject (c type)": [[23, "c.CpEndianObject", false]], "cpfield_check (c function)": [[34, "c.CpField_Check", false]], "cpfield_checkexact (c function)": [[34, "c.CpField_CheckExact", false]], "cpfield_evalswitch (c function)": [[34, "c.CpField_EvalSwitch", false]], "cpfield_getlength (c function)": [[34, "c.CpField_GetLength", false]], "cpfield_getoffset (c function)": [[34, "c.CpField_GetOffset", false]], "cpfield_hascondition (c function)": [[34, "c.CpField_HasCondition", false]], "cpfield_isenabled (c function)": [[34, "c.CpField_IsEnabled", false]], "cpfield_new (c function)": [[34, "c.CpField_New", false]], "cpfield_type (c var)": [[34, "c.CpField_Type", false]], "cpfieldatom_check (c function)": [[26, "c.CpFieldAtom_Check", false]], "cpfieldatom_checkexact (c function)": [[26, "c.CpFieldAtom_CheckExact", false]], "cpfieldatom_head (c macro)": [[26, "c.CpFieldAtom_HEAD", false]], "cpfieldatom_type (c var)": [[26, "c.CpFieldAtom_Type", false]], "cpfieldatomobject (c type)": [[26, "c.CpFieldAtomObject", false]], "cpfieldcatom_catom (c macro)": [[26, "c.CpFieldCAtom_CATOM", false]], "cpfieldcatom_check (c function)": [[26, "c.CpFieldCAtom_Check", false]], "cpfieldcatom_checkexact (c function)": [[26, "c.CpFieldCAtom_CheckExact", false]], "cpfieldcatom_head (c macro)": [[26, "c.CpFieldCAtom_HEAD", false]], "cpfieldcatom_type (c var)": [[26, "c.CpFieldCAtom_Type", false]], "cpfieldcatomobject (c type)": [[26, "c.CpFieldCAtomObject", false]], "cpfieldobject (c type)": [[34, "c.CpFieldObject", false]], "cpfloatatom_pack (c function)": [[27, "c.CpFloatAtom_Pack", false]], "cpfloatatom_type (c var)": [[27, "c.CpFloatAtom_Type", false]], "cpfloatatom_unpack (c function)": [[27, "c.CpFloatAtom_Unpack", false]], "cpfloatatomobject (c type)": [[27, "c.CpFloatAtomObject", false]], "cpintatom_type (c var)": [[29, "c.CpIntAtom_Type", false]], "cpintatomobject (c type)": [[29, "c.CpIntAtomObject", false]], "cpintatomobject._m_little_endian (c var)": [[29, "c.CpIntAtomObject._m_little_endian", false]], "cpintatomobject._m_signed (c var)": [[29, "c.CpIntAtomObject._m_signed", false]], "cpintatomobject.m_byte_count (c var)": [[29, "c.CpIntAtomObject.m_byte_count", false]], "cplayer_appendpath (c function)": [[35, "c.CpLayer_AppendPath", false]], "cplayer_check (c function)": [[35, "c.CpLayer_Check", false]], "cplayer_checkexact (c function)": [[35, "c.CpLayer_CheckExact", false]], "cplayer_invalidate (c function)": [[35, "c.CpLayer_Invalidate", false]], "cplayer_new (c function)": [[35, "c.CpLayer_New", false]], "cplayer_setsequence (c function)": [[35, "c.CpLayer_SetSequence", false]], "cplayer_type (c var)": [[35, "c.CpLayer_Type", false]], "cplayerobject (c type)": [[35, "c.CpLayerObject", false]], "cpmodule (c var)": [[22, "c.CpModule", false]], "cpmodule_setuptype (c macro)": [[22, "c.CpModule_SetupType", false]], "cpobject_create (c function)": [[21, "c.CpObject_Create", false]], "cpobject_createnoargs (c function)": [[21, "c.CpObject_CreateNoArgs", false]], "cpobject_createoneargs (c function)": [[21, "c.CpObject_CreateOneArgs", false]], "cpoption_check (c function)": [[37, "c.CpOption_Check", false]], "cpoption_checkexact (c function)": [[37, "c.CpOption_CheckExact", false]], "cpoption_type (c var)": [[37, "c.CpOption_Type", false]], "cpoptionobject (c type)": [[37, "c.CpOptionObject", false]], "cppack (c function)": [[40, "c.CpPack", false]], "cppack._cp_pack (c function)": [[40, "c.CpPack._Cp_Pack", false]], "cppack._cppack_evallength (c function)": [[40, "c.CpPack._CpPack_EvalLength", false]], "cppack.cppack_catom (c function)": [[40, "c.CpPack.CpPack_CAtom", false]], "cppack.cppack_common (c function)": [[40, "c.CpPack.CpPack_Common", false]], "cppack.cppack_field (c function)": [[40, "c.CpPack.CpPack_Field", false]], "cppack.cppack_struct (c function)": [[40, "c.CpPack.CpPack_Struct", false]], "cppaddingatom_pack (c function)": [[30, "c.CpPaddingAtom_Pack", false]], "cppaddingatom_packmany (c function)": [[30, "c.CpPaddingAtom_PackMany", false]], "cppaddingatom_type (c var)": [[30, "c.CpPaddingAtom_Type", false]], "cppaddingatom_unpack (c function)": [[30, "c.CpPaddingAtom_Unpack", false]], "cppaddingatom_unpackmany (c function)": [[30, "c.CpPaddingAtom_UnpackMany", false]], "cppaddingatomobject (c type)": [[30, "c.CpPaddingAtomObject", false]], "cpsizeof (c function)": [[40, "c.CpSizeOf", false]], "cpsizeof_common (c function)": [[40, "c.CpSizeOf_Common", false]], "cpsizeof_field (c function)": [[40, "c.CpSizeOf_Field", false]], "cpsizeof_struct (c function)": [[40, "c.CpSizeOf_Struct", false]], "cpstate_check (c function)": [[38, "c.CpState_Check", false]], "cpstate_checkexact (c function)": [[38, "c.CpState_CheckExact", false]], "cpstate_new (c function)": [[38, "c.CpState_New", false]], "cpstate_read (c function)": [[38, "c.CpState_Read", false]], "cpstate_readfully (c function)": [[38, "c.CpState_ReadFully", false]], "cpstate_seek (c function)": [[38, "c.CpState_Seek", false]], "cpstate_setglobals (c function)": [[38, "c.CpState_SetGlobals", false]], "cpstate_tell (c function)": [[38, "c.CpState_Tell", false]], "cpstate_type (c var)": [[38, "c.CpState_Type", false]], "cpstate_write (c function)": [[38, "c.CpState_Write", false]], "cpstateobject (c type)": [[38, "c.CpStateObject", false]], "cpstruct_addfield (c function)": [[39, "c.CpStruct_AddField", false]], "cpstruct_addfieldinfo (c function)": [[39, "c.CpStruct_AddFieldInfo", false]], "cpstruct_check (c function)": [[39, "c.CpStruct_Check", false]], "cpstruct_checkexact (c function)": [[39, "c.CpStruct_CheckExact", false]], "cpstruct_getannotations (c function)": [[39, "c.CpStruct_GetAnnotations", false]], "cpstruct_hasoption (c function)": [[39, "c.CpStruct_HasOption", false]], "cpstruct_new (c function)": [[39, "c.CpStruct_New", false]], "cpstruct_replacetype (c function)": [[39, "c.CpStruct_ReplaceType", false]], "cpstruct_type (c var)": [[39, "c.CpStruct_Type", false]], "cpstructfieldinfo_check (c function)": [[39, "c.CpStructFieldInfo_Check", false]], "cpstructfieldinfo_checkexact (c function)": [[39, "c.CpStructFieldInfo_CheckExact", false]], "cpstructfieldinfo_new (c function)": [[39, "c.CpStructFieldInfo_New", false]], "cpstructfieldinfo_type (c var)": [[39, "c.CpStructFieldInfo_Type", false]], "cpstructfieldinfoobject (c type)": [[39, "c.CpStructFieldInfoObject", false]], "cpstructmodel_check (c function)": [[39, "c.CpStructModel_Check", false]], "cpstructmodel_getstruct (c function)": [[39, "c.CpStructModel_GetStruct", false]], "cpstructobject (c type)": [[39, "c.CpStructObject", false]], "cptypeof (c function)": [[40, "c.CpTypeOf", false]], "cptypeof_common (c function)": [[40, "c.CpTypeOf_Common", false]], "cptypeof_field (c function)": [[40, "c.CpTypeOf_Field", false]], "cpunaryexpr_new (c function)": [[31, "c.CpUnaryExpr_New", false]], "cpunaryexpr_new.cpunaryexpr_opneg (c var)": [[31, "c.CpUnaryExpr_New.CpUnaryExpr_OpNeg", false]], "cpunaryexpr_new.cpunaryexpr_opnot (c var)": [[31, "c.CpUnaryExpr_New.CpUnaryExpr_OpNot", false]], "cpunaryexpr_new.cpunaryexpr_oppos (c var)": [[31, "c.CpUnaryExpr_New.CpUnaryExpr_OpPos", false]], "cpunaryexpr_type (c var)": [[31, "c.CpUnaryExpr_Type", false]], "cpunaryexprobject (c type)": [[31, "c.CpUnaryExprObject", false]], "cpunpack (c function)": [[40, "c.CpUnpack", false]], "cpunpack._cp_unpack (c function)": [[40, "c.CpUnpack._Cp_Unpack", false]], "cpunpack.cpunpack_catom (c function)": [[40, "c.CpUnpack.CpUnpack_CAtom", false]], "cpunpack.cpunpack_common (c function)": [[40, "c.CpUnpack.CpUnpack_Common", false]], "cpunpack.cpunpack_field (c function)": [[40, "c.CpUnpack.CpUnpack_Field", false]], "cpunpack.cpunpack_struct (c function)": [[40, "c.CpUnpack.CpUnpack_Struct", false]], "cstring (class in caterpillar.fields)": [[9, "caterpillar.fields.CString", false]], "ctx": [[41, "ctx", false]], "ctx (caterpillar.context attribute)": [[7, "caterpillar.context.ctx", false]], "ctx_field": [[41, "CTX_FIELD", false]], "ctx_field (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_FIELD", false]], "ctx_index": [[41, "CTX_INDEX", false]], "ctx_index (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_INDEX", false]], "ctx_object": [[41, "CTX_OBJECT", false]], "ctx_object (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_OBJECT", false]], "ctx_offsets": [[41, "CTX_OFFSETS", false]], "ctx_offsets (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_OFFSETS", false]], "ctx_parent": [[41, "CTX_PARENT", false]], "ctx_parent (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_PARENT", false]], "ctx_path": [[41, "CTX_PATH", false]], "ctx_path (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_PATH", false]], "ctx_pos": [[41, "CTX_POS", false]], "ctx_pos (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_POS", false]], "ctx_seq (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_SEQ", false]], "ctx_stream": [[41, "CTX_STREAM", false]], "ctx_stream (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_STREAM", false]], "ctx_value": [[41, "CTX_VALUE", false]], "ctx_value (caterpillar.context attribute)": [[7, "caterpillar.context.CTX_VALUE", false]], "decode() (caterpillar.fields.compressed method)": [[10, "caterpillar.fields.Compressed.decode", false]], "decode() (caterpillar.fields.const method)": [[9, "caterpillar.fields.Const.decode", false]], "decode() (caterpillar.fields.enum method)": [[9, "caterpillar.fields.Enum.decode", false]], "decode() (caterpillar.fields.transformer method)": [[9, "caterpillar.fields.Transformer.decode", false]], "default (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.default", false]], "del_field() (caterpillar.model.sequence method)": [[15, "caterpillar.model.Sequence.del_field", false]], "delegationerror (class in caterpillar.exception)": [[8, "caterpillar.exception.DelegationError", false]], "derive() (in module caterpillar.model)": [[15, "caterpillar.model.derive", false]], "dynamicsizeerror (class in caterpillar.exception)": [[8, "caterpillar.exception.DynamicSizeError", false]], "elseif (class in caterpillar.fields)": [[12, "caterpillar.fields.ElseIf", false]], "encode() (caterpillar.fields.compressed method)": [[10, "caterpillar.fields.Compressed.encode", false]], "encode() (caterpillar.fields.const method)": [[9, "caterpillar.fields.Const.encode", false]], "encode() (caterpillar.fields.enum method)": [[9, "caterpillar.fields.Enum.encode", false]], "encode() (caterpillar.fields.transformer method)": [[9, "caterpillar.fields.Transformer.encode", false]], "encrypted (class in caterpillar.fields)": [[11, "caterpillar.fields.Encrypted", false]], "enum (class in caterpillar.fields)": [[9, "caterpillar.fields.Enum", false]], "exprmixin (class in caterpillar.context)": [[7, "caterpillar.context.ExprMixin", false]], "f_dynamic (caterpillar.options attribute)": [[16, "caterpillar.options.F_DYNAMIC", false]], "f_keep_position (caterpillar.options attribute)": [[16, "caterpillar.options.F_KEEP_POSITION", false]], "f_offset_override (caterpillar.options attribute)": [[16, "caterpillar.options.F_OFFSET_OVERRIDE", false]], "f_sequential (caterpillar.options attribute)": [[16, "caterpillar.options.F_SEQUENTIAL", false]], "field (class in caterpillar.fields)": [[12, "caterpillar.fields.Field", false]], "field.__ior__()": [[44, "field.__ior__", false]], "field.__ixor__()": [[44, "field.__ixor__", false]], "field.__or__()": [[44, "field.__or__", false]], "field.__xor__()": [[44, "field.__xor__", false]], "field_kwds (caterpillar.model.templatetypevar attribute)": [[15, "caterpillar.model.TemplateTypeVar.field_kwds", false]], "field_options (caterpillar.model.sequence attribute)": [[15, "caterpillar.model.Sequence.field_options", false]], "fieldmixin (class in caterpillar.fields)": [[12, "caterpillar.fields.FieldMixin", false]], "fields (caterpillar.model.sequence attribute)": [[15, "caterpillar.model.Sequence.fields", false]], "fieldstruct (class in caterpillar.fields)": [[12, "caterpillar.fields.FieldStruct", false]], "flag (class in caterpillar.options)": [[16, "caterpillar.options.Flag", false]], "flags (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.flags", false]], "float16 (caterpillar.fields attribute)": [[9, "caterpillar.fields.float16", false]], "float32 (caterpillar.fields attribute)": [[9, "caterpillar.fields.float32", false]], "float64 (caterpillar.fields attribute)": [[9, "caterpillar.fields.float64", false]], "formatfield (class in caterpillar.fields)": [[9, "caterpillar.fields.FormatField", false]], "get_flag() (in module caterpillar.options)": [[16, "caterpillar.options.get_flag", false]], "get_flags() (in module caterpillar.options)": [[16, "caterpillar.options.get_flags", false]], "get_global_module_state (c function)": [[22, "c.get_global_module_state", false]], "get_instance() (caterpillar.fields.encrypted method)": [[11, "caterpillar.fields.Encrypted.get_instance", false]], "get_module_state (c function)": [[22, "c.get_module_state", false]], "get_offset() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.get_offset", false]], "get_struct() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.get_struct", false]], "get_type() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.get_type", false]], "getstruct() (in module caterpillar.abc)": [[5, "caterpillar.abc.getstruct", false]], "has_condition() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.has_condition", false]], "has_flag() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.has_flag", false]], "has_flag() (in module caterpillar.options)": [[16, "caterpillar.options.has_flag", false]], "has_option() (caterpillar.model.sequence method)": [[15, "caterpillar.model.Sequence.has_option", false]], "hasstruct() (in module caterpillar.abc)": [[5, "caterpillar.abc.hasstruct", false]], "head (caterpillar.fields.chain property)": [[12, "caterpillar.fields.Chain.head", false]], "if (class in caterpillar.fields)": [[12, "caterpillar.fields.If", false]], "int (class in caterpillar.fields)": [[9, "caterpillar.fields.Int", false]], "int16 (caterpillar.fields attribute)": [[9, "caterpillar.fields.int16", false]], "int32 (caterpillar.fields attribute)": [[9, "caterpillar.fields.int32", false]], "int64 (caterpillar.fields attribute)": [[9, "caterpillar.fields.int64", false]], "int8 (caterpillar.fields attribute)": [[9, "caterpillar.fields.int8", false]], "invalidvalueerror (class in caterpillar.exception)": [[8, "caterpillar.exception.InvalidValueError", false]], "is_enabled() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.is_enabled", false]], "is_padding() (caterpillar.fields.formatfield method)": [[9, "caterpillar.fields.FormatField.is_padding", false]], "is_seq() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.is_seq", false]], "istemplate() (in module caterpillar.model)": [[15, "caterpillar.model.istemplate", false]], "length() (caterpillar.fields.field method)": [[12, "caterpillar.fields.Field.length", false]], "littleendian (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.LittleEndian", false]], "lzmacompressed() (in module caterpillar.fields)": [[10, "caterpillar.fields.LZMACompressed", false]], "lzocompressed() (in module caterpillar.fields)": [[10, "caterpillar.fields.LZOCompressed", false]], "magic (examples.formats.nibarchive.object.nibheader.nibheader attribute)": [[41, "examples.formats.nibarchive.object.NIBHeader.NIBHeader.magic", false]], "max_size (caterpillar.model.unionhook attribute)": [[15, "caterpillar.model.UnionHook.max_size", false]], "memory (class in caterpillar.fields)": [[9, "caterpillar.fields.Memory", false]], "mode() (caterpillar.fields.encrypted method)": [[11, "caterpillar.fields.Encrypted.mode", false]], "model (caterpillar.model.sequence attribute)": [[15, "caterpillar.model.Sequence.model", false]], "name (caterpillar.model.templatetypevar attribute)": [[15, "caterpillar.model.TemplateTypeVar.name", false]], "name (caterpillar.options.flag attribute)": [[16, "caterpillar.options.Flag.name", false]], "native (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.Native", false]], "netendian (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.NetEndian", false]], "object.__call__()": [[41, "object.__call__", false]], "object.nibheader (class in examples.formats.nibarchive)": [[41, "examples.formats.nibarchive.object.NIBHeader", false]], "offset (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.offset", false]], "optionerror (class in caterpillar.exception)": [[8, "caterpillar.exception.OptionError", false]], "options (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.options", false]], "options (caterpillar.model.sequence attribute)": [[15, "caterpillar.model.Sequence.options", false]], "order (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.order", false]], "order (caterpillar.model.sequence attribute)": [[15, "caterpillar.model.Sequence.order", false]], "pack() (in module caterpillar.model)": [[15, "caterpillar.model.pack", false]], "pack_file() (in module caterpillar.model)": [[15, "caterpillar.model.pack_file", false]], "pack_into() (in module caterpillar.model)": [[15, "caterpillar.model.pack_into", false]], "pack_seq() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.pack_seq", false]], "pack_seq() (caterpillar.fields.formatfield method)": [[9, "caterpillar.fields.FormatField.pack_seq", false]], "pack_single() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.pack_single", false]], "pack_single() (caterpillar.fields.computed method)": [[9, "caterpillar.fields.Computed.pack_single", false]], "pack_single() (caterpillar.fields.cstring method)": [[9, "caterpillar.fields.CString.pack_single", false]], "pack_single() (caterpillar.fields.encrypted method)": [[11, "caterpillar.fields.Encrypted.pack_single", false]], "pack_single() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.pack_single", false]], "pack_single() (caterpillar.fields.formatfield method)": [[9, "caterpillar.fields.FormatField.pack_single", false]], "pack_single() (caterpillar.fields.int method)": [[9, "caterpillar.fields.Int.pack_single", false]], "pack_single() (caterpillar.fields.memory method)": [[9, "caterpillar.fields.Memory.pack_single", false]], "pack_single() (caterpillar.fields.prefixed method)": [[9, "caterpillar.fields.Prefixed.pack_single", false]], "pack_single() (caterpillar.fields.transformer method)": [[9, "caterpillar.fields.Transformer.pack_single", false]], "pack_single() (caterpillar.fields.varint method)": [[9, "caterpillar.fields.VarInt.pack_single", false]], "padding (caterpillar.fields attribute)": [[9, "caterpillar.fields.padding", false]], "padding() (caterpillar.fields.encrypted method)": [[11, "caterpillar.fields.Encrypted.padding", false]], "parent": [[41, "parent", false]], "parent (caterpillar.context attribute)": [[7, "caterpillar.context.parent", false]], "pass (caterpillar.fields attribute)": [[9, "caterpillar.fields.Pass", false]], "path.__call__()": [[44, "path.__call__", false]], "path.__getitem__()": [[44, "path.__getitem__", false]], "prefixed (class in caterpillar.fields)": [[9, "caterpillar.fields.Prefixed", false]], "sequence (class in caterpillar.model)": [[15, "caterpillar.model.Sequence", false]], "sequence.__add__()": [[44, "sequence.__add__", false]], "sequence.__iadd__()": [[44, "sequence.__iadd__", false]], "sequence.__isub__()": [[44, "sequence.__isub__", false]], "sequence.__sub__()": [[44, "sequence.__sub__", false]], "set_field_flags() (in module caterpillar.options)": [[16, "caterpillar.options.set_field_flags", false]], "set_struct_flags() (in module caterpillar.options)": [[16, "caterpillar.options.set_struct_flags", false]], "set_union_flags() (in module caterpillar.options)": [[16, "caterpillar.options.set_union_flags", false]], "size_t (caterpillar.fields attribute)": [[9, "caterpillar.fields.size_t", false]], "ssize_t (caterpillar.fields attribute)": [[9, "caterpillar.fields.ssize_t", false]], "stop (class in caterpillar.exception)": [[8, "caterpillar.exception.Stop", false]], "streamerror (class in caterpillar.exception)": [[8, "caterpillar.exception.StreamError", false]], "string (class in caterpillar.fields)": [[9, "caterpillar.fields.String", false]], "struct (caterpillar.fields.field attribute)": [[12, "caterpillar.fields.Field.struct", false]], "struct (caterpillar.model.unionhook attribute)": [[15, "caterpillar.model.UnionHook.struct", false]], "struct (class in caterpillar.model)": [[15, "caterpillar.model.Struct", false]], "struct() (in module caterpillar.model)": [[15, "caterpillar.model.struct", false]], "struct.__and__()": [[44, "struct.__and__", false]], "struct.__floordiv__()": [[44, "struct.__floordiv__", false]], "struct.__getitem__()": [[44, "struct.__getitem__", false]], "struct.__matmul__()": [[44, "struct.__matmul__", false]], "struct.__rshift__()": [[44, "struct.__rshift__", false]], "struct.__rsub__()": [[44, "struct.__rsub__", false]], "struct_field (caterpillar.abc attribute)": [[5, "caterpillar.abc.STRUCT_FIELD", false]], "structexception (class in caterpillar.exception)": [[8, "caterpillar.exception.StructException", false]], "sysnative (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.SysNative", false]], "system_arch (caterpillar.byteorder attribute)": [[6, "caterpillar.byteorder.system_arch", false]], "tail (caterpillar.fields.chain property)": [[12, "caterpillar.fields.Chain.tail", false]], "template() (in module caterpillar.model)": [[15, "caterpillar.model.template", false]], "templatetypevar (class in caterpillar.model)": [[15, "caterpillar.model.TemplateTypeVar", false]], "text (caterpillar.fields.formatfield attribute)": [[9, "caterpillar.fields.FormatField.text", false]], "this": [[41, "this", false]], "this (caterpillar.context attribute)": [[7, "caterpillar.context.this", false]], "transformer (class in caterpillar.fields)": [[9, "caterpillar.fields.Transformer", false]], "ty (caterpillar.fields.formatfield attribute)": [[9, "caterpillar.fields.FormatField.ty", false]], "typeof() (in module caterpillar.abc)": [[5, "caterpillar.abc.typeof", false]], "uint (class in caterpillar.fields)": [[9, "caterpillar.fields.UInt", false]], "uint16 (caterpillar.fields attribute)": [[9, "caterpillar.fields.uint16", false]], "uint32 (caterpillar.fields attribute)": [[9, "caterpillar.fields.uint32", false]], "uint64 (caterpillar.fields attribute)": [[9, "caterpillar.fields.uint64", false]], "uint8 (caterpillar.fields attribute)": [[9, "caterpillar.fields.uint8", false]], "unaryexpression (class in caterpillar.context)": [[7, "caterpillar.context.UnaryExpression", false]], "union() (in module caterpillar.model)": [[15, "caterpillar.model.union", false]], "unionhook (class in caterpillar.model)": [[15, "caterpillar.model.UnionHook", false]], "unpack() (in module caterpillar.model)": [[15, "caterpillar.model.unpack", false]], "unpack_file() (in module caterpillar.model)": [[15, "caterpillar.model.unpack_file", false]], "unpack_seq() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.unpack_seq", false]], "unpack_seq() (caterpillar.fields.formatfield method)": [[9, "caterpillar.fields.FormatField.unpack_seq", false]], "unpack_single() (caterpillar.fields.bytes method)": [[9, "caterpillar.fields.Bytes.unpack_single", false]], "unpack_single() (caterpillar.fields.chain method)": [[12, "caterpillar.fields.Chain.unpack_single", false]], "unpack_single() (caterpillar.fields.computed method)": [[9, "caterpillar.fields.Computed.unpack_single", false]], "unpack_single() (caterpillar.fields.cstring method)": [[9, "caterpillar.fields.CString.unpack_single", false]], "unpack_single() (caterpillar.fields.encrypted method)": [[11, "caterpillar.fields.Encrypted.unpack_single", false]], "unpack_single() (caterpillar.fields.fieldstruct method)": [[12, "caterpillar.fields.FieldStruct.unpack_single", false]], "unpack_single() (caterpillar.fields.formatfield method)": [[9, "caterpillar.fields.FormatField.unpack_single", false]], "unpack_single() (caterpillar.fields.int method)": [[9, "caterpillar.fields.Int.unpack_single", false]], "unpack_single() (caterpillar.fields.memory method)": [[9, "caterpillar.fields.Memory.unpack_single", false]], "unpack_single() (caterpillar.fields.prefixed method)": [[9, "caterpillar.fields.Prefixed.unpack_single", false]], "unpack_single() (caterpillar.fields.string method)": [[9, "caterpillar.fields.String.unpack_single", false]], "unpack_single() (caterpillar.fields.transformer method)": [[9, "caterpillar.fields.Transformer.unpack_single", false]], "unpack_single() (caterpillar.fields.varint method)": [[9, "caterpillar.fields.VarInt.unpack_single", false]], "unsupportedoperation (class in caterpillar.exception)": [[8, "caterpillar.exception.UnsupportedOperation", false]], "validationerror (class in caterpillar.exception)": [[8, "caterpillar.exception.ValidationError", false]], "value (caterpillar.options.flag attribute)": [[16, "caterpillar.options.Flag.value", false]], "varint (class in caterpillar.fields)": [[9, "caterpillar.fields.VarInt", false]], "vint (caterpillar.fields attribute)": [[9, "caterpillar.fields.vint", false]], "void_ptr (caterpillar.fields attribute)": [[9, "caterpillar.fields.void_ptr", false]], "zlibcompressed() (in module caterpillar.fields)": [[10, "caterpillar.fields.ZLibCompressed", false]]}, "objects": {"": [[23, 0, 1, "c.CpArchObject", "CpArchObject"], [23, 1, 1, "c.CpArch_Check", "CpArch_Check"], [23, 1, 1, "c.CpArch_CheckExact", "CpArch_CheckExact"], [23, 3, 1, "c.CpArch_Type", "CpArch_Type"], [18, 0, 1, "c.CpAtomObject", "CpAtomObject"], [18, 1, 1, "c.CpAtom_CallPack", "CpAtom_CallPack"], [18, 1, 1, "c.CpAtom_CallSize", "CpAtom_CallSize"], [18, 1, 1, "c.CpAtom_CanPack", "CpAtom_CanPack"], [18, 1, 1, "c.CpAtom_CanUnpack", "CpAtom_CanUnpack"], [18, 1, 1, "c.CpAtom_FastCanPack", "CpAtom_FastCanPack"], [18, 1, 1, "c.CpAtom_FastCanUnpack", "CpAtom_FastCanUnpack"], [18, 1, 1, "c.CpAtom_FastHasSize", "CpAtom_FastHasSize"], [18, 1, 1, "c.CpAtom_FastHasType", "CpAtom_FastHasType"], [18, 1, 1, "c.CpAtom_HasSize", "CpAtom_HasSize"], [18, 1, 1, "c.CpAtom_HasType", "CpAtom_HasType"], [18, 3, 1, "c.CpAtom_Type", "CpAtom_Type"], [31, 0, 1, "c.CpBinaryExprObject", "CpBinaryExprObject"], [31, 1, 1, "c.CpBinaryExpr_New", "CpBinaryExpr_New"], [31, 3, 1, "c.CpBinaryExpr_Type", "CpBinaryExpr_Type"], [24, 0, 1, "c.CpBoolAtomObject", "CpBoolAtomObject"], [24, 1, 1, "c.CpBoolAtom_Pack", "CpBoolAtom_Pack"], [24, 3, 1, "c.CpBoolAtom_Type", "CpBoolAtom_Type"], [24, 1, 1, "c.CpBoolAtom_Unpack", "CpBoolAtom_Unpack"], [25, 0, 1, "c.CpCharAtomObject", "CpCharAtomObject"], [25, 1, 1, "c.CpCharAtom_Pack", "CpCharAtom_Pack"], [25, 3, 1, "c.CpCharAtom_Type", "CpCharAtom_Type"], [25, 1, 1, "c.CpCharAtom_Unpack", "CpCharAtom_Unpack"], [32, 0, 1, "c.CpContextObject", "CpContextObject"], [33, 0, 1, "c.CpContextPathObject", "CpContextPathObject"], [33, 1, 1, "c.CpContextPath_Check", "CpContextPath_Check"], [33, 1, 1, "c.CpContextPath_CheckExact", "CpContextPath_CheckExact"], [33, 1, 1, "c.CpContextPath_FromString", "CpContextPath_FromString"], [33, 1, 1, "c.CpContextPath_New", "CpContextPath_New"], [33, 3, 1, "c.CpContextPath_Type", "CpContextPath_Type"], [32, 1, 1, "c.CpContext_Check", "CpContext_Check"], [32, 1, 1, "c.CpContext_CheckExact", "CpContext_CheckExact"], [32, 1, 1, "c.CpContext_GetAttr", "CpContext_GetAttr"], [32, 1, 1, "c.CpContext_GetAttrString", "CpContext_GetAttrString"], [32, 1, 1, "c.CpContext_New", "CpContext_New"], [32, 3, 1, "c.CpContext_Type", "CpContext_Type"], [23, 0, 1, "c.CpEndianObject", "CpEndianObject"], [23, 1, 1, "c.CpEndian_Check", "CpEndian_Check"], [23, 1, 1, "c.CpEndian_CheckExact", "CpEndian_CheckExact"], [23, 1, 1, "c.CpEndian_IsLittleEndian", "CpEndian_IsLittleEndian"], [23, 3, 1, "c.CpEndian_Type", "CpEndian_Type"], [26, 0, 1, "c.CpFieldAtomObject", "CpFieldAtomObject"], [26, 1, 1, "c.CpFieldAtom_Check", "CpFieldAtom_Check"], [26, 1, 1, "c.CpFieldAtom_CheckExact", "CpFieldAtom_CheckExact"], [26, 4, 1, "c.CpFieldAtom_HEAD", "CpFieldAtom_HEAD"], [26, 3, 1, "c.CpFieldAtom_Type", "CpFieldAtom_Type"], [26, 0, 1, "c.CpFieldCAtomObject", "CpFieldCAtomObject"], [26, 4, 1, "c.CpFieldCAtom_CATOM", "CpFieldCAtom_CATOM"], [26, 1, 1, "c.CpFieldCAtom_Check", "CpFieldCAtom_Check"], [26, 1, 1, "c.CpFieldCAtom_CheckExact", "CpFieldCAtom_CheckExact"], [26, 4, 1, "c.CpFieldCAtom_HEAD", "CpFieldCAtom_HEAD"], [26, 3, 1, "c.CpFieldCAtom_Type", "CpFieldCAtom_Type"], [34, 0, 1, "c.CpFieldObject", "CpFieldObject"], [34, 1, 1, "c.CpField_Check", "CpField_Check"], [34, 1, 1, "c.CpField_CheckExact", "CpField_CheckExact"], [34, 1, 1, "c.CpField_EvalSwitch", "CpField_EvalSwitch"], [34, 1, 1, "c.CpField_GetLength", "CpField_GetLength"], [34, 1, 1, "c.CpField_GetOffset", "CpField_GetOffset"], [34, 1, 1, "c.CpField_HasCondition", "CpField_HasCondition"], [34, 1, 1, "c.CpField_IsEnabled", "CpField_IsEnabled"], [34, 1, 1, "c.CpField_New", "CpField_New"], [34, 3, 1, "c.CpField_Type", "CpField_Type"], [27, 0, 1, "c.CpFloatAtomObject", "CpFloatAtomObject"], [27, 1, 1, "c.CpFloatAtom_Pack", "CpFloatAtom_Pack"], [27, 3, 1, "c.CpFloatAtom_Type", "CpFloatAtom_Type"], [27, 1, 1, "c.CpFloatAtom_Unpack", "CpFloatAtom_Unpack"], [29, 0, 1, "c.CpIntAtomObject", "CpIntAtomObject"], [29, 3, 1, "c.CpIntAtom_Type", "CpIntAtom_Type"], [35, 0, 1, "c.CpLayerObject", "CpLayerObject"], [35, 1, 1, "c.CpLayer_AppendPath", "CpLayer_AppendPath"], [35, 1, 1, "c.CpLayer_Check", "CpLayer_Check"], [35, 1, 1, "c.CpLayer_CheckExact", "CpLayer_CheckExact"], [35, 1, 1, "c.CpLayer_Invalidate", "CpLayer_Invalidate"], [35, 1, 1, "c.CpLayer_New", "CpLayer_New"], [35, 1, 1, "c.CpLayer_SetSequence", "CpLayer_SetSequence"], [35, 3, 1, "c.CpLayer_Type", "CpLayer_Type"], [22, 3, 1, "c.CpModule", "CpModule"], [22, 4, 1, "c.CpModule_SetupType", "CpModule_SetupType"], [21, 1, 1, "c.CpObject_Create", "CpObject_Create"], [21, 1, 1, "c.CpObject_CreateNoArgs", "CpObject_CreateNoArgs"], [21, 1, 1, "c.CpObject_CreateOneArgs", "CpObject_CreateOneArgs"], [37, 0, 1, "c.CpOptionObject", "CpOptionObject"], [37, 1, 1, "c.CpOption_Check", "CpOption_Check"], [37, 1, 1, "c.CpOption_CheckExact", "CpOption_CheckExact"], [37, 3, 1, "c.CpOption_Type", "CpOption_Type"], [40, 1, 1, "c.CpPack", "CpPack"], [30, 0, 1, "c.CpPaddingAtomObject", "CpPaddingAtomObject"], [30, 1, 1, "c.CpPaddingAtom_Pack", "CpPaddingAtom_Pack"], [30, 1, 1, "c.CpPaddingAtom_PackMany", "CpPaddingAtom_PackMany"], [30, 3, 1, "c.CpPaddingAtom_Type", "CpPaddingAtom_Type"], [30, 1, 1, "c.CpPaddingAtom_Unpack", "CpPaddingAtom_Unpack"], [30, 1, 1, "c.CpPaddingAtom_UnpackMany", "CpPaddingAtom_UnpackMany"], [40, 1, 1, "c.CpSizeOf", "CpSizeOf"], [40, 1, 1, "c.CpSizeOf_Common", "CpSizeOf_Common"], [40, 1, 1, "c.CpSizeOf_Field", "CpSizeOf_Field"], [40, 1, 1, "c.CpSizeOf_Struct", "CpSizeOf_Struct"], [38, 0, 1, "c.CpStateObject", "CpStateObject"], [38, 1, 1, "c.CpState_Check", "CpState_Check"], [38, 1, 1, "c.CpState_CheckExact", "CpState_CheckExact"], [38, 1, 1, "c.CpState_New", "CpState_New"], [38, 1, 1, "c.CpState_Read", "CpState_Read"], [38, 1, 1, "c.CpState_ReadFully", "CpState_ReadFully"], [38, 1, 1, "c.CpState_Seek", "CpState_Seek"], [38, 1, 1, "c.CpState_SetGlobals", "CpState_SetGlobals"], [38, 1, 1, "c.CpState_Tell", "CpState_Tell"], [38, 3, 1, "c.CpState_Type", "CpState_Type"], [38, 1, 1, "c.CpState_Write", "CpState_Write"], [39, 0, 1, "c.CpStructFieldInfoObject", "CpStructFieldInfoObject"], [39, 1, 1, "c.CpStructFieldInfo_Check", "CpStructFieldInfo_Check"], [39, 1, 1, "c.CpStructFieldInfo_CheckExact", "CpStructFieldInfo_CheckExact"], [39, 1, 1, "c.CpStructFieldInfo_New", "CpStructFieldInfo_New"], [39, 3, 1, "c.CpStructFieldInfo_Type", "CpStructFieldInfo_Type"], [39, 1, 1, "c.CpStructModel_Check", "CpStructModel_Check"], [39, 1, 1, "c.CpStructModel_GetStruct", "CpStructModel_GetStruct"], [39, 0, 1, "c.CpStructObject", "CpStructObject"], [39, 1, 1, "c.CpStruct_AddField", "CpStruct_AddField"], [39, 1, 1, "c.CpStruct_AddFieldInfo", "CpStruct_AddFieldInfo"], [39, 1, 1, "c.CpStruct_Check", "CpStruct_Check"], [39, 1, 1, "c.CpStruct_CheckExact", "CpStruct_CheckExact"], [39, 1, 1, "c.CpStruct_GetAnnotations", "CpStruct_GetAnnotations"], [39, 1, 1, "c.CpStruct_HasOption", "CpStruct_HasOption"], [39, 1, 1, "c.CpStruct_New", "CpStruct_New"], [39, 1, 1, "c.CpStruct_ReplaceType", "CpStruct_ReplaceType"], [39, 3, 1, "c.CpStruct_Type", "CpStruct_Type"], [40, 1, 1, "c.CpTypeOf", "CpTypeOf"], [40, 1, 1, "c.CpTypeOf_Common", "CpTypeOf_Common"], [40, 1, 1, "c.CpTypeOf_Field", "CpTypeOf_Field"], [31, 0, 1, "c.CpUnaryExprObject", "CpUnaryExprObject"], [31, 1, 1, "c.CpUnaryExpr_New", "CpUnaryExpr_New"], [31, 3, 1, "c.CpUnaryExpr_Type", "CpUnaryExpr_Type"], [40, 1, 1, "c.CpUnpack", "CpUnpack"], [21, 4, 1, "c._Cp_Name", "_Cp_Name"], [22, 5, 1, "c._modulestate", "_modulestate"], [22, 1, 1, "c.get_global_module_state", "get_global_module_state"], [22, 1, 1, "c.get_module_state", "get_module_state"], [41, 6, 1, "", "CTX_FIELD"], [41, 6, 1, "", "CTX_INDEX"], [41, 6, 1, "", "CTX_OBJECT"], [41, 6, 1, "", "CTX_OFFSETS"], [41, 6, 1, "", "CTX_PARENT"], [41, 6, 1, "", "CTX_PATH"], [41, 6, 1, "", "CTX_POS"], [41, 6, 1, "", "CTX_STREAM"], [41, 6, 1, "", "CTX_VALUE"], [41, 6, 1, "", "ctx"], [41, 6, 1, "", "parent"], [41, 6, 1, "", "this"]], "CpArch_Check": [[23, 2, 1, "c.CpArch_Check", "op"]], "CpArch_CheckExact": [[23, 2, 1, "c.CpArch_CheckExact", "op"]], "CpAtom_CallPack": [[18, 2, 1, "c.CpAtom_CallPack", "ctx"], [18, 2, 1, "c.CpAtom_CallPack", "name"], [18, 2, 1, "c.CpAtom_CallPack", "o"], [18, 2, 1, "c.CpAtom_CallPack", "self"]], "CpAtom_CallSize": [[18, 2, 1, "c.CpAtom_CallSize", "ctx"], [18, 2, 1, "c.CpAtom_CallSize", "name"], [18, 2, 1, "c.CpAtom_CallSize", "self"]], "CpAtom_CanPack": [[18, 2, 1, "c.CpAtom_CanPack", "o"]], "CpAtom_CanUnpack": [[18, 2, 1, "c.CpAtom_CanUnpack", "o"]], "CpAtom_FastCanPack": [[18, 2, 1, "c.CpAtom_FastCanPack", "o"], [18, 2, 1, "c.CpAtom_FastCanPack", "state"]], "CpAtom_FastCanUnpack": [[18, 2, 1, "c.CpAtom_FastCanUnpack", "o"], [18, 2, 1, "c.CpAtom_FastCanUnpack", "state"]], "CpAtom_FastHasSize": [[18, 2, 1, "c.CpAtom_FastHasSize", "o"], [18, 2, 1, "c.CpAtom_FastHasSize", "state"]], "CpAtom_FastHasType": [[18, 2, 1, "c.CpAtom_FastHasType", "o"], [18, 2, 1, "c.CpAtom_FastHasType", "state"]], "CpAtom_HasSize": [[18, 2, 1, "c.CpAtom_HasSize", "o"]], "CpAtom_HasType": [[18, 2, 1, "c.CpAtom_HasType", "o"]], "CpBinaryExpr_New": [[31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpAdd", "CpBinaryExpr_OpAdd"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpAnd", "CpBinaryExpr_OpAnd"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpBitAnd", "CpBinaryExpr_OpBitAnd"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpBitOr", "CpBinaryExpr_OpBitOr"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpBitXor", "CpBinaryExpr_OpBitXor"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpFloorDiv", "CpBinaryExpr_OpFloorDiv"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpLShift", "CpBinaryExpr_OpLShift"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpMatMul", "CpBinaryExpr_OpMatMul"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpMod", "CpBinaryExpr_OpMod"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpMul", "CpBinaryExpr_OpMul"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpOr", "CpBinaryExpr_OpOr"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpPow", "CpBinaryExpr_OpPow"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpRShift", "CpBinaryExpr_OpRShift"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpSub", "CpBinaryExpr_OpSub"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_OpTrueDiv", "CpBinaryExpr_OpTrueDiv"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_Op_EQ", "CpBinaryExpr_Op_EQ"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_Op_GE", "CpBinaryExpr_Op_GE"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_Op_GT", "CpBinaryExpr_Op_GT"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_Op_LE", "CpBinaryExpr_Op_LE"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_Op_LT", "CpBinaryExpr_Op_LT"], [31, 3, 1, "c.CpBinaryExpr_New.CpBinaryExpr_Op_NE", "CpBinaryExpr_Op_NE"], [31, 2, 1, "c.CpBinaryExpr_New", "left"], [31, 2, 1, "c.CpBinaryExpr_New", "op"], [31, 2, 1, "c.CpBinaryExpr_New", "right"]], "CpBoolAtom_Pack": [[24, 2, 1, "c.CpBoolAtom_Pack", "layer"], [24, 2, 1, "c.CpBoolAtom_Pack", "self"], [24, 2, 1, "c.CpBoolAtom_Pack", "value"]], "CpBoolAtom_Unpack": [[24, 2, 1, "c.CpBoolAtom_Unpack", "layer"], [24, 2, 1, "c.CpBoolAtom_Unpack", "self"]], "CpCharAtom_Pack": [[25, 2, 1, "c.CpCharAtom_Pack", "layer"], [25, 2, 1, "c.CpCharAtom_Pack", "self"], [25, 2, 1, "c.CpCharAtom_Pack", "value"]], "CpCharAtom_Unpack": [[25, 2, 1, "c.CpCharAtom_Unpack", "layer"], [25, 2, 1, "c.CpCharAtom_Unpack", "self"]], "CpContextPath_Check": [[33, 2, 1, "c.CpContextPath_Check", "op"]], "CpContextPath_CheckExact": [[33, 2, 1, "c.CpContextPath_CheckExact", "op"]], "CpContextPath_FromString": [[33, 2, 1, "c.CpContextPath_FromString", "path"]], "CpContextPath_New": [[33, 2, 1, "c.CpContextPath_New", "path"]], "CpContext_Check": [[32, 2, 1, "c.CpContext_Check", "op"]], "CpContext_CheckExact": [[32, 2, 1, "c.CpContext_CheckExact", "op"]], "CpContext_GetAttr": [[32, 2, 1, "c.CpContext_GetAttr", "context"], [32, 2, 1, "c.CpContext_GetAttr", "key"], [32, 2, 1, "c.CpContext_GetAttr", "state"]], "CpContext_GetAttrString": [[32, 2, 1, "c.CpContext_GetAttrString", "context"], [32, 2, 1, "c.CpContext_GetAttrString", "key"]], "CpEndian_Check": [[23, 2, 1, "c.CpEndian_Check", "op"]], "CpEndian_CheckExact": [[23, 2, 1, "c.CpEndian_CheckExact", "op"]], "CpEndian_IsLittleEndian": [[23, 2, 1, "c.CpEndian_IsLittleEndian", "endian"], [23, 2, 1, "c.CpEndian_IsLittleEndian", "mod"]], "CpFieldAtom_Check": [[26, 2, 1, "c.CpFieldAtom_Check", "op"]], "CpFieldAtom_CheckExact": [[26, 2, 1, "c.CpFieldAtom_CheckExact", "op"]], "CpFieldCAtom_Check": [[26, 2, 1, "c.CpFieldCAtom_Check", "op"]], "CpFieldCAtom_CheckExact": [[26, 2, 1, "c.CpFieldCAtom_CheckExact", "op"]], "CpField_Check": [[34, 2, 1, "c.CpField_Check", "op"]], "CpField_CheckExact": [[34, 2, 1, "c.CpField_CheckExact", "op"]], "CpField_EvalSwitch": [[34, 2, 1, "c.CpField_EvalSwitch", "context"], [34, 2, 1, "c.CpField_EvalSwitch", "field"], [34, 2, 1, "c.CpField_EvalSwitch", "value"]], "CpField_GetLength": [[34, 2, 1, "c.CpField_GetLength", "context"], [34, 2, 1, "c.CpField_GetLength", "field"]], "CpField_GetOffset": [[34, 2, 1, "c.CpField_GetOffset", "context"], [34, 2, 1, "c.CpField_GetOffset", "field"]], "CpField_HasCondition": [[34, 2, 1, "c.CpField_HasCondition", "field"]], "CpField_IsEnabled": [[34, 2, 1, "c.CpField_IsEnabled", "context"], [34, 2, 1, "c.CpField_IsEnabled", "field"]], "CpField_New": [[34, 2, 1, "c.CpField_New", "atom"]], "CpFloatAtom_Pack": [[27, 2, 1, "c.CpFloatAtom_Pack", "layer"], [27, 2, 1, "c.CpFloatAtom_Pack", "self"], [27, 2, 1, "c.CpFloatAtom_Pack", "value"]], "CpFloatAtom_Unpack": [[27, 2, 1, "c.CpFloatAtom_Unpack", "layer"], [27, 2, 1, "c.CpFloatAtom_Unpack", "self"]], "CpIntAtomObject": [[29, 3, 1, "c.CpIntAtomObject._m_little_endian", "_m_little_endian"], [29, 3, 1, "c.CpIntAtomObject._m_signed", "_m_signed"], [29, 3, 1, "c.CpIntAtomObject.m_byte_count", "m_byte_count"]], "CpLayer_AppendPath": [[35, 2, 1, "c.CpLayer_AppendPath", "layer"], [35, 2, 1, "c.CpLayer_AppendPath", "path"]], "CpLayer_Check": [[35, 2, 1, "c.CpLayer_Check", "op"]], "CpLayer_CheckExact": [[35, 2, 1, "c.CpLayer_CheckExact", "op"]], "CpLayer_Invalidate": [[35, 2, 1, "c.CpLayer_Invalidate", "layer"]], "CpLayer_New": [[35, 2, 1, "c.CpLayer_New", "parent"], [35, 2, 1, "c.CpLayer_New", "state"]], "CpLayer_SetSequence": [[35, 2, 1, "c.CpLayer_SetSequence", "greedy"], [35, 2, 1, "c.CpLayer_SetSequence", "layer"], [35, 2, 1, "c.CpLayer_SetSequence", "length"], [35, 2, 1, "c.CpLayer_SetSequence", "sequence"]], "CpObject_Create": [[21, 2, 1, "c.CpObject_Create", "format"], [21, 2, 1, "c.CpObject_Create", "type"]], "CpObject_CreateNoArgs": [[21, 2, 1, "c.CpObject_CreateNoArgs", "type"]], "CpObject_CreateOneArgs": [[21, 2, 1, "c.CpObject_CreateOneArgs", "arg"], [21, 2, 1, "c.CpObject_CreateOneArgs", "type"]], "CpOption_Check": [[37, 2, 1, "c.CpOption_Check", "op"]], "CpOption_CheckExact": [[37, 2, 1, "c.CpOption_CheckExact", "op"]], "CpPack": [[40, 1, 1, "c.CpPack.CpPack_CAtom", "CpPack_CAtom"], [40, 1, 1, "c.CpPack.CpPack_Common", "CpPack_Common"], [40, 1, 1, "c.CpPack.CpPack_Field", "CpPack_Field"], [40, 1, 1, "c.CpPack.CpPack_Struct", "CpPack_Struct"], [40, 1, 1, "c.CpPack._CpPack_EvalLength", "_CpPack_EvalLength"], [40, 1, 1, "c.CpPack._Cp_Pack", "_Cp_Pack"], [40, 2, 1, "c.CpPack", "atom"], [40, 2, 1, "c.CpPack", "globals"], [40, 2, 1, "c.CpPack", "io"], [40, 2, 1, "c.CpPack", "op"]], "CpPack._CpPack_EvalLength": [[40, 2, 1, "c.CpPack._CpPack_EvalLength", "layer"], [40, 2, 1, "c.CpPack._CpPack_EvalLength", "length"], [40, 2, 1, "c.CpPack._CpPack_EvalLength", "seq_greedy"], [40, 2, 1, "c.CpPack._CpPack_EvalLength", "seq_length"], [40, 2, 1, "c.CpPack._CpPack_EvalLength", "size"]], "CpPaddingAtom_Pack": [[30, 2, 1, "c.CpPaddingAtom_Pack", "layer"], [30, 2, 1, "c.CpPaddingAtom_Pack", "self"], [30, 2, 1, "c.CpPaddingAtom_Pack", "value"]], "CpPaddingAtom_PackMany": [[30, 2, 1, "c.CpPaddingAtom_PackMany", "layer"], [30, 2, 1, "c.CpPaddingAtom_PackMany", "self"], [30, 2, 1, "c.CpPaddingAtom_PackMany", "value"]], "CpPaddingAtom_Unpack": [[30, 2, 1, "c.CpPaddingAtom_Unpack", "layer"], [30, 2, 1, "c.CpPaddingAtom_Unpack", "self"]], "CpPaddingAtom_UnpackMany": [[30, 2, 1, "c.CpPaddingAtom_UnpackMany", "layer"], [30, 2, 1, "c.CpPaddingAtom_UnpackMany", "self"]], "CpSizeOf": [[40, 2, 1, "c.CpSizeOf", "atom"], [40, 2, 1, "c.CpSizeOf", "globals"]], "CpState_Check": [[38, 2, 1, "c.CpState_Check", "op"]], "CpState_CheckExact": [[38, 2, 1, "c.CpState_CheckExact", "op"]], "CpState_New": [[38, 2, 1, "c.CpState_New", "io"]], "CpState_Read": [[38, 2, 1, "c.CpState_Read", "size"], [38, 2, 1, "c.CpState_Read", "state"]], "CpState_ReadFully": [[38, 2, 1, "c.CpState_ReadFully", "state"]], "CpState_Seek": [[38, 2, 1, "c.CpState_Seek", "pos"], [38, 2, 1, "c.CpState_Seek", "state"], [38, 2, 1, "c.CpState_Seek", "whence"]], "CpState_SetGlobals": [[38, 2, 1, "c.CpState_SetGlobals", "globals"], [38, 2, 1, "c.CpState_SetGlobals", "state"]], "CpState_Tell": [[38, 2, 1, "c.CpState_Tell", "state"]], "CpState_Write": [[38, 2, 1, "c.CpState_Write", "bytes"], [38, 2, 1, "c.CpState_Write", "state"]], "CpStructFieldInfo_Check": [[39, 2, 1, "c.CpStructFieldInfo_Check", "op"]], "CpStructFieldInfo_CheckExact": [[39, 2, 1, "c.CpStructFieldInfo_CheckExact", "op"]], "CpStructFieldInfo_New": [[39, 2, 1, "c.CpStructFieldInfo_New", "field"]], "CpStructModel_Check": [[39, 2, 1, "c.CpStructModel_Check", "m"], [39, 2, 1, "c.CpStructModel_Check", "s"]], "CpStructModel_GetStruct": [[39, 2, 1, "c.CpStructModel_GetStruct", "m"], [39, 2, 1, "c.CpStructModel_GetStruct", "s"]], "CpStruct_AddField": [[39, 2, 1, "c.CpStruct_AddField", "exclude"], [39, 2, 1, "c.CpStruct_AddField", "field"], [39, 2, 1, "c.CpStruct_AddField", "o"]], "CpStruct_AddFieldInfo": [[39, 2, 1, "c.CpStruct_AddFieldInfo", "info"], [39, 2, 1, "c.CpStruct_AddFieldInfo", "o"]], "CpStruct_Check": [[39, 2, 1, "c.CpStruct_Check", "op"]], "CpStruct_CheckExact": [[39, 2, 1, "c.CpStruct_CheckExact", "op"]], "CpStruct_GetAnnotations": [[39, 2, 1, "c.CpStruct_GetAnnotations", "eval"], [39, 2, 1, "c.CpStruct_GetAnnotations", "self"]], "CpStruct_HasOption": [[39, 2, 1, "c.CpStruct_HasOption", "option"], [39, 2, 1, "c.CpStruct_HasOption", "struct_"]], "CpStruct_New": [[39, 2, 1, "c.CpStruct_New", "model"]], "CpStruct_ReplaceType": [[39, 2, 1, "c.CpStruct_ReplaceType", "name"], [39, 2, 1, "c.CpStruct_ReplaceType", "struct_"], [39, 2, 1, "c.CpStruct_ReplaceType", "type"]], "CpTypeOf": [[40, 2, 1, "c.CpTypeOf", "value"]], "CpTypeOf_Common": [[40, 2, 1, "c.CpTypeOf_Common", "op"]], "CpTypeOf_Field": [[40, 2, 1, "c.CpTypeOf_Field", "field"]], "CpUnaryExpr_New": [[31, 3, 1, "c.CpUnaryExpr_New.CpUnaryExpr_OpNeg", "CpUnaryExpr_OpNeg"], [31, 3, 1, "c.CpUnaryExpr_New.CpUnaryExpr_OpNot", "CpUnaryExpr_OpNot"], [31, 3, 1, "c.CpUnaryExpr_New.CpUnaryExpr_OpPos", "CpUnaryExpr_OpPos"], [31, 2, 1, "c.CpUnaryExpr_New", "op"], [31, 2, 1, "c.CpUnaryExpr_New", "value"]], "CpUnpack": [[40, 1, 1, "c.CpUnpack.CpUnpack_CAtom", "CpUnpack_CAtom"], [40, 1, 1, "c.CpUnpack.CpUnpack_Common", "CpUnpack_Common"], [40, 1, 1, "c.CpUnpack.CpUnpack_Field", "CpUnpack_Field"], [40, 1, 1, "c.CpUnpack.CpUnpack_Struct", "CpUnpack_Struct"], [40, 1, 1, "c.CpUnpack._Cp_Unpack", "_Cp_Unpack"], [40, 2, 1, "c.CpUnpack", "atom"], [40, 2, 1, "c.CpUnpack", "globals"], [40, 2, 1, "c.CpUnpack", "io"]], "_modulestate": [[22, 3, 1, "c._modulestate.Any_Type", "Any_Type"], [22, 3, 1, "c._modulestate.BytesIO_Type", "BytesIO_Type"], [22, 3, 1, "c._modulestate.List_Type", "List_Type"], [22, 3, 1, "c._modulestate.Union_Type", "Union_Type"], [22, 3, 1, "c._modulestate.cp_arch__host", "cp_arch__host"], [22, 3, 1, "c._modulestate.cp_endian__big", "cp_endian__big"], [22, 3, 1, "c._modulestate.cp_endian__little", "cp_endian__little"], [22, 3, 1, "c._modulestate.cp_endian__native", "cp_endian__native"], [22, 3, 1, "c._modulestate.cp_option__discard_const", "cp_option__discard_const"], [22, 3, 1, "c._modulestate.cp_option__discard_unnamed", "cp_option__discard_unnamed"], [22, 3, 1, "c._modulestate.cp_option__dynamic", "cp_option__dynamic"], [22, 3, 1, "c._modulestate.cp_option__eval", "cp_option__eval"], [22, 3, 1, "c._modulestate.cp_option__global_field_options", "cp_option__global_field_options"], [22, 3, 1, "c._modulestate.cp_option__global_struct_options", "cp_option__global_struct_options"], [22, 3, 1, "c._modulestate.cp_option__keep_position", "cp_option__keep_position"], [22, 3, 1, "c._modulestate.cp_option__replace_types", "cp_option__replace_types"], [22, 3, 1, "c._modulestate.cp_option__sequential", "cp_option__sequential"], [22, 3, 1, "c._modulestate.cp_option__slots", "cp_option__slots"], [22, 3, 1, "c._modulestate.cp_option__union", "cp_option__union"], [22, 3, 1, "c._modulestate.str___annotations__", "str___annotations__"], [22, 3, 1, "c._modulestate.str___dict__", "str___dict__"], [22, 3, 1, "c._modulestate.str___match_args__", "str___match_args__"], [22, 3, 1, "c._modulestate.str___mro__", "str___mro__"], [22, 3, 1, "c._modulestate.str___pack__", "str___pack__"], [22, 3, 1, "c._modulestate.str___pack_many__", "str___pack_many__"], [22, 3, 1, "c._modulestate.str___qualname__", "str___qualname__"], [22, 3, 1, "c._modulestate.str___size__", "str___size__"], [22, 3, 1, "c._modulestate.str___slots__", "str___slots__"], [22, 3, 1, "c._modulestate.str___struct__", "str___struct__"], [22, 3, 1, "c._modulestate.str___type__", "str___type__"], [22, 3, 1, "c._modulestate.str___unpack__", "str___unpack__"], [22, 3, 1, "c._modulestate.str___unpack_many__", "str___unpack_many__"], [22, 3, 1, "c._modulestate.str___weakref__", "str___weakref__"], [22, 3, 1, "c._modulestate.str_builder_process", "str_builder_process"], [22, 3, 1, "c._modulestate.str_bytesio_getvalue", "str_bytesio_getvalue"], [22, 3, 1, "c._modulestate.str_close", "str_close"], [22, 3, 1, "c._modulestate.str_ctx__getattr", "str_ctx__getattr"], [22, 3, 1, "c._modulestate.str_ctx__root", "str_ctx__root"], [22, 3, 1, "c._modulestate.str_path_delim", "str_path_delim"], [22, 3, 1, "c._modulestate.str_pattern_match", "str_pattern_match"], [22, 3, 1, "c._modulestate.str_read", "str_read"], [22, 3, 1, "c._modulestate.str_seek", "str_seek"], [22, 3, 1, "c._modulestate.str_start", "str_start"], [22, 3, 1, "c._modulestate.str_strict", "str_strict"], [22, 3, 1, "c._modulestate.str_tell", "str_tell"], [22, 3, 1, "c._modulestate.str_write", "str_write"]], "caterpillar.abc": [[5, 6, 1, "", "STRUCT_FIELD"], [5, 7, 1, "", "_ContainsStruct"], [5, 7, 1, "", "_ContextLambda"], [5, 7, 1, "", "_ContextLike"], [5, 7, 1, "", "_EnumLike"], [5, 7, 1, "", "_StructLike"], [5, 7, 1, "", "_SupportsPack"], [5, 7, 1, "", "_SupportsSize"], [5, 7, 1, "", "_SupportsUnpack"], [5, 7, 1, "", "_Switch"], [5, 8, 1, "", "getstruct"], [5, 8, 1, "", "hasstruct"], [5, 8, 1, "", "typeof"]], "caterpillar.byteorder": [[6, 7, 1, "", "Arch"], [6, 6, 1, "", "BYTEORDER_FIELD"], [6, 6, 1, "", "BigEndian"], [6, 7, 1, "", "ByteOrder"], [6, 6, 1, "", "LittleEndian"], [6, 6, 1, "", "Native"], [6, 6, 1, "", "NetEndian"], [6, 6, 1, "", "SysNative"], [6, 8, 1, "", "byteorder"], [6, 6, 1, "", "system_arch"]], "caterpillar.byteorder.ByteOrder": [[6, 7, 1, "", "Alignment"], [6, 7, 1, "", "Size"], [6, 9, 1, "", "apply"]], "caterpillar.context": [[7, 7, 1, "", "BinaryExpression"], [7, 6, 1, "", "CTX_FIELD"], [7, 6, 1, "", "CTX_INDEX"], [7, 6, 1, "", "CTX_OBJECT"], [7, 6, 1, "", "CTX_OFFSETS"], [7, 6, 1, "", "CTX_PARENT"], [7, 6, 1, "", "CTX_PATH"], [7, 6, 1, "", "CTX_POS"], [7, 6, 1, "", "CTX_SEQ"], [7, 6, 1, "", "CTX_STREAM"], [7, 6, 1, "", "CTX_VALUE"], [7, 7, 1, "", "ConditionContext"], [7, 7, 1, "", "Context"], [7, 7, 1, "", "ContextLength"], [7, 7, 1, "", "ContextPath"], [7, 7, 1, "", "ExprMixin"], [7, 7, 1, "", "UnaryExpression"], [7, 6, 1, "", "ctx"], [7, 6, 1, "", "parent"], [7, 6, 1, "", "this"]], "caterpillar.exception": [[8, 7, 1, "", "DelegationError"], [8, 7, 1, "", "DynamicSizeError"], [8, 7, 1, "", "InvalidValueError"], [8, 7, 1, "", "OptionError"], [8, 7, 1, "", "Stop"], [8, 7, 1, "", "StreamError"], [8, 7, 1, "", "StructException"], [8, 7, 1, "", "UnsupportedOperation"], [8, 7, 1, "", "ValidationError"]], "caterpillar.fields": [[9, 7, 1, "", "Bytes"], [10, 8, 1, "", "Bz2Compressed"], [9, 7, 1, "", "CString"], [12, 7, 1, "", "Chain"], [10, 7, 1, "", "Compressed"], [9, 7, 1, "", "Computed"], [9, 7, 1, "", "Const"], [9, 7, 1, "", "ConstBytes"], [9, 7, 1, "", "ConstString"], [12, 7, 1, "", "ElseIf"], [11, 7, 1, "", "Encrypted"], [9, 7, 1, "", "Enum"], [12, 7, 1, "", "Field"], [12, 7, 1, "", "FieldMixin"], [12, 7, 1, "", "FieldStruct"], [9, 7, 1, "", "FormatField"], [12, 7, 1, "", "If"], [9, 7, 1, "", "Int"], [10, 8, 1, "", "LZMACompressed"], [10, 8, 1, "", "LZOCompressed"], [9, 7, 1, "", "Memory"], [9, 6, 1, "", "Pass"], [9, 7, 1, "", "Prefixed"], [9, 7, 1, "", "String"], [9, 7, 1, "", "Transformer"], [9, 7, 1, "", "UInt"], [9, 7, 1, "", "VarInt"], [10, 8, 1, "", "ZLibCompressed"], [9, 6, 1, "", "boolean"], [9, 6, 1, "", "char"], [9, 6, 1, "", "float16"], [9, 6, 1, "", "float32"], [9, 6, 1, "", "float64"], [9, 6, 1, "", "int16"], [9, 6, 1, "", "int32"], [9, 6, 1, "", "int64"], [9, 6, 1, "", "int8"], [9, 6, 1, "", "padding"], [9, 6, 1, "", "size_t"], [9, 6, 1, "", "ssize_t"], [9, 6, 1, "", "uint16"], [9, 6, 1, "", "uint32"], [9, 6, 1, "", "uint64"], [9, 6, 1, "", "uint8"], [9, 6, 1, "", "vint"], [9, 6, 1, "", "void_ptr"]], "caterpillar.fields.Bytes": [[9, 9, 1, "", "unpack_single"]], "caterpillar.fields.CString": [[9, 9, 1, "", "pack_single"], [9, 9, 1, "", "unpack_single"]], "caterpillar.fields.Chain": [[12, 9, 1, "", "__and__"], [12, 9, 1, "", "__init__"], [12, 9, 1, "", "__rand__"], [12, 9, 1, "", "__size__"], [12, 9, 1, "", "__type__"], [12, 10, 1, "", "head"], [12, 9, 1, "", "pack_single"], [12, 10, 1, "", "tail"], [12, 9, 1, "", "unpack_single"]], "caterpillar.fields.Compressed": [[10, 9, 1, "", "decode"], [10, 9, 1, "", "encode"]], "caterpillar.fields.Computed": [[9, 9, 1, "", "pack_single"], [9, 9, 1, "", "unpack_single"]], "caterpillar.fields.Const": [[9, 9, 1, "", "decode"], [9, 9, 1, "", "encode"]], "caterpillar.fields.Encrypted": [[11, 9, 1, "", "algorithm"], [11, 9, 1, "", "get_instance"], [11, 9, 1, "", "mode"], [11, 9, 1, "", "pack_single"], [11, 9, 1, "", "padding"], [11, 9, 1, "", "unpack_single"]], "caterpillar.fields.Enum": [[9, 9, 1, "", "decode"], [9, 9, 1, "", "encode"]], "caterpillar.fields.Field": [[12, 6, 1, "", "amount"], [12, 6, 1, "", "arch"], [12, 6, 1, "", "bits"], [12, 6, 1, "", "condition"], [12, 6, 1, "", "default"], [12, 6, 1, "", "flags"], [12, 9, 1, "", "get_offset"], [12, 9, 1, "", "get_struct"], [12, 9, 1, "", "get_type"], [12, 9, 1, "", "has_condition"], [12, 9, 1, "", "has_flag"], [12, 9, 1, "", "is_enabled"], [12, 9, 1, "", "is_seq"], [12, 9, 1, "", "length"], [12, 6, 1, "", "offset"], [12, 6, 1, "", "options"], [12, 6, 1, "", "order"], [12, 6, 1, "", "struct"]], "caterpillar.fields.FieldStruct": [[12, 6, 1, "", "__bits__"], [12, 6, 1, "", "__byteorder__"], [12, 9, 1, "", "__pack__"], [12, 9, 1, "", "__repr__"], [12, 9, 1, "", "__unpack__"], [12, 9, 1, "", "pack_seq"], [12, 9, 1, "", "pack_single"], [12, 9, 1, "", "unpack_seq"], [12, 9, 1, "", "unpack_single"]], "caterpillar.fields.FormatField": [[9, 9, 1, "", "is_padding"], [9, 9, 1, "", "pack_seq"], [9, 9, 1, "", "pack_single"], [9, 6, 1, "", "text"], [9, 6, 1, "", "ty"], [9, 9, 1, "", "unpack_seq"], [9, 9, 1, "", "unpack_single"]], "caterpillar.fields.Int": [[9, 9, 1, "", "pack_single"], [9, 9, 1, "", "unpack_single"]], "caterpillar.fields.Memory": [[9, 9, 1, "", "pack_single"], [9, 9, 1, "", "unpack_single"]], "caterpillar.fields.Prefixed": [[9, 9, 1, "", "pack_single"], [9, 9, 1, "", "unpack_single"]], "caterpillar.fields.String": [[9, 9, 1, "", "unpack_single"]], "caterpillar.fields.Transformer": [[9, 9, 1, "", "decode"], [9, 9, 1, "", "encode"], [9, 9, 1, "", "pack_single"], [9, 9, 1, "", "unpack_single"]], "caterpillar.fields.VarInt": [[9, 9, 1, "", "pack_single"], [9, 9, 1, "", "unpack_single"]], "caterpillar.model": [[15, 7, 1, "", "BitField"], [15, 7, 1, "", "BitFieldGroup"], [15, 7, 1, "", "Sequence"], [15, 7, 1, "", "Struct"], [15, 7, 1, "", "TemplateTypeVar"], [15, 7, 1, "", "UnionHook"], [15, 8, 1, "", "bitfield"], [15, 8, 1, "", "derive"], [15, 8, 1, "", "istemplate"], [15, 8, 1, "", "pack"], [15, 8, 1, "", "pack_file"], [15, 8, 1, "", "pack_into"], [15, 8, 1, "", "struct"], [15, 8, 1, "", "template"], [15, 8, 1, "", "union"], [15, 8, 1, "", "unpack"], [15, 8, 1, "", "unpack_file"]], "caterpillar.model.Sequence": [[15, 9, 1, "", "add_field"], [15, 6, 1, "", "arch"], [15, 9, 1, "", "del_field"], [15, 6, 1, "", "field_options"], [15, 6, 1, "", "fields"], [15, 9, 1, "", "has_option"], [15, 6, 1, "", "model"], [15, 6, 1, "", "options"], [15, 6, 1, "", "order"]], "caterpillar.model.TemplateTypeVar": [[15, 6, 1, "", "field_kwds"], [15, 6, 1, "", "name"]], "caterpillar.model.UnionHook": [[15, 6, 1, "", "max_size"], [15, 6, 1, "", "struct"]], "caterpillar.options": [[16, 6, 1, "", "F_DYNAMIC"], [16, 6, 1, "", "F_KEEP_POSITION"], [16, 6, 1, "", "F_OFFSET_OVERRIDE"], [16, 6, 1, "", "F_SEQUENTIAL"], [16, 7, 1, "", "Flag"], [16, 11, 1, "", "O_ARRAY_FACTORY"], [16, 11, 1, "", "S_DISCARD_CONST"], [16, 11, 1, "", "S_DISCARD_UNNAMED"], [16, 11, 1, "", "S_EVAL_ANNOTATIONS"], [16, 11, 1, "", "S_REPLACE_TYPES"], [16, 11, 1, "", "S_SLOTS"], [16, 11, 1, "", "S_UNION"], [16, 8, 1, "", "configure"], [16, 8, 1, "", "get_flag"], [16, 8, 1, "", "get_flags"], [16, 8, 1, "", "has_flag"], [16, 8, 1, "", "set_field_flags"], [16, 8, 1, "", "set_struct_flags"], [16, 8, 1, "", "set_union_flags"]], "caterpillar.options.Flag": [[16, 6, 1, "", "name"], [16, 6, 1, "", "value"]], "class": [[41, 6, 1, "", "__struct__"], [41, 6, 1, "", "__template__"]], "examples.formats.nibarchive.object": [[41, 7, 1, "", "NIBHeader"]], "examples.formats.nibarchive.object.NIBHeader.NIBHeader": [[41, 6, 1, "", "magic"]], "field": [[44, 8, 1, "", "__ior__"], [44, 8, 1, "", "__ixor__"], [41, 6, 1, "", "__name__"], [44, 8, 1, "", "__or__"], [44, 8, 1, "", "__xor__"]], "get_module_state": [[22, 2, 1, "c.get_module_state", "module"]], "object": [[41, 9, 1, "", "__bits__"], [41, 6, 1, "", "__byteorder__"], [41, 8, 1, "", "__call__"], [41, 9, 1, "", "__pack__"], [41, 9, 1, "", "__set_byteorder__"], [41, 9, 1, "", "__size__"], [41, 9, 1, "", "__type__"], [41, 9, 1, "", "__unpack__"]], "path": [[44, 8, 1, "", "__call__"], [44, 8, 1, "", "__getitem__"]], "sequence": [[44, 8, 1, "", "__add__"], [44, 8, 1, "", "__iadd__"], [44, 8, 1, "", "__isub__"], [44, 8, 1, "", "__sub__"]], "struct": [[44, 8, 1, "", "__and__"], [44, 8, 1, "", "__floordiv__"], [44, 8, 1, "", "__getitem__"], [44, 8, 1, "", "__matmul__"], [44, 8, 1, "", "__rshift__"], [44, 8, 1, "", "__rsub__"]]}, "objnames": {"0": ["c", "type", "C type"], "1": ["c", "function", "C function"], "2": ["c", "functionParam", "C function parameter"], "3": ["c", "member", "C member"], "4": ["c", "macro", "C macro"], "5": ["c", "struct", "C struct"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "class", "Python class"], "8": ["py", "function", "Python function"], "9": ["py", "method", "Python method"], "10": ["py", "property", "Python property"], "11": ["py", "data", "Python data"]}, "objtypes": {"0": "c:type", "1": "c:function", "2": "c:functionParam", "3": "c:member", "4": "c:macro", "5": "c:struct", "6": "py:attribute", "7": "py:class", "8": "py:function", "9": "py:method", "10": "py:property", "11": "py:data"}, "terms": {"": [4, 12, 16, 18, 20, 26, 39, 40, 43, 45, 46, 47, 48], "0": [6, 16, 18, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 38, 39, 40, 41, 43, 44, 45, 46], "0008136422": 43, "00100000": 45, "0021923946": 43, "0031346225": 43, "0033772090": 43, "0034705456": 43, "0037924385": 43, "0044497086": 43, "0051257158": 43, "0063716554": 43, "0078892448": 43, "0085910592": 43, "0097203362": 43, "0098681578": 43, "0110391153": 43, "0125181926": 43, "0126670091": 43, "0145166325": 43, "015825": 27, "0260070809": 43, "036922": 24, "04": 43, "05": 43, "0555872261": 43, "058688": 27, "0898006975": 43, "0b01110000": 43, "0b10000000": 43, "0x00": 9, "0x0000": 43, "0x00000204fdfa4411": 46, "0x0004": 43, "0x0005": 43, "0x0008": 43, "0x1233": 44, "0x1234": [44, 45], "0x4": 45, "0xbeef": 46, "0xff": 16, "0xff00ff00": 41, "1": [6, 9, 16, 18, 23, 24, 25, 27, 29, 30, 31, 34, 35, 38, 39, 40, 41, 43, 44, 45, 46, 47], "10": [3, 16, 31, 43, 44, 46], "100": [44, 46], "100000": 46, "100239": 30, "1024": 9, "10608": 16, "109347": 24, "11": 31, "1157": 16, "12": [4, 31, 43], "120": 16, "1232": 16, "128918": 27, "13": [31, 43, 45], "137714": 25, "14": [31, 43], "14240": 16, "15": [20, 31, 41, 43], "16": [9, 29, 31, 41, 43, 45], "166108": 30, "17": 31, "1704": 16, "18": 31, "19": [31, 44], "1929": 43, "1937": 43, "2": [7, 12, 16, 24, 25, 27, 30, 31, 40, 41, 43, 45, 47], "20": [31, 43], "211655": 27, "2305ca5": 43, "234711": 27, "235666": 30, "24": [43, 46], "241862": 27, "255": 16, "258163462": 45, "26": 20, "26520": 16, "267463": 30, "3": [4, 20, 25, 27, 30, 31, 40, 41, 43, 44, 45, 46, 47], "311959": 27, "32": [7, 9, 12], "33": [12, 43], "34": 12, "36": 43, "384": 16, "3848": 16, "4": [3, 30, 31, 43, 45, 46], "40": 46, "4278255360": 41, "5": [31, 45, 46], "526": 39, "5433": 16, "6": 31, "614697": 30, "6152": 16, "64": [6, 9, 43], "652622": 30, "65280": 41, "7": [16, 31, 43], "712": 16, "716998": 24, "721222": 25, "738574": 27, "7520": 16, "76543210": 45, "8": [9, 31, 41, 43, 44, 46], "813911": 25, "815762": 24, "845472": 30, "883599": 24, "8859": 46, "9": [16, 31], "936": 16, "948262": 25, "960612": 25, "963965": 25, "968687": 30, "97": 43, "999292": 24, "A": [5, 6, 7, 9, 10, 12, 15, 16, 26, 29, 31, 38, 39, 40, 41, 44, 45, 46], "AND": 40, "And": 47, "As": [4, 18, 39, 41, 45], "By": [16, 19, 40, 41, 43, 45, 47], "For": [16, 18, 19, 21, 26, 38, 39, 41, 44, 45, 46, 48], "If": [1, 3, 4, 9, 12, 13, 16, 39, 41, 42, 44, 45, 46, 47], "In": [12, 16, 39, 40, 41, 43, 44, 45, 46, 47], "It": [3, 4, 5, 9, 15, 16, 18, 19, 22, 38, 39, 40, 41, 43, 44, 45, 46, 47], "Its": [41, 44, 45, 46], "No": [3, 41], "OR": [12, 44], "One": [40, 41], "That": [41, 46, 47], "Thats": 45, "The": [5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48], "Their": 41, "There": [3, 4, 18, 20, 39, 40, 41, 43, 45], "These": [15, 41, 46], "To": [16, 20, 39, 41, 42, 44, 45, 46, 47], "Will": 41, "With": [16, 41, 43, 44, 46, 47], "_": [3, 12, 16, 41, 43, 45, 46], "_1": 45, "_123": 41, "_2": 45, "_3": 45, "_4": 45, "_5": 45, "_6": 45, "__": 40, "__4be4f2562b65393cformattempl": 41, "___": 45, "__add__": [41, 44], "__and__": [12, 44], "__annotations__": [15, 16, 22, 39], "__bits__": [12, 41], "__byteorder__": [6, 12, 41], "__call__": [41, 44], "__context_getattr__": [19, 22, 32], "__default": 5, "__dict__": 22, "__eq__": 39, "__floordiv__": 44, "__future__": [16, 41], "__getitem__": 44, "__hash__": 39, "__iadd__": 44, "__init__": [12, 15], "__ior__": 44, "__isub__": 44, "__ixor__": 44, "__main__": 41, "__match_args__": 22, "__matmul__": 44, "__model_init__": 15, "__model_setattr__": 15, "__mro__": 22, "__name__": 41, "__or__": 44, "__pack__": [12, 18, 22, 41], "__pack_many__": 22, "__qualname__": 22, "__rand__": 12, "__repr__": [12, 39], "__rshift__": 44, "__rsub__": 44, "__set_byteorder__": 41, "__setattr__": 15, "__size__": [12, 18, 22, 41], "__slots__": [16, 22], "__struct__": [5, 22, 39, 41, 46], "__sub__": 44, "__template__": 41, "__type__": [12, 18, 22, 41], "__unpack__": [12, 18, 22, 41, 45], "__unpack_many__": [22, 40], "__weakref__": 22, "__xor__": 44, "_arch": 45, "_argtyp": 11, "_c": [21, 29], "_codemodulest": 18, "_compressor": 10, "_containsstruct": [5, 10, 15], "_contextlambda": [5, 7, 9, 10, 11, 12, 41, 44], "_contextlik": [5, 9, 10, 11, 12], "_coremodulest": [18, 32, 39], "_cp_name": 21, "_cp_pack": 40, "_cp_unpack": 40, "_cppack_evallength": 40, "_enumlik": [5, 9], "_exampl": 20, "_field": [7, 41], "_greedytyp": [11, 12, 44], "_i16_l": 29, "_index": [7, 41], "_infix_": 45, "_io": [7, 41], "_is_seq": 7, "_m_little_endian": 29, "_m_sign": 29, "_member_map_": 9, "_modulest": [22, 23], "_obj": [7, 41, 44], "_offset": [7, 41], "_parent": [7, 41], "_path": [7, 41], "_po": [7, 41], "_prefixedtyp": 44, "_richcmp": 31, "_structlik": [5, 9, 10, 11, 12, 15, 41], "_supportspack": 5, "_supportss": 5, "_supportsunpack": [5, 15], "_switch": [5, 12], "_valu": [7, 41, 44], "_value2member_map_": 9, "abc": [5, 9], "abcd": 41, "abil": 47, "abl": [11, 43, 44, 48], "about": [3, 13, 22, 41, 45, 47], "abov": [18, 40, 41, 47], "absenc": 41, "absolut": 41, "abstract": [9, 12, 14, 18, 42], "accept": 44, "access": [5, 7, 19, 29, 32, 38, 41, 44, 46, 47], "accord": 40, "accordingli": 41, "accumul": [24, 25, 27, 30], "achiev": [16, 41], "acknowledg": 43, "acquir": 45, "act": [9, 41, 44], "action": 46, "activ": 41, "actual": [12, 41, 43, 46], "ad": [0, 12, 16, 41, 44, 45], "adapt": [15, 41, 47], "add": [1, 4, 15, 16, 39, 41, 43, 45, 46], "add_field": 15, "addit": [4, 9, 11, 12, 15, 16, 39, 40, 41, 45, 46, 47], "addition": [3, 41, 43, 46], "address": [40, 43], "adjust": 3, "advanc": [46, 47, 48], "advantag": 43, "advis": [41, 43], "affect": [44, 45, 46], "after": [12, 43, 44, 47], "afterward": [41, 44], "again": [4, 40, 41, 46], "against": 46, "agnost": 41, "aim": [41, 43], "algo_arg": 11, "algorithm": [10, 11], "align": 6, "all": [3, 4, 8, 13, 15, 16, 18, 19, 22, 26, 39, 40, 41, 43, 44, 45, 46, 47], "allow": [5, 8, 12, 40, 41, 45, 46], "almost": 44, "alon": 45, "along": 41, "alreadi": [39, 41, 44, 45], "also": [1, 3, 15, 16, 32, 41, 43, 44, 45, 46, 47], "alter": [12, 16, 39, 41, 44, 45], "altern": [3, 18, 44], "although": [39, 40, 41, 45], "alwai": [34, 39, 40, 41, 46], "amazingfeatur": 1, "amd64": 43, "amount": [6, 12, 16, 38, 44], "an": [2, 5, 6, 7, 8, 9, 11, 12, 15, 16, 18, 20, 21, 23, 26, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48], "analyz": 16, "ancillari": 45, "ani": [1, 5, 7, 9, 10, 11, 12, 15, 16, 38, 41, 44, 45, 46], "annot": [3, 12, 16, 39, 41, 43, 44, 46, 47, 48], "anonym": 41, "anoth": [6, 12, 41, 44, 47], "answer": 3, "any_typ": 22, "anywher": 41, "api": [3, 41, 45, 48], "append": [21, 35], "appli": [3, 6, 7, 15, 16, 20, 41, 44, 45, 46, 47], "applic": [41, 44, 46, 47, 48], "approach": [39, 41, 46, 48], "appropri": 41, "approv": 4, "approxim": 43, "ar": [3, 4, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47], "arch": [6, 12, 15, 22, 36, 41, 42, 47], "architectur": [12, 14, 15, 41, 45, 47], "arg": [5, 11, 15, 21, 26], "argument": [5, 11, 15, 21, 31, 39, 41, 44, 45, 47], "arm": 48, "around": [39, 43], "arrai": [3, 16, 41, 43, 44, 45, 47, 48], "ascii": 46, "asizeof": 16, "ask": 1, "aspect": [41, 43], "assert": 43, "assign": [12, 40, 41, 43, 45], "associ": [12, 16, 29, 41, 46, 47], "assum": [20, 41, 47], "atom": [17, 34, 36, 40, 42], "attach": [16, 41], "attempt": [8, 41], "attr": 16, "attribut": [5, 9, 12, 14, 15, 16, 29, 32, 39, 41, 44, 45, 47], "audio": 16, "auto": 46, "autoclass": 41, "autodoc": 41, "autodoc_member_ord": 47, "automat": [3, 7, 12, 40, 41, 43, 45, 46, 47], "avail": [3, 41, 43, 47], "avoid": [40, 47], "awar": [16, 46], "b": [1, 3, 7, 9, 12, 16, 29, 40, 41, 43, 44, 45, 46, 47], "b1": 43, "b3": 43, "b4": 43, "back": [44, 45], "bahaviour": 45, "bar": [3, 15, 19, 41, 44, 45], "base": [3, 7, 8, 12, 14, 16, 18, 29, 33, 39, 41, 43, 45, 46], "baseformat": 41, "basic": [13, 41, 45, 47, 48], "baz": [3, 15, 41, 44, 45], "becaus": [15, 16, 39, 41, 44, 45, 46], "becom": 47, "been": [3, 12, 41, 43, 44, 46], "befor": [15, 16, 18, 20, 40, 41, 45, 46], "begin": [12, 26, 41], "behav": [41, 45], "behavior": [12, 41, 44, 45], "behaviour": [9, 16, 44, 46], "being": [41, 43, 46], "below": [29, 31, 41, 43, 44, 45], "benchmark": 43, "benefici": 43, "besid": 46, "beta": 41, "better": 1, "between": [39, 41, 43], "beyond": 46, "bi": 45, "big": [3, 6, 9, 29, 47], "bigendian": [6, 41, 43, 45, 46, 47], "biggest": 43, "binari": [3, 5, 7, 9, 36, 42, 43, 44, 45, 46, 47, 48], "binaryexpress": 7, "bit": [6, 9, 12, 29, 41, 43, 44, 45, 46], "bitfield": [15, 43, 44, 48], "bitfieldgroup": [15, 41], "bits8": 43, "bitsinteg": 43, "bitstruct": 43, "blob": [43, 45], "block": [11, 26, 43, 47], "blockfield": 43, "blueprint": 41, "bodi": 45, "bool": [5, 7, 9, 12, 15, 16, 28, 36, 40, 42], "bool1": 43, "boolatom": 24, "boolean": [7, 9, 12, 41, 44, 46], "both": 3, "bound": [15, 45, 46], "boundari": 6, "box": 4, "brace": 46, "branch": [1, 46], "break": 46, "breakdown": 45, "breathtak": 46, "bring": [43, 45], "buffer": 15, "build": [12, 20, 41, 43, 46], "builder": [3, 45], "built": [40, 41, 43, 46], "burn": 43, "butterfli": 43, "bysourc": 47, "byte": [6, 10, 12, 13, 15, 16, 29, 38, 41, 43, 44, 45, 47, 48], "byteord": [12, 14, 15, 46], "byteorder_field": 6, "bytesio_typ": 22, "bz2": [10, 46], "bz2compress": 10, "c": [3, 4, 9, 16, 21, 22, 24, 25, 27, 29, 30, 32, 34, 38, 39, 40, 41, 45, 46], "c_extens": 20, "cach": [15, 18], "caf": [16, 43], "cafaudioformat": 43, "cafchunk": 43, "cafchunkhead": 43, "cafdata": 43, "cafpackett": 43, "cafstringschunk": 43, "calcul": [12, 18, 41, 46], "call": [8, 15, 16, 18, 24, 25, 27, 29, 30, 31, 39, 40, 41, 43, 44, 45, 46], "callabl": [7, 10, 15, 41, 44], "can": [1, 3, 4, 5, 8, 9, 12, 15, 16, 18, 26, 29, 39, 40, 41, 43, 44, 45, 46, 47], "candid": 4, "capabl": [18, 41], "capi": [3, 42], "captur": 41, "case": [39, 41, 43, 44, 45, 46], "categori": 41, "caterpillar": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 41, 42, 44, 45, 46, 47, 48], "catom": 20, "caus": 45, "caution": [16, 41, 43], "certain": [44, 46], "ch": [6, 9], "chain": [12, 13, 41, 44, 48], "challeng": [41, 45], "chang": [1, 18, 41, 42, 44, 45, 47], "changelog": [2, 3], "chapter": 46, "char": [9, 21, 28, 32, 33, 36, 42, 46], "charact": [6, 46], "charatom": 25, "check": [5, 9, 12, 15, 16, 18, 23, 26, 32, 33, 34, 35, 37, 38, 39, 40], "checklist": 1, "checkout": 1, "chnk": 45, "choic": [8, 45], "choos": 44, "chunk": [16, 45, 46, 47], "chunk_head": 43, "chunk_siz": 43, "chunk_typ": 43, "chunknam": 45, "chunkopt": 45, "chunkt": 46, "cipheralgorithm": 11, "cl": 15, "class": [3, 6, 8, 9, 10, 11, 12, 16, 18, 19, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48], "clean": 48, "clone": 4, "close": [22, 45], "cmake": 20, "cmake_minimum_requir": 20, "cmakelist": 20, "code": [3, 16, 26, 40, 41, 43, 46, 47, 48], "codebas": 47, "coffe": 46, "collect": [15, 39, 41, 45], "com": 4, "combin": [12, 41, 45], "come": [3, 4, 16, 40, 45, 46], "command": 20, "comment": 41, "commit": 1, "common": [13, 14, 45, 46, 47], "comp_kwarg": 10, "compact": [3, 46, 48], "compar": [29, 43, 45], "comparison": [41, 42], "comparison_1_caterpillar": 43, "comparison_1_construct": 43, "comparison_1_hachoir": 43, "comparison_1_kaitai": 43, "comparison_1_mrcrowbar": 43, "compat": [13, 41], "compil": 43, "complet": [41, 42, 45, 48], "complex": [3, 43, 46], "compon": 20, "compress": [4, 13, 14, 48], "compression_flag": 46, "compression_method": 46, "compressor": 10, "comput": [9, 48], "con": 42, "concaten": [12, 41], "concept": 48, "concern": [41, 47], "concret": 42, "concurr": 41, "condit": [7, 12, 34, 40, 41, 44, 46, 48], "conditioncontext": 7, "configur": [3, 8, 9, 12, 15, 20, 34, 39, 41, 45, 46, 48], "conflict": 43, "conform": [32, 34, 38, 39], "congratul": 46, "consequ": 41, "consid": [16, 18, 19, 42, 43, 48], "consider": [16, 41, 43], "const": [9, 21, 32, 33, 48], "constant": [3, 7, 9, 12, 16, 22, 31, 44, 47, 48], "constbyt": [9, 48], "construct": [24, 25, 27, 30, 41, 43], "constructor": [15, 41, 45, 46], "conststr": 9, "contain": [5, 16, 20, 39, 43, 46, 47], "content": [8, 20, 46], "context": [3, 8, 9, 10, 11, 12, 16, 17, 18, 34, 36, 38, 42, 45, 47, 48], "contextlength": 7, "contextpath": [7, 44], "continu": 44, "contrast": [39, 41], "contribut": [2, 3, 4, 48], "control": 16, "convent": [16, 41, 45], "convert": 46, "copi": [38, 39, 41, 44], "core": [13, 22, 39, 41, 43], "correct": [41, 47], "correctli": [26, 45, 47], "correspond": [4, 9, 24, 25, 27, 30, 41, 45, 46], "could": [45, 47], "count": [35, 41, 43, 45, 46], "counterpart": 29, "cover": [12, 20, 39, 43], "cp_arch__host": 22, "cp_enable_n": 4, "cp_enable_tool": 4, "cp_endian__big": 22, "cp_endian__littl": 22, "cp_endian__n": 22, "cp_include_dir": 20, "cp_option__discard_const": 22, "cp_option__discard_unnam": 22, "cp_option__dynam": 22, "cp_option__ev": 22, "cp_option__global_field_opt": 22, "cp_option__global_struct_opt": 22, "cp_option__keep_posit": 22, "cp_option__replace_typ": 22, "cp_option__sequenti": 22, "cp_option__slot": 22, "cp_option__union": 22, "cp_pack": 40, "cp_pack_atom": 40, "cp_pack_catom": 40, "cp_pack_common": 40, "cp_pack_field": 40, "cp_pack_intern": 40, "cp_pack_struct": 40, "cparch_check": 23, "cparch_checkexact": 23, "cparch_typ": 23, "cparchobject": 23, "cpatom": 18, "cpatom_callpack": 18, "cpatom_calls": 18, "cpatom_canpack": 18, "cpatom_canunpack": 18, "cpatom_fastcanpack": 18, "cpatom_fastcanunpack": 18, "cpatom_fasthass": 18, "cpatom_fasthastyp": 18, "cpatom_hass": 18, "cpatom_hastyp": 18, "cpatom_typ": 18, "cpatomobject": 18, "cpbinaryexpr": 31, "cpbinaryexpr_new": 31, "cpbinaryexpr_op_eq": 31, "cpbinaryexpr_op_g": 31, "cpbinaryexpr_op_gt": 31, "cpbinaryexpr_op_l": 31, "cpbinaryexpr_op_lt": 31, "cpbinaryexpr_op_n": 31, "cpbinaryexpr_opadd": 31, "cpbinaryexpr_opand": 31, "cpbinaryexpr_opbitand": 31, "cpbinaryexpr_opbitor": 31, "cpbinaryexpr_opbitxor": 31, "cpbinaryexpr_opfloordiv": 31, "cpbinaryexpr_oplshift": 31, "cpbinaryexpr_opmatmul": 31, "cpbinaryexpr_opmod": 31, "cpbinaryexpr_opmul": 31, "cpbinaryexpr_opor": 31, "cpbinaryexpr_oppow": 31, "cpbinaryexpr_oprshift": 31, "cpbinaryexpr_opsub": 31, "cpbinaryexpr_optruediv": 31, "cpbinaryexpr_typ": 31, "cpbinaryexprobject": 31, "cpboolatom_pack": 24, "cpboolatom_typ": 24, "cpboolatom_unpack": 24, "cpboolatomobject": 24, "cpcatomobject": [26, 40], "cpcharatom_pack": 25, "cpcharatom_typ": 25, "cpcharatom_unpack": 25, "cpcharatomobject": 25, "cpcontext_check": 32, "cpcontext_checkexact": 32, "cpcontext_getattr": 32, "cpcontext_getattrstr": 32, "cpcontext_new": 32, "cpcontext_typ": 32, "cpcontextobject": [32, 40], "cpcontextpath_check": 33, "cpcontextpath_checkexact": 33, "cpcontextpath_fromstr": 33, "cpcontextpath_new": 33, "cpcontextpath_typ": 33, "cpcontextpathobject": 33, "cpendian_check": 23, "cpendian_checkexact": 23, "cpendian_islittleendian": 23, "cpendian_typ": 23, "cpendianobject": 23, "cpfield": 39, "cpfield_check": 34, "cpfield_checkexact": 34, "cpfield_evalswitch": 34, "cpfield_getlength": 34, "cpfield_getoffset": 34, "cpfield_hascondit": 34, "cpfield_isen": 34, "cpfield_new": 34, "cpfield_typ": 34, "cpfieldatom_check": 26, "cpfieldatom_checkexact": 26, "cpfieldatom_head": 26, "cpfieldatom_typ": 26, "cpfieldatomobject": 26, "cpfieldcatom_catom": 26, "cpfieldcatom_check": 26, "cpfieldcatom_checkexact": 26, "cpfieldcatom_head": 26, "cpfieldcatom_typ": 26, "cpfieldcatomobject": 26, "cpfieldobject": [34, 39, 40], "cpfloatatom_pack": 27, "cpfloatatom_typ": 27, "cpfloatatom_unpack": 27, "cpfloatatomobject": 27, "cpintatom_typ": 29, "cpintatomobject": 29, "cplayer_appendpath": 35, "cplayer_check": 35, "cplayer_checkexact": 35, "cplayer_invalid": 35, "cplayer_new": 35, "cplayer_setsequ": 35, "cplayer_typ": 35, "cplayerobject": [24, 25, 27, 30, 35, 40], "cpmodul": 22, "cpmodule_setuptyp": [22, 26], "cpobject_cr": 21, "cpobject_createnoarg": 21, "cpobject_createonearg": 21, "cpoption_check": 37, "cpoption_checkexact": 37, "cpoption_typ": 37, "cpoptionobject": 37, "cppack": 40, "cppack_catom": 40, "cppack_common": 40, "cppack_field": 40, "cppack_struct": 40, "cppaddingatom_pack": 30, "cppaddingatom_packmani": 30, "cppaddingatom_typ": 30, "cppaddingatom_unpack": 30, "cppaddingatom_unpackmani": 30, "cppaddingatomobject": 30, "cpsizeof": 40, "cpsizeof_common": 40, "cpsizeof_field": 40, "cpsizeof_struct": 40, "cpstate": 18, "cpstate_check": 38, "cpstate_checkexact": 38, "cpstate_new": 38, "cpstate_read": 38, "cpstate_readfulli": 38, "cpstate_seek": 38, "cpstate_setglob": 38, "cpstate_tel": 38, "cpstate_typ": 38, "cpstate_writ": 38, "cpstateobject": [35, 38], "cpstruct_addfield": 39, "cpstruct_addfieldinfo": 39, "cpstruct_check": 39, "cpstruct_checkexact": 39, "cpstruct_getannot": 39, "cpstruct_hasopt": 39, "cpstruct_new": 39, "cpstruct_replacetyp": 39, "cpstruct_typ": 39, "cpstructfieldinfo": 39, "cpstructfieldinfo_check": 39, "cpstructfieldinfo_checkexact": 39, "cpstructfieldinfo_new": 39, "cpstructfieldinfo_typ": 39, "cpstructfieldinfoobject": 39, "cpstructmodel_check": 39, "cpstructmodel_getstruct": 39, "cpstructobject": [39, 40], "cptypeof": 40, "cptypeof_common": 40, "cptypeof_field": 40, "cpunaryexpr": 31, "cpunaryexpr_new": 31, "cpunaryexpr_opneg": 31, "cpunaryexpr_opnot": 31, "cpunaryexpr_oppo": 31, "cpunaryexpr_typ": 31, "cpunaryexprobject": 31, "cpunpack": 40, "cpunpack_catom": 40, "cpunpack_common": 40, "cpunpack_field": 40, "cpunpack_struct": 40, "crc": 45, "creat": [1, 3, 7, 10, 12, 15, 16, 18, 20, 21, 26, 31, 32, 33, 34, 35, 38, 39, 40, 41, 43, 44, 45, 48], "createfield": 43, "createsa": 40, "creation": [40, 41, 45], "crucial": [41, 43, 46], "crypt": 4, "cryptograph": [13, 14], "cstring": [3, 9, 41, 43, 44, 45, 48], "cstringn": 43, "ctx": [7, 18, 41, 44], "ctx_field": [7, 41], "ctx_index": [7, 41], "ctx_object": [7, 41], "ctx_offset": [7, 41], "ctx_parent": [7, 41], "ctx_path": [7, 41], "ctx_po": [7, 41], "ctx_seq": 7, "ctx_stream": [7, 41], "ctx_valu": [7, 41], "current": [3, 8, 9, 11, 12, 15, 23, 38, 40, 41, 42, 44, 45, 46], "custom": [3, 20, 39, 44, 48], "customiz": 16, "d": [9, 16, 40, 43], "d_compil": 43, "dai": 47, "data": [3, 5, 9, 10, 11, 12, 15, 16, 18, 19, 31, 34, 39, 42, 43, 44, 45, 46, 48], "dataclass": [39, 41], "deactiv": 12, "deal": 46, "decid": [12, 16, 41], "decis": 41, "declar": [3, 12, 15, 41, 47], "decod": [9, 10, 47], "decomp_kwarg": 10, "decompress": [10, 45], "decor": [15, 44, 45, 47], "decreas": 35, "decrypt": [4, 11], "dedic": 41, "deeper": [43, 48], "def": 43, "default": [4, 6, 9, 11, 12, 15, 16, 19, 22, 40, 41, 43, 44, 45, 46, 47], "default_opt": [43, 44, 45], "default_valu": 43, "defin": [3, 15, 16, 18, 20, 26, 29, 31, 38, 40, 41, 42, 43, 44, 45, 46, 48], "definit": [3, 7, 12, 15, 39, 41, 43, 44, 45, 46, 47, 48], "degre": 43, "del_field": 15, "delegationerror": 8, "deliber": 41, "deliv": 43, "delv": 42, "demonstr": [20, 41, 43, 46], "depend": [4, 19, 41, 43, 45, 47], "depent": 41, "depth": [7, 12], "deriv": [15, 41, 45], "desc": 43, "describ": [1, 18, 29, 39, 41, 42, 43, 44], "descript": [14, 45], "deseri": [15, 41], "desersi": 41, "design": [3, 4, 16, 18, 19, 40, 41, 43, 44, 45, 46, 47], "desir": [4, 11, 41, 43], "despit": 41, "destin": [20, 40, 45], "detail": [1, 3, 29, 46, 47], "determin": [5, 8, 18, 39, 41], "develop": [1, 3, 4, 20, 42], "dict": [8, 10, 12, 15, 41], "dictat": 41, "dictclass": 16, "dictionari": [5, 15, 39, 41, 44], "differ": [39, 41, 43, 44, 45, 46], "dig": 48, "dir": 20, "direct": [4, 5, 29, 41, 45, 46], "directli": [20, 39, 41, 43, 44, 47], "directori": 20, "disabl": [16, 40], "disadvantag": 41, "discard": 16, "discov": 39, "discuss": [1, 3, 13, 41, 43, 46], "displai": [12, 40, 41, 47], "distinct": 41, "distinguish": 41, "dive": 43, "divers": 48, "divid": 46, "do": [18, 34, 41, 45, 46, 48], "doc": [41, 43, 45, 47], "document": [16, 20, 41, 42, 43, 45, 46, 48], "doe": [3, 4, 9, 12, 18, 39, 41, 44, 45, 46], "doesn": [43, 44, 46], "don": [3, 4, 26, 44, 45, 46], "done": [4, 13, 46, 47], "dot": 19, "down": 45, "draft": 1, "due": 47, "duplic": 41, "dure": [9, 12, 39, 41, 45], "dynam": [3, 8, 12, 41, 44, 46], "dynamicsizeerror": [8, 12, 41], "e": [4, 9, 12, 16, 40, 41, 45, 46], "each": [12, 15, 16, 18, 40, 41, 47], "earlier": [41, 46], "eas": [41, 43, 46], "easi": [3, 41, 47, 48], "easier": 3, "effect": [29, 44, 45], "effici": [3, 29], "effort": 31, "eight": 41, "either": [1, 16, 20, 41, 44, 45], "element": [8, 9, 11, 12, 19, 39, 40, 41, 44, 46], "elimin": [43, 46], "ellipsi": [11, 12, 15, 41], "els": [5, 15, 41, 44, 45], "elseif": [12, 13, 45], "elsewher": 41, "emploi": 41, "emul": 45, "en": 43, "enabl": [3, 4, 12, 16, 19, 34, 41, 44, 47, 48], "encapsul": [46, 47], "encod": [3, 9, 10, 43, 46, 47], "encount": 46, "encourag": 47, "encout": 1, "encrypt": [4, 11], "end": [9, 12, 41, 44, 46, 48], "endia": [45, 46], "endian": [3, 6, 9, 22, 29, 36, 42, 43, 47], "enforc": 9, "engin": [3, 43], "enhanc": [1, 41, 43, 44, 45], "enough": 45, "ensur": [9, 20], "entail": 41, "entir": 38, "entri": [0, 3, 43, 47], "enum": [5, 9, 15, 31, 41, 46, 47], "enumer": [6, 9, 48], "environ": 4, "eof": 44, "equip": [45, 48], "equival": [26, 32, 34, 47], "error": [8, 15, 18, 21, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 46], "especi": 4, "essenc": 41, "essenti": [41, 46], "etc": 46, "eval": 39, "evalu": [12, 31, 34, 40, 41], "even": [3, 41, 44, 45, 46], "everi": [38, 41, 46, 47], "everyon": 4, "everyth": [13, 44, 47], "evid": 41, "evolv": 42, "exampl": [3, 15, 16, 19, 20, 21, 29, 41, 43, 45, 46, 47], "except": [1, 39, 41, 44, 45], "exclud": [39, 41], "exclus": 41, "execut": [1, 12, 16, 41, 44], "execute_process": 20, "exercis": 41, "exist": [7, 41], "expand": 22, "expect": [45, 47], "experi": 43, "experiment": [41, 44], "explain": [41, 48], "explan": [3, 46], "explicit": 41, "explicitli": [6, 12, 41, 47], "explor": [46, 47, 48], "expr": 43, "express": [14, 36, 41, 42, 46], "exprmixin": 7, "extend": [4, 20, 39, 41, 44, 45, 46], "extens": [3, 4, 20, 41, 43], "extern": [26, 43], "extra": [4, 12, 39, 41, 44, 45, 46, 47], "f": [9, 16, 44, 45, 46], "f0": 45, "f1": 45, "f2": 45, "f3": 45, "f_dynam": 16, "f_keep_posit": [16, 44], "f_offset_overrid": 16, "f_sequenti": 16, "facil": 44, "facilit": 43, "factori": 16, "fail": 8, "fall": 41, "fallback": [43, 46], "fals": [5, 9, 15, 16, 41, 45], "fasten": 40, "faster": [18, 43, 47], "fastest": 43, "fdat": [45, 46], "fdatchunk": [45, 46], "featur": [2, 16, 41, 43, 44, 47, 48], "feel": [1, 46], "few": [38, 39], "field": [3, 7, 9, 10, 11, 14, 15, 24, 25, 27, 28, 30, 36, 39, 40, 42, 43, 46, 47, 48], "field_kwd": 15, "field_opt": 15, "fieldmixin": [12, 13, 26, 41, 44], "fieldset": 43, "fieldstruct": [9, 12, 13], "figur": 43, "file": [3, 15, 16, 20, 43, 44, 45, 46, 47], "filenam": 15, "files": 16, "fill": 41, "final": [15, 16, 41, 42, 44, 45], "find": 47, "find_packag": 20, "finish": 45, "finit": [39, 41], "first": [12, 19, 31, 40, 41, 44, 45, 48], "firstli": 44, "five": 46, "fix": [3, 4, 29, 41, 44, 45], "fixedarrai": 43, "fixedarray1": 43, "flag": [9, 12, 15, 16, 39, 43, 44], "float": [9, 28, 36, 42, 44, 46], "float16": [9, 46], "float32": [9, 46], "float32n": 27, "float64": [9, 46], "floatatom": 27, "focu": [41, 47], "focus": [29, 43], "follow": [1, 3, 4, 9, 16, 18, 19, 20, 26, 29, 40, 41, 43, 44, 45, 46, 47], "foo": [3, 7, 15, 19, 21, 41, 44, 45, 46], "fooatom": 26, "fooatom_new": 26, "fooatom_pack": 26, "fooatom_typ": 26, "fooatom_unpack": 26, "foobar": 46, "foohello": 3, "forget": [4, 26], "fork": 1, "form": [3, 12, 41, 43], "formal": 14, "format": [3, 6, 7, 9, 12, 16, 21, 41, 43, 44, 45, 46, 47, 48], "format16": 45, "format2": 16, "format32": [41, 45], "format8": 45, "formatfield": [9, 16, 29, 41], "formatsubtempl": 45, "formattempl": [41, 45], "forward": 47, "found": [12, 16, 32, 39, 41], "foundat": [13, 41, 43], "four": [18, 29, 47], "frame": [7, 46], "frame_data": 46, "framework": [3, 41, 42, 43, 48], "free": [1, 43], "friendli": [3, 42, 44, 45, 48], "from": [5, 6, 7, 9, 12, 15, 16, 18, 19, 26, 29, 31, 32, 33, 38, 39, 41, 43, 44, 45, 46, 47, 48], "from_byt": 29, "full": 40, "fulli": 40, "fun": 43, "function": [5, 7, 11, 12, 14, 18, 19, 24, 25, 27, 30, 33, 34, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48], "fundament": [29, 47], "funtion": 40, "further": [29, 41, 45], "furthermor": [18, 41], "futur": [0, 44, 45], "g": [9, 16, 24, 25, 27, 30, 41, 45, 46, 47], "gain": [46, 48], "gama": [45, 46], "gamachunk": [45, 46], "gamma": 46, "gamma_valu": 46, "gener": [2, 3, 5, 39, 40, 41, 43, 45], "get": [3, 5, 6, 11, 12, 15, 16, 32, 42, 45, 47], "get_annot": 39, "get_flag": 16, "get_global_core_st": 39, "get_global_module_st": 22, "get_inst": 11, "get_memb": 41, "get_module_st": 22, "get_offset": 12, "get_struct": 12, "get_typ": 12, "getattr": [18, 41, 44], "getitem": 44, "getsizeof": 16, "getstruct": 5, "getvalu": 22, "git": [1, 4], "github": [1, 3, 4, 41, 45], "given": [3, 5, 6, 12, 13, 15, 21, 22, 23, 26, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47], "global": [9, 15, 18, 22, 24, 25, 27, 29, 30, 38, 40, 44, 45, 47], "global_const": 12, "go": [41, 45], "goal": 43, "goe": 45, "greatest": 41, "greedi": [35, 44, 45, 46], "greedili": 40, "group": 41, "guid": 20, "guidelin": [2, 4], "h": [9, 20], "ha": [4, 5, 7, 9, 12, 15, 16, 34, 39, 41, 44, 46], "hachoir": 43, "handi": 46, "handl": [8, 9, 29, 41, 48], "happend": 1, "has_condit": 12, "has_flag": [12, 16], "has_opt": 15, "hasstruct": 5, "hastili": 48, "have": [2, 3, 4, 5, 12, 15, 16, 20, 43, 44, 45, 46, 47], "haven": 46, "head": [12, 45], "header": 20, "hello": [3, 45, 46], "help": [44, 45, 47], "helper": 31, "henc": 41, "here": [7, 20, 41, 43, 45, 46, 47, 48], "heve": 46, "hierarchi": 41, "high": [39, 48], "highlight": 41, "hook": [15, 41], "hook_cl": 45, "hour": 47, "how": [3, 20, 29, 41, 45], "howev": 46, "html": 3, "http": [4, 43], "i": [3, 4, 6, 8, 9, 11, 12, 13, 15, 16, 18, 19, 21, 23, 26, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48], "i16": 29, "i16_l": 29, "id": 43, "ident": 39, "identifi": 9, "iend": 45, "ignor": [9, 41], "ihdr": 45, "ihdrchunk": 45, "illustr": [29, 41], "imag": 45, "impact": [12, 29, 41], "implement": [7, 9, 12, 13, 15, 18, 19, 20, 24, 25, 26, 27, 29, 30, 32, 34, 39, 40, 43, 44, 45, 46, 47], "implicitli": 46, "import": [16, 20, 29, 41, 43, 44, 45, 46, 47, 48], "import_caterpillar": 20, "imposs": 47, "improv": 44, "includ": [4, 6, 15, 16, 20, 41, 43, 44, 46], "inclus": 47, "incorpor": [16, 18, 41, 43], "independ": [41, 47], "index": [3, 41], "indic": [5, 6, 12, 18, 29, 41], "individu": [40, 41], "infer": [12, 15, 41, 45], "info": [39, 43], "inform": [3, 6, 10, 13, 22, 41, 45, 47], "ingor": 16, "inherit": [18, 26, 41, 44], "initi": [12, 15, 26, 39, 43, 44], "inlin": [7, 15, 22], "inner": 41, "input": [9, 10, 40, 41, 46, 47], "insert": [40, 41], "insid": 41, "insight": [41, 48], "inspect": [39, 41], "inspir": 26, "instal": [20, 41, 46], "instanc": [11, 12, 15, 16, 18, 23, 24, 25, 26, 27, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47], "instanti": [41, 47], "instead": [38, 41, 42, 43, 45, 46], "int": [6, 9, 10, 11, 12, 15, 16, 18, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 44, 45, 46], "int16": [9, 46], "int24": 46, "int24ul": 43, "int32": [9, 46], "int32ul": 43, "int64": [9, 46], "int8": [9, 46], "int8_t": 35, "int8ul": 43, "intatom": 29, "integ": [9, 28, 36, 42, 44, 45, 47, 48], "integr": [20, 41, 43, 46, 47], "intend": [41, 46], "intenum": 46, "intercept": 15, "interfac": [13, 14, 18, 39, 42, 44], "intern": [3, 12, 13, 15, 16, 22, 39, 40, 41, 42, 44, 45, 46, 48], "interpret": [20, 43, 46, 47], "intric": 41, "introduc": [18, 39, 40, 41, 45, 46, 47, 48], "introduct": [3, 42, 47], "introspect": 18, "invalid": [8, 35], "invalidvalueerror": 8, "invert": 45, "invok": [18, 41, 44], "involv": [3, 41, 43, 47], "io": [38, 40], "iobas": 15, "is_en": 12, "is_pad": 9, "is_seq": 12, "isn": 46, "iso": 46, "issu": [2, 3, 8, 41], "istempl": 15, "item": [43, 46], "iter": [11, 12, 15, 40, 41, 43], "its": [9, 12, 16, 18, 20, 29, 39, 40, 41, 43, 44, 45, 47], "itxt": [45, 46], "itxtchunk": [45, 46], "journi": 45, "jump": 44, "just": [1, 3, 16, 38, 41, 43, 45, 46, 47], "k": [43, 45], "kaitai": 43, "keep": 46, "keep_posit": 12, "kei": [32, 41, 44, 45], "keword": 46, "keyword": [15, 41, 44, 45, 46, 47], "kind": 44, "know": 45, "knowledg": 46, "known": [41, 44], "kwarg": [5, 15, 44], "kwd": [15, 26], "l": [40, 43], "lack": 43, "lambda": [5, 7, 12, 33, 44, 45, 46], "languag": 20, "language_tag": 46, "larva": 43, "last": [9, 12, 41, 44, 45, 46], "later": [41, 46, 47], "latest": 43, "layer": [24, 25, 27, 30, 38, 40, 41, 42], "layout": 45, "lazi": [31, 41, 44], "le": [3, 9, 29, 43], "learn": 48, "least": 39, "leav": 45, "left": [7, 31, 45], "len": 46, "len_name2": 43, "length": [3, 7, 9, 10, 11, 12, 34, 35, 40, 41, 44, 45, 48], "length_field": 43, "lenof": [44, 46], "less": [16, 47], "let": [3, 45, 46, 47], "level": [39, 41, 46, 48], "leverag": [40, 41], "librari": [3, 4, 13, 20, 39, 41, 42, 43, 45, 46, 47, 48], "like": [5, 41, 43, 44, 45, 46, 47], "limit": [44, 45], "line": [16, 20, 43, 45], "link": [4, 12, 41, 43, 44], "list": [9, 12, 15, 31, 41, 44, 47, 48], "list_typ": 22, "littl": [3, 6, 9, 23, 29, 43, 47], "little_endian": [29, 43], "littleendian": [6, 43], "ll": [46, 48], "local": [24, 25, 27, 30], "logic": [12, 42, 44], "look": [3, 45, 46, 47], "lookup": 12, "lose": 44, "lot": 46, "low": 39, "lower": [16, 45], "lzallright": 46, "lzma": [10, 46], "lzmacompress": 10, "lzo": [4, 10, 46], "lzocompress": 10, "m": [1, 20, 39, 45, 46], "m_byte_count": 29, "macro": [26, 35, 42], "magic": [3, 7, 41, 45, 46], "mai": [12, 16, 18, 38, 40, 41, 42, 44, 46], "main": [45, 46], "maintain": 41, "make": [1, 4, 26, 41, 43, 45, 46], "manag": [12, 29, 39], "mandatori": [40, 41], "mani": 41, "manner": 3, "manual": [18, 20], "map": [5, 41, 44], "mark": [1, 40, 44], "master": 46, "match": [9, 22], "matrixeditor": 4, "max_siz": 15, "maximum": 15, "mean": [15, 29, 41, 44], "meaningless": 47, "meant": 38, "measur": [12, 18, 24, 25, 27, 30, 40, 41, 43], "mechan": 29, "member": [16, 18, 41, 47], "memori": [3, 9, 11, 12, 16, 26, 45, 47, 48], "memoryview": [9, 11, 12, 46], "mention": [40, 41, 46], "mere": 46, "messag": 8, "meta": 43, "metamorphosi": 43, "method": [7, 9, 12, 15, 16, 18, 26, 29, 39, 40, 42, 44, 46], "metr": 46, "mgk": 7, "might": [40, 45, 46, 47], "million": [24, 25, 27, 30], "mimic": 41, "minim": [31, 41, 43, 47], "minu": 12, "minut": 47, "miss": 41, "mix": 12, "mixin": [7, 12, 26], "mod": 23, "mode": [4, 11], "mode_arg": 11, "model": [3, 9, 13, 16, 39, 42, 43, 44, 45, 47, 48], "modif": 5, "modifi": [12, 15], "modul": [6, 18, 20, 21, 26, 39, 41, 42, 45, 47], "modular": 41, "month": 47, "more": [3, 13, 16, 39, 41, 43, 44, 45, 46, 47, 48], "moreov": 48, "most": [15, 41, 45, 47], "moth": 43, "move": [41, 47], "mozilla": 47, "mrcrowbar": 43, "msc": 43, "much": [41, 45, 47], "multipl": [7, 12, 19, 40, 41, 46], "multipli": 45, "must": [9, 12, 16, 18, 26, 34, 41, 44, 45, 46, 47], "n": [3, 9, 45], "name": [3, 4, 5, 6, 7, 15, 16, 18, 20, 21, 37, 39, 40, 42, 43, 45], "name1": 43, "name2": 43, "namespac": 38, "nativ": [4, 6, 18, 39, 40, 45], "navig": [3, 48], "nbyte": 29, "ndarrai": 16, "necessari": [15, 22, 39, 41, 45, 47], "need": [1, 3, 4, 15, 16, 39, 41, 43, 44, 45, 46, 47, 48], "nest": [19, 41], "netendian": 6, "network": 6, "never": [3, 12], "new": [2, 15, 16, 18, 21, 25, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45], "newli": 40, "next": [1, 12, 18, 41, 46, 48], "nibarch": [16, 41], "nibhead": 41, "none": [5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 41, 45, 46], "nor": 41, "normal": [3, 16, 41, 44], "notabl": 45, "note": [7, 12, 15, 18, 31, 40, 42, 43, 46, 47], "noth": [42, 46], "notic": 16, "notimpl": 18, "notimplementederror": [9, 12], "now": [26, 39, 41, 42, 43, 45, 46, 47], "null": [12, 18, 21, 22, 26, 31, 32, 33, 34, 35, 38, 39, 40, 46], "num1": 43, "num2": 43, "num2_hi": 43, "num2_lo": 43, "num4": 43, "number": [12, 29, 38, 41, 47, 48], "numer": 13, "numpi": 16, "o": [18, 39, 45], "o1": 16, "o2": 16, "o_array_factori": 16, "ob_pack": 26, "ob_unpack": 26, "obj": [3, 5, 6, 9, 10, 11, 12, 15, 16, 40, 41, 45, 47], "object": [3, 5, 6, 7, 9, 15, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 40, 42, 43, 44, 45, 47, 48], "obvious": 20, "occupi": [3, 16, 41, 46], "occur": [18, 21, 31, 32, 33, 34, 35, 38, 39, 40, 44], "off": 43, "offer": [41, 48], "offici": 41, "offset": [12, 34, 41, 44, 48], "often": [3, 46], "ok": 45, "okai": [45, 46], "older": 41, "onc": [9, 39, 41], "one": [6, 12, 16, 18, 20, 24, 25, 27, 30, 31, 39, 41, 43, 45, 46, 47], "ones": 41, "onli": [3, 7, 12, 16, 20, 40, 41, 43, 44, 45, 46, 47], "op": [22, 23, 26, 31, 32, 33, 34, 35, 37, 38, 39, 40], "open": 1, "oper": [3, 7, 8, 9, 11, 12, 15, 26, 29, 31, 41, 42, 46, 48], "operand": [7, 41, 45], "opt": [16, 47], "optim": [3, 29, 41, 47], "option": [3, 4, 8, 11, 12, 14, 15, 22, 36, 39, 41, 42, 43, 44, 45, 47, 48], "optionerror": 8, "order": [6, 12, 15, 41, 43, 45, 46, 47], "org": 43, "organ": 47, "organiz": 41, "origin": [1, 9, 12, 16, 39, 45], "other": [6, 7, 12, 14, 18, 26, 41, 43, 44, 45, 46, 47], "otherwis": [9, 16, 18, 23, 34, 39], "our": [12, 16, 41, 45, 46, 47], "out": [4, 46], "outcom": 41, "outer": 15, "output": [9, 16, 41], "output_strip_trailing_whitespac": 20, "output_vari": 20, "over": [40, 42, 45], "overal": [16, 45], "overhead": [29, 41], "overload": 48, "overrid": 45, "overview": [41, 43, 44], "own": [18, 39, 45, 46], "p": 9, "pack": [3, 5, 9, 11, 12, 15, 16, 18, 19, 24, 25, 26, 27, 29, 30, 38, 41, 42, 43, 44, 45, 46, 48], "pack_fil": [15, 45], "pack_into": 15, "pack_many__": 40, "pack_seq": [9, 12], "pack_singl": [9, 11, 12], "packag": [4, 19, 20], "packfunc": 26, "pad": [9, 11, 16, 28, 36, 41, 42, 43, 45, 48], "padding_arg": 11, "paddingatom": 30, "paddingbit": 43, "page": 3, "pakt": 43, "paramet": [5, 6, 7, 9, 10, 11, 12, 15, 16, 40, 41, 45], "paramount": 41, "parent": [7, 20, 35, 41, 46], "parenthes": 41, "pars": [8, 9, 10, 12, 31, 38, 40, 41, 43, 44, 45, 46], "parser": [3, 43, 45], "part": [4, 44], "partial": [15, 41, 45], "particularli": 41, "pascal": 46, "pascalstr": 43, "pascalstring8": 43, "pass": [9, 15, 38, 39, 41, 44, 45, 48], "path": [14, 19, 35, 36, 40, 42, 45, 46], "pep": 39, "per": [9, 16, 41], "perfect": 43, "perform": 43, "persist": 12, "phy": [45, 46, 47], "physchunk": [45, 46, 47], "physunit": 46, "pip": [4, 20, 46], "pipelin": 45, "pixels_per_unit_i": [46, 47], "pixels_per_unit_x": [46, 47], "place": [16, 26, 41, 44, 45], "placehold": 41, "placement": 41, "plai": [43, 46], "pleas": [1, 20, 41, 42], "plte": [45, 46, 47], "pltechunk": [45, 46], "png": [45, 46, 47], "pngchunk": [45, 47], "po": [15, 38, 41], "point": [41, 43, 46, 47, 48], "pointer": [6, 40, 48], "pose": 41, "posit": [12, 15, 38, 41, 44, 45], "possess": 41, "possibl": [3, 9, 15, 16, 39, 41, 44, 45, 46, 47], "post": 11, "potenti": 41, "power": [3, 41, 48], "pre": [38, 41, 45], "predefin": 41, "prefix": [3, 9, 43, 44, 45, 48], "prefixed_arrai": 44, "prepar": 15, "presenc": 18, "present": [16, 18, 39, 43, 47], "prevent": 41, "previou": 45, "previous": [41, 44, 45, 46], "primari": 43, "primit": [41, 46], "print": [3, 9, 46], "prior": 4, "privat": [20, 45], "pro": 42, "problem": [3, 38, 41, 43, 45], "proceed": 20, "process": [8, 11, 12, 22, 38, 40, 41, 43, 45, 46], "procotol": 19, "produc": 41, "program": 39, "progress": [20, 45], "project": [1, 4, 20, 45], "prompt": [46, 47], "proper": 18, "properti": [12, 46], "propos": [4, 44], "proprietari": [3, 46], "protocol": [17, 32, 34, 38, 39, 42], "provid": [1, 3, 4, 7, 12, 15, 18, 19, 20, 29, 40, 41, 42, 43, 44, 45, 46, 47, 48], "ptr_size": 6, "pull": 1, "purpos": [3, 16, 41], "push": 1, "put": [20, 43], "py": 43, "py_ssize_t": [34, 35, 38, 40], "pyinit__exampl": 20, "pymodinit_func": 20, "pymoduledef": 22, "pympler": 16, "pyobject": [18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40], "pyobject_head": 26, "pypi": 43, "pyproject": 20, "pytest": 1, "python": [3, 4, 9, 16, 18, 20, 29, 31, 32, 34, 38, 39, 40, 41, 43, 45, 46, 47, 48], "python3": 43, "python_add_librari": 20, "python_execut": 20, "pytype_readi": 22, "pytypeobject": [18, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39], "q": 9, "qualifi": [40, 45], "qualnam": 6, "question": [2, 3, 43, 46], "quick": 43, "r": [43, 45, 47], "rais": [8, 9, 12, 41], "rang": [43, 46], "rapidli": 43, "rare": 46, "rather": [40, 41, 46], "raw": [44, 46], "re": [3, 44, 47], "reach": 44, "read": [8, 15, 22, 38, 43, 45, 46], "readabl": [3, 43], "reader": 44, "readi": [42, 46, 47, 48], "real": 46, "realli": [45, 46], "reason": 43, "receiv": 41, "recent": 45, "recommend": [3, 39, 40, 41, 42, 45, 46], "recreat": 47, "recurs": 44, "reduc": [16, 29], "ref": 43, "refer": [3, 4, 12, 13, 15, 18, 20, 21, 25, 31, 32, 33, 34, 35, 38, 39, 40, 41, 43, 45, 46, 48], "referenc": 46, "reflect": 43, "refresh": 41, "regard": [41, 43], "regular": 41, "rel": [15, 41], "relat": [8, 12, 16, 19, 41, 43], "relax": 47, "releas": 18, "relev": [41, 46], "reli": 41, "remomv": 15, "remov": [15, 16, 41, 42, 44, 47], "repeat": 43, "replac": [7, 16, 38, 39, 41, 44], "repo": 1, "repositori": [4, 43], "repres": [6, 7, 9, 10, 12, 15, 18, 24, 25, 27, 29, 30, 32, 33, 34, 41, 46, 48], "represent": [12, 41, 44], "reproduc": 47, "request": [1, 41, 44], "requir": [15, 16, 20, 40, 41, 43, 46, 47], "reserv": 45, "reset": 12, "resolut": 41, "resolv": [19, 41, 44], "resourc": [45, 47, 48], "result": [15, 16, 18, 19, 40, 41, 43, 44, 45], "retain": 46, "retriev": [6, 7, 12, 16, 19, 33, 41, 44, 46], "return": [5, 6, 9, 10, 11, 12, 15, 16, 18, 20, 21, 22, 23, 25, 26, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46], "revers": [3, 43], "revisit": 46, "rgb": [46, 47], "rhello": 46, "right": [7, 31, 41, 45], "risk": 41, "robust": 48, "role": [46, 47], "root": [22, 40, 41], "rp": 43, "rule": 40, "run": [2, 4], "runtim": [14, 15, 29, 43, 48], "s_discard_const": 16, "s_discard_unnam": [16, 41, 45], "s_eval_annot": [16, 41], "s_replace_typ": [16, 41, 47], "s_slot": [16, 47], "s_union": 16, "safe_to_copi": 45, "same": [31, 41, 44, 45, 46, 47], "sampl": [45, 46], "save": 47, "scenario": [41, 43, 46], "schema": 16, "scheme": 11, "scikit": 20, "scope": 16, "score": 43, "search": [3, 18, 39], "sec": 43, "second": [24, 25, 27, 30, 47], "section": [13, 41, 42, 44, 45, 46, 47], "secur": 41, "see": [40, 45], "seek": [22, 38], "seen": 46, "select": 41, "self": [18, 19, 24, 25, 26, 27, 30, 39, 41, 43, 44], "seq": [9, 12, 16, 40, 43, 44], "seq_greedi": 40, "seq_length": 40, "sequenc": [9, 12, 15, 35, 40, 42, 48], "sequence_numb": 46, "sequent": 12, "sequenti": [12, 40, 46], "serial": [15, 40, 41, 47], "serv": [13, 41, 43, 46], "set": [6, 9, 12, 15, 16, 20, 22, 26, 35, 38, 39, 41, 44, 46, 48], "set_field_flag": 16, "set_struct_flag": [16, 47], "set_union_flag": 16, "setattr": 15, "setup": 20, "seven": 16, "sever": [4, 41, 43, 45], "share": 45, "shareabl": 43, "shift": 45, "ship": 4, "shortcut": [41, 43, 44, 46, 47], "should": [6, 12, 15, 16, 18, 19, 31, 39, 40, 41, 43, 45, 46], "show": [16, 43], "showcas": 45, "shown": 41, "shrink": 3, "side": 45, "sidenot": 45, "sign": [9, 29, 46], "signifi": 29, "signific": [9, 41], "similar": [41, 43, 45, 47], "similarli": 41, "simpl": [3, 12, 16, 26, 31, 37, 41, 45, 46, 47], "simpli": [1, 4, 18, 43, 45, 46, 47], "simplic": 43, "simplifi": 46, "simul": [15, 41], "sinc": [18, 41, 43, 46], "singl": [9, 11, 12, 19, 41], "singular": 41, "situat": [15, 41, 45, 46], "six": 31, "size": [3, 5, 6, 8, 12, 15, 18, 29, 38, 40, 41, 43, 48], "size_t": [9, 46], "skbuild_project_nam": 20, "skim": 48, "slice": [12, 41, 44], "slotsclass": 16, "slow": 45, "slower": 43, "small": [43, 45], "snippet": 47, "so": [3, 4, 18, 34, 41, 44, 46], "sole": [29, 41], "solut": [46, 47], "solv": [38, 45], "some": [1, 15, 40, 41, 42, 43, 44, 45, 46], "someon": 45, "someth": 18, "sourc": [3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 20, 45], "space": [3, 16, 41, 46, 47], "speak": 43, "special": [3, 13, 14, 16, 18, 19, 29, 38, 42, 44, 45, 48], "specialis": 15, "specif": [4, 13, 15, 16, 18, 40, 42, 43, 45, 46, 48], "specifi": [4, 6, 7, 9, 11, 12, 15, 33, 39, 41, 44, 45, 46, 47], "speed": 40, "sperat": 19, "sphinx": [3, 41, 47], "split": 44, "src": 20, "ssize_t": [9, 46], "stabl": 43, "stack": 7, "stackoverflow": 47, "stage": 46, "standard": [3, 6, 13, 14, 42, 45, 48], "start": [6, 22, 40, 41, 42, 43, 45, 46, 47, 48], "state": [18, 22, 32, 35, 36, 39, 40, 42, 44, 45, 47], "statement": [12, 41], "static": [15, 26, 41, 43, 44, 46], "statu": 15, "stdin": 45, "step": [20, 48], "still": [1, 3, 4, 41, 42, 46], "stop": [8, 44], "storag": 41, "store": [12, 15, 16, 22, 31, 37, 38, 39, 40, 41, 44, 45, 46], "str": [6, 7, 8, 9, 12, 15, 16, 43, 45], "str___annotations__": 22, "str___dict__": 22, "str___match_args__": 22, "str___mro__": 22, "str___pack__": [18, 22], "str___pack_many__": 22, "str___qualname__": 22, "str___size__": 22, "str___slots__": 22, "str___struct__": 22, "str___type__": 22, "str___unpack__": 22, "str___unpack_many__": 22, "str___weakref__": 22, "str_builder_process": 22, "str_bytesio_getvalu": 22, "str_close": 22, "str_ctx__getattr": 22, "str_ctx__root": 22, "str_path_delim": 22, "str_pattern_match": 22, "str_read": 22, "str_seek": 22, "str_start": 22, "str_strict": 22, "str_tell": 22, "str_write": 22, "straightforward": [3, 41], "stream": [5, 9, 12, 15, 18, 38, 41, 43, 44, 45, 46, 47], "streamerror": 8, "strict": 22, "string": [3, 6, 12, 13, 16, 18, 22, 41, 45, 48], "stringifi": 16, "stringinputstream": 43, "stringiz": 41, "strip": 46, "struct": [3, 4, 6, 7, 8, 12, 13, 22, 26, 36, 37, 40, 42, 43, 45, 48], "struct_": [15, 39], "struct_field": 5, "structcontain": 39, "structexcept": 8, "structur": [3, 5, 8, 11, 12, 15, 18, 20, 34, 41, 43, 44, 45, 46, 48], "strz": 43, "style": [7, 32], "sub": [41, 45], "subclass": [9, 12, 26, 39, 41, 44], "subject": [4, 18, 41, 42, 45], "submit": 2, "submodul": 44, "subsequ": 41, "succe": 34, "success": [35, 38, 39, 40], "successfulli": 46, "suce": 39, "suggest": [1, 41], "summari": 41, "suppli": 41, "support": [3, 4, 5, 8, 12, 13, 15, 18, 19, 26, 31, 40, 41, 43, 44, 45, 46, 48], "sure": [4, 26], "switch": [5, 12, 34, 41, 42, 43, 48], "sy": 16, "synchron": [41, 45], "syntact": 41, "sysn": [6, 12], "system": [6, 20, 23, 41], "system_arch": 6, "t": [3, 4, 15, 16, 18, 26, 40, 41, 43, 44, 45, 46, 47], "tabl": 16, "tag": [1, 43], "tail": [12, 45], "tailor": 45, "take": [3, 5, 6, 16, 41, 44, 45, 46, 47], "taken": 47, "target": [15, 18, 20, 41], "target_include_directori": 20, "task": [41, 43], "tbd": 12, "technic": 47, "techniqu": [41, 45, 46], "tell": 22, "templat": [14, 48], "template_ti": 15, "templatetypevar": [15, 41, 45], "temporari": 44, "temporarili": [41, 44, 45], "termin": 46, "test": [2, 43], "text": [9, 45, 46], "textchunk": [45, 46], "textual": 46, "th": 45, "than": [16, 39, 40, 41, 44, 45, 47], "thank": 47, "thats": 47, "thei": [15, 16, 39, 41, 45, 47], "them": [38, 41, 44, 46, 47], "themselv": [41, 43], "therefor": [4, 9, 15, 16, 39, 40, 41, 44, 45], "thi": [1, 3, 4, 7, 8, 9, 12, 13, 15, 16, 18, 19, 20, 22, 26, 29, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48], "think": 41, "third": 41, "those": [43, 44, 48], "though": [43, 44], "thousand": 43, "three": [41, 44, 46, 47], "through": [3, 12, 41, 48], "throw": [15, 45], "thrown": 44, "time": [1, 3, 41, 42, 43, 45, 46, 47], "timechunk": [45, 47], "timeit": 43, "to_byt": 29, "todo": [2, 7, 11, 15, 16, 23, 24, 25, 27, 29, 30, 35, 41, 43, 44, 45], "togeth": 18, "toml": 20, "too": [4, 46], "tool": [4, 20], "top": [41, 44], "topic": [46, 47], "total": 16, "touch": 3, "tox": 1, "tp_alloc": 26, "tp_base": 26, "traceback": [1, 45], "track": 46, "trade": 43, "tradit": 41, "trail": 46, "transform": [9, 10, 45], "translat": [12, 15, 31], "translated_keyword": 46, "travel": 12, "treat": 41, "tri": [41, 44], "tricki": [41, 44], "trigger": 46, "true": [5, 9, 12, 15, 16, 29, 41, 45], "try": [39, 41, 46, 47], "turn": 44, "tutori": [3, 42, 43, 45, 46, 47], "two": [15, 16, 41, 44, 45, 47], "txt": 20, "ty": 9, "type": [5, 6, 9, 11, 12, 13, 14, 15, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 48], "type_": [9, 11], "typeerror": 45, "typeof": 5, "typic": 41, "tys_arg": 15, "tys_kwarg": 15, "u": [45, 46], "u1": 43, "u2": 43, "u4": 43, "uint": [9, 43, 46], "uint16": [3, 9, 41, 44, 45, 46, 47], "uint24": [43, 46], "uint24_l": 43, "uint32": [3, 7, 9, 12, 41, 43, 44, 45, 46, 47], "uint32_l": 43, "uint64": [9, 46], "uint8": [7, 9, 12, 16, 41, 43, 44, 45, 46, 47], "uintptr": 45, "un": 40, "unari": [7, 36, 42], "unaryexpress": 7, "undefin": 41, "under": [24, 25, 27, 30, 41], "undergo": [41, 43], "underli": [8, 12, 39, 41, 44], "underscor": 41, "understand": [45, 46, 47], "unicod": 18, "unintend": 45, "union": [7, 10, 11, 12, 15, 16, 48], "union_typ": 22, "unionhook": [15, 45], "unit": [46, 47], "univers": 47, "unknown": [44, 46], "unless": 46, "unlik": [29, 40], "unnam": [16, 39, 41, 45], "unnecessari": [40, 47], "unnecessarili": 45, "unpack": [3, 5, 9, 11, 12, 15, 16, 18, 19, 24, 25, 26, 27, 29, 30, 38, 41, 42, 43, 44, 45, 46, 48], "unpack_fil": [15, 45], "unpack_seq": [9, 12], "unpack_singl": [9, 11, 12], "unpackfunc": 26, "unsign": [9, 29, 46, 47], "unsupport": [8, 45], "unsupportedoper": 8, "until": [41, 44, 45], "untrust": 16, "unus": 41, "up": [1, 22, 43, 47], "upcom": 47, "updat": [12, 16], "upon": [45, 48], "upper": 45, "us": [1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 32, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48], "usabl": 41, "usag": 45, "use_tempfil": 15, "user": [3, 16, 42, 43, 44, 45, 47, 48], "usual": [3, 18, 41, 46], "utf": [9, 43, 46], "utf8": 43, "util": [29, 40, 41, 43, 47], "uuid": 16, "v": [20, 43], "v3": 43, "valid": [8, 18, 40, 46], "validationerror": [8, 9], "valu": [3, 5, 6, 7, 8, 9, 12, 15, 16, 18, 19, 21, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47], "variabl": [4, 9, 15, 19, 38, 41, 44, 45, 48], "variant": 39, "varint": [9, 46], "varint_lsb": 9, "variou": 44, "ve": [1, 42, 45, 47], "venv": 43, "verif": 41, "verifi": 38, "version": [4, 20, 41, 45], "via": [4, 46], "view": 12, "vint": [9, 46], "visibl": [16, 41], "visit": 42, "vm": 43, "void": [20, 22, 32, 35], "void_ptr": [9, 46], "wa": [16, 39, 41, 43, 45, 46, 47], "wai": [3, 41, 46], "want": [3, 4, 42, 43, 44, 45, 46], "warm": 47, "wasn": 41, "we": [15, 16, 38, 41, 43, 44, 45, 46, 47], "well": [12, 16, 18, 41, 44, 45, 48], "were": 1, "what": [1, 3, 15, 41, 45, 46], "whatev": 45, "when": [3, 8, 20, 40, 41, 43, 44, 46, 47], "whenc": 38, "where": [4, 12, 15, 41, 43, 44, 45, 46], "wherebi": [15, 16], "whether": [6, 12, 15, 16, 19, 29, 34, 40, 41], "which": [6, 9, 12, 18, 26, 32, 41, 44, 46, 47], "while": [3, 18, 19, 29, 31, 41, 43, 46, 47], "why": [41, 42], "wide": [41, 47], "width": 41, "wiki": 43, "wikipedia": [43, 47], "win32": 43, "window": 43, "wip": 14, "wish": 4, "with_soabi": 20, "with_union": 16, "within": [8, 12, 15, 40, 41, 44, 46], "without": [3, 20, 41, 44], "won": [16, 18, 40, 41, 45, 46, 47], "work": [3, 7, 18, 19, 20, 41, 45, 46, 48], "workaround": 41, "workflow": 40, "world": [3, 45, 46], "wormlik": 43, "worri": 3, "worth": 46, "would": [1, 18, 40, 44, 45, 46], "wow": 47, "wrap": [9, 45, 47], "wrapper": [15, 39, 41], "write": [3, 8, 15, 20, 22, 38, 41, 44, 45, 46, 48], "written": [20, 41, 44, 45], "x": [9, 41, 44], "x00": [3, 9, 16, 41, 45, 46], "x00baz": 3, "x01": [29, 46, 47], "x02": [29, 46, 47], "x02bar": 3, "x03": [46, 47], "x04": 46, "x04hello": 45, "x08": 9, "x0a": [45, 46], "x0d": [45, 46], "x1a": [45, 46], "x80": 9, "x86": 45, "x86_64": 6, "x88": 9, "x89png": [45, 46], "xff": 16, "xor": 44, "ye": [41, 45], "year": 47, "yet": [41, 46, 47], "yield": 43, "you": [1, 3, 4, 15, 16, 20, 26, 39, 41, 42, 43, 44, 45, 46, 47, 48], "your": [1, 16, 20, 26, 41, 43, 45, 46, 47, 48], "yourself": 46, "zero": [9, 12, 16, 41], "zlib": [10, 46], "zlibcompress": [10, 44, 45, 46], "ztxt": [45, 46], "ztxtchunk": [45, 46], "\u00e6": 43, "\u0259": 43, "\u026a": 43, "\u02c8": 43}, "titles": ["<span class=\"section-number\">2. </span>Changelog", "<span class=\"section-number\">1. </span>Contribution Guidelines", "Development", "Welcome to Caterpillar\u2019s documentation!", "Installation", "Abstract base classes", "Byteorder and Architecture", "Context", "Exceptions", "Common Structs", "Compression Structs", "Cryptographic Structs", "Field Model", "Fields", "Library", "Struct Model", "Options", "<span class=\"section-number\">1. </span>Abstract Objects Layer", "<span class=\"section-number\">1.1. </span>Atom Protocol", "<span class=\"section-number\">1.2. </span>Context Protocol", "<span class=\"section-number\">6. </span>Using the C API", "<span class=\"section-number\">4. </span>Defined Macros", "<span class=\"section-number\">5. </span>Module API", "<span class=\"section-number\">2.1. </span>Arch &amp; Endian Objects", "<span class=\"section-number\">2.10.5. </span>Bool Atoms", "<span class=\"section-number\">2.10.3. </span>Char Atoms", "<span class=\"section-number\">2.10.1. </span>Field Atom Objects", "<span class=\"section-number\">2.10.4. </span>Float Atoms", "<span class=\"section-number\">2.10. </span>Atom Objects", "<span class=\"section-number\">2.10.2. </span>Integer Atoms", "<span class=\"section-number\">2.10.6. </span>Padding Atoms", "<span class=\"section-number\">2.4. </span>Context Expressions", "<span class=\"section-number\">2.3. </span>Context Objects", "<span class=\"section-number\">2.5. </span>Context Path Objects", "<span class=\"section-number\">2.8. </span>Field Objects", "<span class=\"section-number\">2.7. </span>Layer Objects", "<span class=\"section-number\">2. </span>Concrete Objects Layer", "<span class=\"section-number\">2.2. </span>Option Objects", "<span class=\"section-number\">2.6. </span>State Objects", "<span class=\"section-number\">2.9. </span>Struct Objects", "<span class=\"section-number\">3. </span>Packing and Unpacking", "Data Model", "Reference", "Introduction", "Operators", "<span class=\"section-number\">3. </span>Advanced Concepts", "<span class=\"section-number\">2. </span>Basic Concepts", "<span class=\"section-number\">1. </span>First Steps", "Tutorial"], "titleterms": {"": [3, 41, 44], "The": 45, "abstract": [5, 17], "advanc": 45, "an": 1, "api": [20, 22, 42], "appetit": 3, "arch": 23, "architectur": 6, "arrai": 46, "atom": [18, 24, 25, 26, 27, 28, 29, 30], "attribut": 7, "base": [5, 15], "basic": [10, 14, 46], "behaviour": 41, "between": 16, "binari": 31, "bitfield": [41, 45], "bool": 24, "byte": [9, 46], "byteord": [6, 41], "c": [20, 26, 42], "caterpillar": [3, 43], "chain": 45, "challeng": [46, 47], "changelog": 0, "char": 25, "class": [5, 7, 14, 15], "common": 9, "comparison": 43, "compress": [10, 46], "comput": 46, "con": 43, "concept": [45, 46], "concret": 36, "condit": 45, "configur": [16, 47], "const": 46, "constant": 46, "constbyt": 46, "contain": 41, "content": 13, "context": [5, 7, 14, 19, 31, 32, 33, 41, 44, 46], "contribut": 1, "core": [11, 14], "cryptograph": 11, "cstring": 46, "custom": [41, 45, 46], "data": [41, 47], "defin": [21, 47], "detail": 41, "develop": [2, 41, 44], "differ": 16, "document": [3, 47], "doe": 43, "emul": 41, "end": 45, "endia": 47, "endian": 23, "enumer": 46, "even": 43, "exactli": 43, "except": [8, 14], "express": [7, 31], "featur": 1, "field": [12, 13, 16, 26, 34, 41, 44, 45], "first": 47, "float": 27, "formal": 8, "function": 15, "gener": 1, "global": 16, "greedi": 41, "guidelin": 1, "have": 1, "hold": 3, "how": 43, "i": [43, 47], "implement": 41, "indic": 3, "instal": 4, "integ": [29, 46], "interfac": [5, 11, 16], "introduct": 43, "issu": 1, "lambda": 41, "layer": [17, 35, 36], "length": 46, "librari": 14, "list": 46, "macro": 21, "memori": 46, "method": 41, "minut": 3, "model": [12, 14, 15, 41], "modifi": 41, "modul": 22, "name": 41, "new": 1, "next": 47, "note": [41, 44], "number": 46, "numer": 9, "object": [16, 17, 23, 26, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 46], "offset": 45, "oper": [44, 45], "option": [16, 37], "other": 5, "pack": [40, 47], "pad": [30, 46], "pass": 46, "path": [7, 33, 41, 44], "perform": [24, 25, 27, 30], "pointer": 45, "prefix": [41, 46], "pro": 43, "programm": 41, "protocol": [18, 19], "python": [26, 42], "question": 1, "recommend": 29, "refer": 42, "roadmap": 48, "run": 1, "runtim": [8, 24, 25, 27, 30, 46], "sequenc": [16, 41, 44, 46], "size": [16, 46], "special": [7, 9, 41, 46], "specif": [41, 44], "standard": [5, 11, 15, 41, 46], "start": 3, "state": 38, "step": 47, "string": [9, 46], "struct": [5, 9, 10, 11, 14, 15, 16, 39, 41, 44, 46, 47], "submit": 1, "support": 10, "switch": 45, "tabl": 3, "templat": [15, 41, 45], "test": 1, "thi": 43, "tutori": 48, "type": [10, 16, 41, 46], "unari": 31, "union": [41, 45], "unpack": [40, 47], "up": 3, "us": [20, 43], "variabl": 46, "wait": 3, "welcom": 3, "what": [43, 47], "where": 3, "whet": 3, "why": 43, "work": [43, 47], "your": 3}})